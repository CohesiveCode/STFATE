      PROGRAM DMF(INPUT,OUTPUT,IAPE5 =INPUT,1APE6=UUTPUT,1APE7)
        ! THIS IS DUMMY MAIN PROGRAM TO SET BLANK COMMON STORAGE POINTERS
        ! DREDGED MATERIAL FA IE...INSTANTANEOUS BOTTOM DUMP...
      ! FOR LONG TERM ARRAYS, SOLIDS ARRAY AND SMALL CLOUDS ARRAYS
      COMMON/DIMFN/ NS,NSP1,NVL,NSC
      COMMON A<t)
      COMMON A(SET DIMENSIONsNEED)
      REWIND 7
      READ(5,15) NMAX,MMAX,NS,NVL,NSC
   15 FORMATU6I5)
C      NMAX-LONG TERM ARRAY DIMENSION IN Z-DIRECTION
C      MMAX-LONG TERM ARRAY DIMENSION IN X-DIRECTION
C      NS-NUMBER OF SOLID FRACTIONS
C      NVL-NUMBER OF VELOCITY PLANES
C      NSC-MAXIMUM NUMBER OF SMALL CLOUDS ALLOWED
C      SET ARRAY POINTERS
      NSP1=NS+1
      LDIM=NMAX*MMAX
      Nl=1                                                               X
      N2=N1+LDIM                                                         Z
      N3=N2+LDIM                                                         DEPTH
      N4=N3+LDIM                                                         ICODE
      N5=N4+LDTM                                                         CP
      N6=N5+LDIM                                                         THICKP
      N7=N6+LDIM                                                         TOPP
      N8=N7+LDIM                                                         SUM
      N9=N8+LDIM                                                         C
      N10=N9+LDIM                                                        THICK 
      Nll=N10+LDIM                                                       TOP
      N12=N11+LDIM                                                       ACCUM
      N13=N12+LDIM*NS                                                    U
      N14=N13+LDIM*NVL                                                   W
      N15=N14+LDIM*NVL                                                   SS
      N16=N15+600*NS                                                     TSIDE
      N17=N16+NSC                                                        TTHK
      N18=N17+NSC                                                        TTOP
      N19=N18+NSC                                                        TMASS
      N20=N19+NSC                                                        TX                                                         
      N2l=N20+NSC                                                        TZ
      NEED=N21+NSC                                                        
C      OTHERS
C      FIND PRESENT FIELDLENGTH, ADD LENGTH OF ARRAYS(NEED) AND REQUEST  CDC ONLY
C      NEW FIELD LENGTH                                                  CDC ONLY
      LENF=MEMGET(65B) +1                                                CDC ONLY
      NEWLEN=LENF+NEED                                                   CDC ONLY
      WRITF(6,25) NMAX,MMAX,NS,NVL,NSC,NEED
   25 FORMAT(/////10X,39HSTORAGE ALLOCATION PARAMETERS FOLLOW.../10X,
      1 4HNMAX,1X , 4HMMAX,3X,2HNS,2X,3HNVL,2X,3HNSC,4X,4HNEED/1OX,13,2X
      2, I3,4X,12,IX,I3,2X,I3,2X, 16 )
      CALL XRFL(NEWLEN)                                                  CDC ONLY
C                                                                        CDC ONLY      
      CALL MAIN(A(N1),A(N2),A(N3),A(N4),A(N5),A(N5),A(N6),A(N7),A(N8)
      1, A(N9),A(N10),A(N11),A(N12),A(N13),A(Ml 4),A(N15),A(N16),A(N17)
      2, A(N18),A(N19),A(N20),A(N21),NMAX,MMAX)
      CALL EXIT
      END

      SUBROUTINE MAIN(X,Z,DEPTH,1CODE,CP,COUT,THICKP,TOPP,SUM,C,THICK
      1, TOP,ACCUM,U,W,SS,TSIDE,TTHK,TTOP,TMASS,TX,TZ,NMAX, MMAX)
C      MAIN PROGRAM
      COMMON/D1MENZ NS,NSP1,NVL,NSC
      DIMENSION COUT(NMAX,1),SUM(NMAX,1),C(NMAX,1),THICK(NMAX,1)
      1, TOP(NMAX,1),ACCUM(NMAX,1)
      COMMON/DPASS/ NPASS,MPASS
      COMMON/PAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/GUTDE1/ TDUMP,TSTOP,I STEP,IPLUNG,NUTRL,NTRI AL,ILEAVE,
      1, KEY1, KEY2, KEY3
      COMMON/GUIDE2/NIND,NLINE(150),MF(150),ML(150)
      COMMON/AMH/
      NROA,IY,Y(10),ROA(10),H
      COMMON/CLOUD/ T(600),CX(600),CY(600),CZ(600),CU(600),CV(600)
      1, CW(600),DENDIF(600),BC(600),AA(600),FC(600),VF
      COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
      COMMUN/GPIZ G,PI
      COMMON/CHECK/TOTAL
      COMMON/LOST/ GONE
      COMMON/USERDT/ KEY4,DT1U,DT2U
      COMMON/GP/IGCN,IGCL,IGLT,IPCN,IPCL,IPLT
      COMMUN/FLFE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
      COMMONZPZ PRT
      LOGICAL PRT
      DIMENSION ID(fi),TPRT(12)
C
      DATA G,PI /32.2,3,14159/                                           NON-ANSI
      DATA TPRT/12*0./                                                   NON-ANSI
      DATA ITD/1/,(DC(I),I=1,6)/0.1,.01,.001,.0001,.00001,1.E-30/        NON-ANSI
      NPASS=NMAX
      MPASS=MMAX
      CALL SECOND(Tl)
      WRITE(6,5)
    5 FORMAT(1H1//10X,59HFATE OF DREDGED MATERIAL DEPOSITED IN AN ESTUA
      1RY BY DUMPING)
      READ EXECUTION MANAGEMENT PARAMETERS
      READ(5,15) KEY1,KEY2,KEY3,KEY4
      READ(5,15) IGCN,IGCL,IPCN,IPCL,IPLT
   15 FORMAT (16I5)
      WRITE(6,25) KEY1,KEY2,KEY3,KEY4,IGCN,IGCL,IPCN,IPCL,IPLT
   25 FORMAT(//1OX,30HEXECUTION PARAMETERS FOLLOW.../10X,52HKEYl
      KEY2 1KEY3 KEY4 IGCN IGCL IPCN IPCL IPLT /7X,10I6 )
C      
C      READ ALPHAMERIC IDENTIFICATION FOR THIS RUN
      READ(5,35)ID
   35 FORMAT(8A10)
      WRITE(6,10S) ID
!   105 FORMAT(8(/),1OX,8A10,////
C      DEFINE ESTUARY GEOMETRY AND ARRAYS GOVERNING LONG TERM COMPUTATION
      CALL ESTGEO(DFPTH,ICODE,NMAX,MMAX)
      
C      READ DUMP LOCATION COORDINATES AND DENSITY STRUCTURE ,,,
C      ,,,ALSU NUMBER OF VELOCITY LAYERS AND LOG PROFILE INDICATOR
      CALL AMBC(DEPTH,NMAX)
 
C      READ TIME OF DUMP(W/R TO START OF TIDAL CYCLE), DURATION OF
C      SIMULATION, AND TIME STEP IN LONG TERM
      READ(5,45) TDUMP,TSTOP,DTL
   45 FORMAT(8E10.0)
      WRITE(6,125) TDUMP,TSTOP,DTL
  125 FORMAT(///10X,25HTIME PARAMETERS FOLLOW.../10X,15HTIME OF DUMP Â« t
      1 FIO.2,35H SECONDS AFTER START OF TIDAL CYCLE/10X,25HDURATION OF S
      2IMULATION x ,F10.2,19H SECONDS AFTER DUMP/10X.28HLONG TERM TIME ST
      3EP (DTL) a ,F10.2,8H SECONDS,6()) 
C     USED TO BE 6(/)      
      IF(KEY4 .EQ. 0) GO TO 124
      READ(5,45) DT1U,DT2U
      WRITE(6,119) DT1U,DT2U
  119 FORMAT(/////10X,40HINTEGRATION TIME STEPS SPECIFIED BY USER /10X
      1, 14HIN DUMP, DT = ,G14.5,5X,16HIN COLAPS, DT = ,G14.5)
  124 CONTINUE
C  
C  
C  SET PRINTING TIMES ACCORDING TO IPLT
      IF(IPLT)150,150,170
C     HERE TO SET DEFAULT PRINTING TIMES
  150 DTP=TST0P/4.
      INCsDTP/DTL+.OOOl
      IF(DTP .LT. DTL) INC=1
      DTP=FLOAT(INC)*DTL
      DO 160 1=1,4
  160 TPRT(I)=FLOAT(I)*DTP
      IF(TPRU(4) .GT. TSTOP) TPRT(4)=TST0P
      GO TO 180
C      HERE TO SET USER SPECIFIED PRINTING TIMES
  170 CONTINUE
      READ(5,45)(TPRT(I),1=1,IPLT)
C
C      READ INITIAL VELOCITY FIELD
  180 CALL UW(0.,U,W,NMAX,MMAX)
C      CONVECTIVE DESCENT
      CALL DUMP(SS,U,W,DEPTH,NS)
      IND=NUTRL+IPLUNG

      IF(NTRIAL .EQ. 5 .AND. IND .EQ. 0) GO TO 700
      IF(EY2 .EQ. 1) GO TO 800
      IF(IPLUNG .EQ. 1) GO TO 250
C     CHECK DENSITY GRADIENT AT CLOUD LOCATION
      NN=NROA-1
      DO 200 1=1,NN
      IF(CY(1STF.P) .GE. Y(I) .AND. CY(ISTEP) .LE. Y(I+1)) DENGRA =
      1 ROA(1+1)-ROA(I)
  200 CONTINUE
      IF(DENGRA .GT. 1.0E-10) GO TO 250
      WRITE(6,205)
  205 FORMAT(1H1,10X,56HDENSITY GRADIENT = 0, GO DIRECTLY TO LONG TERM D
      1IFFUSION )
C      ....IF KEY2=2,TERMINATE COMPUTATION....
      IF(KEY2 .EQ. 2) 800,250
C      DYNAMIC COLLAPSE...
  250 CALL COLAPS(SS,U,W,DEPTH,NS)
      IF(NTRIAL .EQ. 5 .AND. NUTRL ,NE. 3) GO TO 700
      IF(KEY2 .EQ. 2) GO TO 800
C
C      LONG TERM DIFFUSION FOLLOWS.,...
C      DETERMINE NUMBER OF COMPLETE TIDAL CYCLES AND FRACTION OF LAST
C      TIDAL CYCLE TO RUN
      TSUM=(TDUMP+TSTOP)/3600.
      NCYCLE=TSUM/25.+.0001
      XS=TDUMP+TSTOP-25*3600.*FLOAT(NCYCLE )
      IF(NCYCLE .EQ. 0) NCYCLE=1
c      CLEAR SUM OF BOTTOM ACCUMULATION
      DO 260 Msi,MMAX
      DO 260 N=1,NMAX
  260 SUM(N,M)=0.
C
C     LOOP ON COMPONENTS
      DO 400 K=1,NSP1
      GONE=0.
      ETS=0.
      IF(K .EQ. NSP1 .AND. KEY3 .EQ*0) GO TO 400
      WRITE(6,2b5) PARAM(K)
  265 FORMAT(1H1//10X,38HBEGIN LONG TERM SIMULATION OF FATE OF ,A10)
C     CLEAR ARRAYS
      DO 270 M=1,MMAX
      DO 270 N=1,NMAX
      C(N,M)=0.
      THICK(N,M)=0.
      TOP(N,M)=0.
      ACCOM(N,M)=0.
  270 CONTINUE
C     DO BOOKKEEPING FOR MASS TRANSFER FROM SHORT TERM TO LONG TERM
      CALL BOOKS(K,SS,TSIDE,TTHK,TTOP,TMASS,TX,TZ,NS,DEPTH,ACCUM,U,W
      1, NMAX,MMAX,NSC)
      INDPRT=1
C
      DO 300 ICYCLE=1,NCYCLE
      IFST=1
      ILST=25.*3600 ./DTL + .0001
      IF(ICYCLE .EQ. 1) IFST=TDUMP/DTL + .0001
      IF(IFST ,LT. 1) IFST=1
      IF(ICYCLE .EQ. NCYCLE) ILST=XS/DTL + .0001
      DO 300 IDTL=IFST,ILST
C      ETS IS ELAPSED TIME FROM DUMP (IN SECONDS)
      ETS=ETS+DTL
C     UPDATE VELOCITIES
      CALL UW(ETS,U,W,NMAX,MMAX)
C     SET PRINT INDICATOR PRT
      PRT=.FALSE.
      IF(ABS(ETS-TPRT(INDPRT)) .GT. .01) GO TO 280
      PRTs=.TRUE.
      INOPRT=INDPRT+1
  280 CONTINUE
C     CALL ROUTINE TO MOVE AND DIFFUSE CLOUDS
      CALL MAD(K,ETS,X,Z,U,W,C,THICK,TOP,DEPTH,ACCUM,CP,THICKP,TOPP,CP
      I, ICODE,TSIDE,TTHK,TTOP,TMASS,TX,1Z,NMAX,MMAX)
      IF(TOTAL .LT. 1.0E-06) GO TO 310
  300 CONTINUE
C
      GO TO 330
  310 WR1TE(6,315) PARAM(K),ETS
  315 FORMAT(///18H COMPUTATIONS FOR ,A10,15H TERMINATED AT ,F10.2,
      1 48H SEC. ELAPSED TIME...MATERIAL SETTLED TO BOTTOM)
      330 CONTINUE
C
      IF (K .EQ. NSP1) GO TO 400
C     ....HERE SAVE TOTAL ACCUMULATION (ALL COMPONENTS)
      DO 340 M=1,MMAX
      DO 340 N=1,NMAX
  340 SUM(N,M)= SUM(N,M)+ACCUM(N,M)
C     PRINT FINAL ACCUMULATED VOLUME OF THIS COMPONENT
      DO 350 M=1,MMAX
      DO 350 N=1,NMAX
  350 COUT(N,M)sACCUM(N,M)
      CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,2,ICODE)
C     PRINT FINAL THICKNESS ACCUMULATION FOR THIS COMPONENT
      C1=(1,+VOIDS(K))/AREA
      DO 360 Msl,MMAX
      DO 360 N=1,NMAX
  360 COUT(N,M)sa CCUM(N,M)*
      CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,5,ICODE)
      400 CONTINUE
C
C     ...HERE PRINT TOTAL SOLID VOLUME (ALL COMPONENTS) ACCUMULATED
      WRITE(6,405)
  405 FORMAT(1 Hl,/////,10X,57HFINAL DISTRIBU1IONS OF TOTAL SETTLED MATER
      1IAL FOLLOW.....)
      DO 410 MSI,MMAX
      DO 410 Nsl,NMAX
  410 COUT(N,M)=SUM(N,M)
      CALL PRINTC(C0UT,NMAX,MMAX,PARAM(K),ETS,6,IC0DE)
      Ci=(l.+BVOID)/AREA
      DO 440 M=1,MMAX
      DO 440 Nsi,NMAX
  440 COUT(N,M)= SUM(N,M)*C1 
      CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,7,ICODE)
      IF(KEY3 .ED. 0) GO TO 800
      PRINT FINAL FLUID CONCENTRATIONS
      DO 450 M=1,MMAX
      DO 450 N=1,NMAX
  450 COUT(N,M)=C(N,M)
      CALL PRINTC(COUT,NMAX,MMAX,PARAM(NSP1),ETS,1,ICODE)
      DO 460 MSJ,MMAX
      DO 460 Nsi,NMAX
  460 COUT(N,M)=TOP(N,M)
      CALL PRINTC(COUT,NMAX,MMAX,PARAM(NSPi ),FTS,3,ICODE)
      DO 470 M=l,MMAX
      DO 470 N=1,NMAX
  470 COUT(N,M)sth ICK(N,M)
      CALL PRINTC(COUT,NMAX,MMAX,PARAM(NSPI),ETS,4,ICODE)
      WRITE(6,505) TRACER,CINIT,CBACK
  505 FORMAT(1H1/////10X,74HDILUTION -TIMES FOR CONSERVATIVE TRACER IN IN
      1ITIAL FLUID FRACTION FOLLOW,,,//10X,10HTRACE S ,A10,28H INITIA
      2L CONCENTRATION IS ,G15.7,36H MG/L BACKGROUND CONCENTRATION IS ,
      3 G15.7,5H MG/L )

      ITD=ITD-1
      DO 530 1=1,ITD
      IDL=1./DC(I)+.001
      WRITE(6,515) IDL,TD(I)
      515 FORMAT(1 OX,12HDILUTION IS ,I6,13H TO 1 WITHIN ,F10.3,19H SECONDS A
      1FTER DUMP  )
      530 CONTINUE
      WRITE(6,535)
  535 FORMAT(//1 OX, 54HDILUTION TIMES ARE FOR POINT OF MAXIMUM CONCENTRA
      1TION, )
      GO TO 800
C
  700 WRITE(6,705)
  705 FORMAT(//49H FIFTH SOLUTION TRIAL NOT SATISFAC10RYâCALL EXIT)
      CALL EXIT
  800 CALL SECOND(T2)
      T3=T2-T1
      WRITE(6,805)T3
  805 FORMAT(27H1RUN COMPLETED, CPU TIME = ,F7.3,5H SEC.)
      RETURN
      END

      SUBROUTINE ESTGEO(DEPTH,1CUDE,NMAX,MMAX)
C      ROUTINE TO DEFINE ESTUARY GEOMETRY AND CODED ARRAY
      DIMENSION DEPTH(NMAX,1),ICODE(NMAX,1)
      COMMON/BAY/ DX,DIL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/GUTDE2/NIND,NLINF(150),MF(150),ML(150)
      READ GRID SPACE STEP
      READ(5,45) DX
      45 FORMAT(8E10.0)
      WRITE(6,65 ) NMAX,MMAX,DX
      65 FORMAT(1 OX,56HNUMBER OF LONG TERM GRID POINTS IN Z-DIRECTIUN (NMAX
      1) = ,13//1 OX,56HNUMHER OF LONG TERM GRID POINTS IN X-DIRECTION (MM
      3AX) = ,I3//10X,20HGRID SPACING (DX) s ,F12.5)
C      SET CONSTANTS
      DXH=0.5
      DXR=1./DX
      AREA=DX**2
      READ DEPTHS
      DO 10 M=l,MMAX
   10 READ(5,15)(DEPTH(N,M),N=1,NMAX)
   15 FORMAT(16F5,0)
C      GENERATE CODED ARRAY
      IWPT=0
      DO 20 M=1,MMAX
      DO 20 N=1,NMAX
      ICODE(N,M)=1
      IF(DEPTH(N,M) .EQ, 0.)ICODE(N,M)=2
      IF(ICODE(N,M) .EQ. 2) GO TO 19
      IF(N.EQ. 1 .OR. N .EQ. NMAX .OR. M .EQ. 1 .OR. M ,EQ. MMAX)
      1     ICODE(N,M)=3
   19 IF(ICODE(N,M) .EQ. 1) IWPT=IWPT+1
   20 CONTINUE
C      GENERATE ARRAYS GOVERNING CALCULATIONS
      NIND=O
      DO 100 N=1,NMAX
      DO 100 M=1,MMAX
      IF(TCODE(N,M) ,NE. 1) GO TO 100
      1F(ICODE(N,M-1) .EQ. 1) GO TO 50
C      HERE TO START A LINE OF COMPUTATION
      NIND=NINDfl
      IF(NIND ,LT. 151) GO TO 40
      WRITE(6,28)
      28 FORMAT(//2X,111HARRAYS IN COMMON BLOCK /GUIDE2/ FILLED...CALL EXIT
      1...USER SHOULD INCREASE DIMENSIONS AND CHANGE CHECK STATEMENT )
      CALL EXIT
   40 CONTINUE
      NLINE(NTND)=N
      MF(NIND)=M
      GO TO 100
   50 1F(ICODE(N,MH) .EQ, 1) GO TO 100
C      HERE TO END A LINE OF COMPUTATION
      ML(NIND)=M
  100 CONTINUE
      PRINT ARRAYS
      WRITE(6,115)
  115 FORMAT(1H1,10X,21HDEPTH GRID FOLLOWS... )
      NCP = NMAX/24+ 1
      IF(((NCP-1)*24) .EQ. NMAX) NCP=NCP-1
      IN2 = 0
      DO 130 IP=1,NCP
      1N1=IN2+1
      IN25IN2+24
      IF(NMAX .LT. IN2) IN2=NMAX
      WRITE(6,117)(N,N=IN1,IN2)
  117 FORMAT(2X,4HM N=,12,2415)
      D0 120 M=l,MMAX
      WRITE(6,119) M,(DEPTH(N,M),NsINl,IN2)
      FORMAT (IX, 12, 1X,24F5.O)
  120 CONTINUE
      IF(IP .LT. NCP) WRITE(6,122)
  122 FORMAT(1H1//)
  130 CONTINUE
      WRITE(6,135)
  135 FORMAT(1H1,1 OX,22HC00ED ARRAY FOLLOWS,.. /)
      NCP=NMAX/60
      IF(NCP .LT. 1) NCP=1
      IN2 = 0
      DO 150 IP=1,NCP
      1N1=IN2+1
      IN2=IN2+60
      IF(NMAX .LT. IN2) IN2=NMAX
      WRITE(6,137) IN1,IN2
  137 FORMATdOX, 14HRANGE OF N IS ,I3,4H TO ,13/)
      DO 140 M=1,MMAX
      WRITE(6,139)(ICODE(N,M),N=IN1,IN2)
  139 FORMAT(1X,6012)
  140 CONTINUE
      IF(IP .LT. NCP) WRITE(6,122)
  150 CONTINUE
      WRITE(6,155) IWPT
  155 FORMAT(////1 OX,39HNUMBER OF GRID POINTS WITHIN ESTUARY = ,I5/1H1)
      RETURN
      END
      
      SUBROUTINE AMBC(DEPTH,NMAX)
      COMMON/DIMEN/ NS,NSPI,NVL,NSC
      DIMENSION DEPTH(NMAX,1)
      COMMON/AMB/NROA,IY,Y(10),ROA(10),H
      COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/VSPECSZ IFORM,DUl,DU2,UU1,UU2,DW1,DW2,WW1,WW2,DL1,DL2
C      READ X AND Z COORDINATES (W/R TO LONG TERM GRID, IN FEET) OF
C      BARGE POSITION
      READ(5,5) XBARGE,ZBARGE
    5 FORMAT(8E10,0)
C      ....READ NUMBER OF POINTS WHERE AMBIENT DENSITY SPECIFIED...,
      READ(5,15) NROA
   15 F0RMAT(16I5)
C      ....READ VERTICAL DISTANCES FROM FREE SURFACE WHERE DENSITY SPECIFIED.â¢â¢.
      READ(5, 5) (Y(I),1=1,NROA)
C      ....READ AMBIFNT DENSITIES....
      READ(5, 5)(ROA(I),1=1,NROA)
      WRITE(6,25) XBARGE,ZBARGE
   25 FORMAT(1H1,1 OX,20HBARGE COORDINATES .../I OX,14HXBARGE (FT) Â« ,G12.4
      1, 3X,14HZBARGE (FT) = ,G12.4)

C      ....WRITE AMBIENT DENSITY PROFILE....
      WRITE(6,35)
   35 FORMAT(////29X,24H--AMBIENT CONDITIONS)
      DO 60 J=1,NROA,8
      JJ=J+7
      IF(JJ .GE. NROA) JJ=NROA
      WRITE(6,45)(Y(I),I=J,JJ)
   45 FORMAT(//15X,1OHDEPTH (FT),5X,8G12.4)
      WRITE(6,55)(ROA(I),I=J,JJ)
   55 FORMAT(9X,7HAMBIENT/9X,15HDENSITY (GM/CC),5X,8G12.4)
   60 CONTINUE
C      ....CONVERT AMBIENT DENSITY FROM UNITS OF GM/CC TO SLUGS/CUFT...
      DO 70 1=1,NROA
   70 ROA(I)=ROA(I)* 1.94
C     SET H EQUAL TO DFPTH INTERPOLATED FROM FOUR GRID POINTS SURROUNDING BARGE
      CALL DINT(XBARGE,ZBARGE,H,DEPTH,NMAX)
      WRITE(6,75) H
   75 FORMAT(///1 OX,44HINTERPOLATED DEPTH AT DUMP COORDINATES, H = ,
      1 G12.4,4H FT. )
      WRITE(6,95)
   95 FORMAT(10X,10(8H--â----))
      READ (5,165) IFORM
  165 FORMAT(16I5)
      IF(IFORM .GE. 4) READ(5,5) DUl,DU2,UU1,UU2,DW1,DW2,WWI,WW2
      GO TO (430,440,450,460), IFORM
  430 WRITE(6,435)
  435 FORMAT(///1 OX,68HSINGLE VELOCITY PLANE USED WITH VELOCITIES CONSTA
      1NT IN THE VERTICAL)
      GO TO 480
  440 WRITE(6,445)
  445 FORMAT(///10X,53HSINGLE VELOCITY PLANE USED WITH LOGARITHMIC VELOC
      1ITY / 10X,65HDISTRIBUTION SUCH THAT VERTICAL AVERAGE EQUALS SPECIF
      2TED VELOCITY )
      GO TO 480
  450 WRITE(6,455)
  455 FORMAT(///10X,96HTWO VELOCITY PLANES USED WITH STRAIGHT LINE INTER
      1POLATION (SEE FIGURE 6,2(0 FOR INTERPRETATION) ) )
      GO TO 480
  460 WRITE(6,465) DU1,DU2,UU1,UU2,DW1,DW2,WWt,WW2
  465 FORMAT(///10X,73HTWO VELOCITY PROFILES SPECIFIED IN X AND Z DIRECT
      1T0NS FOR âQUICK. LOOKSâ/10X,63HDEPTH ASSUMED CONSTANT AND VELOCIT
      2IFS CONSIDERED STEADY IN IIME/10X,37HVELOCITY PROFILE PARAMETERS F
      30LL0W... /10X.6HDU1 = ,G11â¢3,1X,6HDU2 = ,G11.3,1X,6HUU1 = ,G11.3,
      4 1X.6HUU2 x ,G11.3/1 OX,6HDW1 s ,G11.3,IX,6HDW2 a ,G11.3,1X,6HWW1 s
      5 ,G11.3,1X,6HWW2 e ,G11.3)
  480 CONTINUE
      RETURN
      END

      SUBROUTINE DUMP(SS,U,W,DEPTH,NS)
C      THREE-DIMENSIONAL AXI-SYMMFTRIC INSTANTANEOUS RELEASE OF ENTIRE
C      LOAD FROM BARGE
      EXTERNAL DERIVD
      DIMENSION SS(600,NS)
      COMMON/AMB/   NROA,IY,Y(10),ROA(10),H
      COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),CV(600)
      1, CW(600),DENDIF(600),BC(600),AA(600),FC(600) , VF
      COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
      COMMON/GUIDF1/ TDUMP,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
      1 KEY 1,KEYS,KEY3
      COMMON/GPI/ G,PI
      COMMON/SICOEF/ ALPHA, ALPHAO,ALPHAC,BETA,CDRAG,CFRIC,CD,CD1,CDS
      1, CD3,CD4,CM,DINCR1,O1NCR2,FRICTN,GAMA,Fl
      COMMON/LTCOF/ ALAMDA,DIF,AKYO
      COMMON/DTEES/ DT,DT1,DT2
      COMMON/COL/ AO,IBED,FBFD
      COMMON/SWITCH/ ITF
      COMMON/GP/IGCN,IGCL,IGLT,IPCN,IPCL,IPLT
      COMMON/IJSERDT/ KEY4,DT1U,0T2U
      COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
      COMMON/CUMP1/ E(22)
      COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
      DIMENSION VORT(600),ACONC(12),SAVE(22)
      NTRIAL=O
      KV=1
      IBED=0
      ILEAVE=999
      NSP1=NS+1 ! Number of solid components plus 1
C      ....HERE TO SFT INITIAL CONDITIONS..,.
      READ(5,25) RB,OREL,CU(1),CV(1),CW(1),ROO,BVOID
      WRITE(6,125)RB,DREL,CU(1),CV(1),CW(1),ROO,BVOID
  125 FORMAT(1H1//10X,23HDISCI:a RGE PARAMETERS.10X,30HINITIAL RADIUS 0
      IF CLOUD, RB = ,G15.7/10X,40HINITIAL DEPTH OF CLOUD CENTROID, DREL
      2s , R12.4/1 OX , 35HINITIAL CLOUD VELOCITIES.â¢Â«CU(1) s ,G12,4,3X,
      3 8HCV(1) . s ,G12,4,3X,8HCW(1) s ,G12.4//1 OX,18HBULK PARAMETERS.../
      4 10X,15HDENSITY, ROO = ,G15.7/1 OX,31HAGGREGATE VOIDS RATIO, BVOID
      5s ,G12.4)
      WRITE(6,135)NS
  135 FORMAT(5(),1 OX,1OHTHERE ARE ,I2,34H SOLIDS,PARAMETERS FOLLOW...
      1....//10X,90HDESCRIPTION DENSITY(GM/CC) CONCENTRATION(CUFT/CUFT)
      2 FALL VELOCITY(FT/SEC) VOIDS RATIO )
      DO 150 K=1,NS
      READ(5,35) PARAM(K),ROAS(K),CS(K),VFALL(K),VOIDS(K)
      35 FDRMAT(A10,7E10.0)
      WRITE(6,145) PARAM(K),ROAS(K),CS(K),VFALL(K),VOIDS(K)
  145 FORMAT(11X,A10,2X,G12.4,9X,G12.4,15X,R12.4, 5X,G12.4)
  150 CONTINUE
      PARAM(NSPt)=5HFLUID                                                NON-ANSI
      VFALL(NSP1)=0.

C     CHECK CONSISTENCY OF PARAMETERS WITH NECESSARY MINIMUM FLUID DENSITY OF
      CS(NSP1)=1. ! Concentration of particles in volume ratio
      CIV=2.*PI*(RB*30.48)**3/3 ! Calc the total volume (not sure what the *30.48 is)
      CIVS=CIV      ! Saved total cloud volume
      CIM = ROO*CIV ! Initial mass
      DO 170 K=1,NS   ! Loop over the particle classes and calc the solid volume and
        SV=CS(K)*CIVS ! Solid volume in cloud
        SM=SV*ROAS(K) ! Solid mass in cloud
        CS(NSP1)=CS(NSP1) - CS(K) ! This number should be >=1? Pretty sure this is a check on the input particle concentrations
        CIV=CIV-SV
        CIM=CIM-SM
  170 CONTINUE

      FD=CIM/CIV
      WRITE(6,145) PARAMCNSP1),FD,CS(NSP1),VFALL(NSP1) 
      IF(FD .GE. .97) GO TO 190 
      WRITE(6,185) 
  185 FORMAT(//10X,44HFLUID DENSITY LESS THAN .97 GM/CC, CALL EXIT ) 
      CALL EXIT
  190 CONTINUE 
C READ INFO FOR DILUTION OF CHEMICAL TRACER 
      READ(5,192) TRACER,CINIT,CBACK 
  192 FORMAT(A10,2E10,0)
C      ....CONVERT UNITS FROM G.i/CC TO SLUGS/CUF . . . , ,
      DO 200 1=1,NS
  200 ROAS(I)=ROAS(I)* 1.94 
      ROO=ROO*1.94
      IF (KEY1 .EQ. 2) GO TO 70
C
C      ....HERE to USE TETRA TECH COEFFICIENTS....
      WRITE(6,65)
      65 FORMAT(//////10X.37HUSE TETRA TECH SUGGESTED COEFFICIENTS )
      DINCR1=1.
      DINCR2=1.
      ALPHA0=.235
      BETASO.
      CM=1.
      CD=0.5
      CDRAG=1,
      GAMA=0.25
      CFRIC=.01
      CD3=.t
      CD4xl.
      ALPHACs.001
      FR1CTN=,O1
      Fl=0.1
      ALAMDA=.OO5
      AKYO=.O5
      GO TO 80
C
C      ....HERE TO READ IN COEFFICIENTS,...
   70 WRITE(6,75)
   75 FORMAT(//////10X,24HUSE READ IN COEFFICIENTS )
      READ(5,25) DINCR1,DINCR2
      READ(5,25) ALPHAO,BETA,CM,CD
      READ(5,25)GAMA,CDRAG,CFRIC,CD3,CD4,ALPHAC,FRICTN,F1
      READ(5,25) ALAMDA,AKYO
   25 FORMAT(8E10,0)
C      ....HERE TO WRITE COEFFICIENTS.,,.
   80 WRITE(6,85) DINCR 1,D INCR2
   85 FORMAT(1 OX,6HDINCR1,F10.4,7H DINCR2,F10,4)
      WR1TE(6,95) ALPHAO,BETA,CM,CD
   95 FORMATC1 OX,6HALPHA0,F10.4,5H BETA,F10,4,3H CM,F10.4,3H CD,F10,4)
      WRITE(6,105) GAMA,CDRAG,CFRIC,CD3,CD4,ALPHAC,FRICTN.Fl
  105 FORMAT(1 OX,4HGAMA,5X.F5.2,3X,5HCDRAG,2X,F5.2,3X,5HCFRIC,1X,F5.3,
      1 2X, 3HCD3,2X, F5.2_, 1X, 3HCD4,1 X, F5.2,1X, 6HALPHAC,F1 0.4/1 OX,6HFRICTN,
      2 F10.4,lX,2HFl,F10.4 )
      WRITE(6,115)ALAMDA,AKYO
      115 FORMAT(1 OX,6HALAMDA,F10.4,1X,4HAKY0,F10,4/)
C     ....SAVE AMBIENT DENSITY AT Y(l)....
      ROAA=ROA(1)
      C1=(ROO-ROA(1))/ROA(1)            ! Relative specific gravity of the cloud
      E1=(ROA(NROA)-ROA(1))/(H*ROA(1))  ! Some type of density gradient?
      FF=CV(1)/SQRT(G*C1*RB)            ! FF = v_vel / sqrt(g * Gs_rel * vert_radius)
      EE1=E1*RB/C1                      ! EE1 = grad(rho) * vert_radius / Gs_rel

C     TOTAL NUMBER OF EQUATIONS
      NE=9+NS
C     LONG TERM DIFFUSION PARAMETER
      DIF=ALAMDA*DX**1.33333*DTL/DX**2 ! Long term diffusion parameter
      IF(DIF .GT. .2) DIF=.2
C     ....END OF INITIAL CONDITIONS ....
C
C      ....SELECT TIME STEP FOR ; INTEGRATIONS..
      IF(ROA(NROA) .NE. ROA(1)) GO TO 230
      IF(CV(1)) .NE. 0.) GO TO 220
  210 DT=5.
      GO TO 250
  220 DT = .01*RB*FF*(1.+ALPHA0*H/RB)**2/(CV(1)*2.) ! dt - time step calc?
      GO TO 250
  230 IF(CV(1) .EQ. 0.) GO TO 210
C      CRITERION FROM CONDITION OF STRATIFICATION
      DT=0.1*PI*FF/SQRT(EE1) ! 
C    CRITERION FROM UNIFORM AMBIENT
      DT1=.01*RB*FF*(1.+ALPHA0*H/RB)**2/(CV(1)*2.) ! Not sure what this is
      IF(DT-DTl) 250,240,240
  240 DT=DTl
C      ....INITIAL POSITION OF CLOUD CENTROID (W/R TO BARGE)
  250 E(1)=0.
      E(2)=DREL
      E(3)=0.
C      ....INITIAL MASS OF CLOUD....
      VOLUME=2.*PI*RB**3/3
      E(4)=ROO*VOLUME ! Mass of the cloud
C      ....INITIAL MOMENTA-- â
      CMMASS=CM*E(4) ! What I think
      E(5)=CMMASS * CU(1)
      E(6)=CMMASS * CV(1)
      E(7)=CMMASS * CW(1)
C      ....INITIAL BUOYANCY.,.,
      E(8)=(ROA(1)-ROO)*VOLUME
C      ....INITIAL VORTICITY.,..
      E(9)=RB*CV(1)*FLOAT(KV)
C     ....SUBTRACT VOLUME OF VARIOUS SOLID COMPONENTS FROM TOTAL WASTF
C     VOLUME, VF, AND PLACE IN E ARRAY. REMAINDER IN VF IS 
C     VOLUME OF FLUID WASTE....
      VF=VOLUME
      DO 260 K=1,NS*VOLUME
      E(K+9)=CS(K)*VOLUME
  260 VF=VF-E(K+9)
      DO 270 Isl.NE
  270 SAVE(I)=E(I)
      ROSAV=ROO
      ALPHA=ALPHA0
      DINCR=DINCRI
      WRITE(6,295)
  295 FORMAT(1H1,10X,18HC0NVECTIVE DESCENT ///1OX,34HCUMPUTATIONAL INDIC
      1ATORS FOLLOW...//1OX,6HNTRIAL,9X,2HDT,7X,6HIPLUNG, 1X,5HNUTRL,
      2 1X,5HISTFP)
      IF(KEY4 .EQ. 1) DT=DT1U
C
C     ....HERE TO BFGIN A SOLUTION TRIAL....
  400 ROO=ROSAV
C     ....INCREMENT TRIAL NUMBER..,.
      NTRIAL=NTRIAL+1
C      
C      ....INITIALIZE VARIABLES....
      T(1)=O.
      IY = 1
      ISTEP=1
      NUTRL=0
      IPLUNG=0
      DO 410 I=1,NE
  410 E(I)=SAVE(I)
C
C      ....HERE TO BEGIN COMPUTATIONAL LOOP IN TIME....
C      ....STORE RESULTS FROM INITIAL CONDITIONS OR PREVIOUS COMPUTATION
C      IN APPROPRIATE ARRAYS....
  420 CX(ISTEP)=E(1)
      CY(ISTEP)=E(2)
      CZ(ISTEP)=E(3)
      VOLUME=(E(4)+E(8))/ROA(1)
      CMMASS=1./(CM*E(4))
      CU(ISTEP)=E(5)*CMMASS
      CV(ISTEP)=E(6)*CMMASS
      CW(ISTEP)=E(7)*CMMASS
C     WHEN VORTICITY GUES TO ZERO, IT IS SET TO ZERO
      IF(E(9) .LE. 0.) E(9)=0.
      V0RT(ISTEP)=E(9)
C      BC=DIAMETER OF CLOUD
      AA(ISTEP)=(1.58VOLUME/PI)**.33333
      BC(ISTEP)=2.*AA(ISTEP)
C     SS IS SOLID CONCENTRATION IN VOLUME RATIO
      DO 430 K=1,NS
  430 SS(ISTEP,K)=E(K+9)/VOLUME
C      FLUID CONCENTRATION
      FC(ISTEP)=VF/VOLUME
      CTRACE=(CINT*VF+(VOLUME-VF)*CBACK)/VOLUME
      DR=CTRACE/CINIT
      IF(DR .GT. DC(ITD)) GO TO 460
      ID(ITD)=T(ISTEP)
      ITD=ITD+1
  460 CONTINUE
C      NFW OVERALL DENSITY OF WASTE CLOUD
      ROO=E(4)/VOLUME
C      INTERPOLATE FOR AMBIENT DENSITY AT VERTICAL POSITION E(2)
      ROAA=ROA(IY)+(E(2)-Y(IY))* (ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
C      CONVERT DENSITY DIFFERENCE BACK TO GM/CC AND STORE IN DENDIF
      DENDIF(ISTFP)=(ROO-ROAA)*.51545
C      TEST FOR BOTTOM ENCOUNTER
      IF((CY(ISTFP)+3.*AA(ISTEP)/8.) .GE. H) IPLUNG=1
C      TEST FOR LOOP EXIT
      IF(IPLUNG .EQ. 1) GO TO 500
      IF(NUTRL .EQ. 1) GO TO 500
      IF(ISTEP .GE. 600) GO TO 500
C      SOLVE EQUATION SET FOR NEXT TIME STEP
      CALL RUNGS(DERIVD,NE,U,W,DEPTH)
      ISTEP=ISTEP+1
      T(ISTEP)=T(ISTEP-1)+DT
      GO TO 420
C      ....END OF LOOP IN TIME....
C     PRINT OUT VARIABLES GUIDING JUST COMPLETED SOLUTION TRIAL
  500 WRITE(6,505) NTRIAL,DT,IPLUNG,NUTRL, ISTFP
  505 FORMAT( 9X,I5,G16.8,2X,3I6)
C      ITF SAVES LAST TIME STEP OF DESCENT PHASE
      ITF=ISTEP
C      TEST FOR PROPER NUMBER OF TIME STEPS IN CONVECTIVE CALCULATIONS
      IF(ISTEP .LT. 100 .OR. ISTFP .GT. 200) GO TO 510,520
  510 DT=DT*FLOAT(ISTEP)*DINCR/150

C      IF FIFTH TRIAL COMPLETED, GO TO OUTPUT SECTION, IF NOT RETURN FOR
C      NEXT TRIAL
     IF(NTRIAL .GE. 5) GO TO 520
      GO TO 400
C      ....HERE FOR PRINTED AND/OR GRAPHICAL OUTPUT..,.
  520 IF(IPCN.EQ.O) GO TO 600
C      ....HERE FOR PRINTOUT.',.,
      WRITE(6,524)
  524 FORMAT(//1 OX,42HX AND Z ARE MEASURED W/R TO BARGE POSITION )
      WRITE(6,525)
  525 FORMAT(// 8X,4HTIME,5X,1HX,7X,1HY,7X,1HZ,6X,1HU,6X,1HV,5X,1HW,6X,
      1 7HDEN-DIF,3X,6HRADIUS,IX,5H DIA ,2X,5HVORT,,3X,12HFLUID CONC. ,
      2 10HSOLID-VOL,,2X,13HCONCENTRATION)
      LINC=ISTEP/60
      IF(LINC .LT. 1) LINC=1
      DO 560 J = 1,ISTEP,LINC
      DO 530 K =1,NS
  530 ACONC(K )=2.*PI*AA(J,K)*SS(J,K)/3.
      WRITE(6,535) T(J),CX(J),CY(J),CZ(J),CU(J),CV(J),CW(J) ,DENDIF(J)
      1,AA(J),BC(J), VORT(J),FC(J),ACONC(1),SS(J,1)
  535 FORMAT( 4X,4F8.2,F6.2,F7.3,F6.2,E12.4,2F7,2,1X,F7,4,3E12,4)
      IF(NS .EQ. 1) GO TO 560
      DO 540 K=2,NS
  540 WRITE(6,545) ACONC(K),SS(J,K)
  545 FORMAT(101X,2F12.4)
  560 CONTINUE
  600 IF(IGCN.EQ.O) GO TO 700
C     ....HERE FOR GRAPHING..,.
      ISTEP1=ISTEP+1
      T(ISTEP1)=2.*T(ISTEP)-T(ISTEP-1)
      CX(ISTEP1)=2.*CX(ISTEP)-CX(ISTEP-1)
      CZ(ISTEP1)=2.*CZ(ISTEP)-CZ(ISTEP-1)
      CY(ISTEP1)=0.
      AA(ISTEP1)=0.
      FC(ISTEP1)=0.
      CALL DRAW(T,T,T,T,CY,AA,CX,CZ,ISTEP1,1,4)
      IF(IGCN.EQ.1) GO TO 700
      DO 610 I=1,NS
  610 SS(ISTEP1,I)=0.
      NG=4
      IF(NS.LT.4) NG=NS
      CALL DRAW(T,T,T,T,SS(1,1),SS(1,2),SS(1,3),SS(1,4),ISTEP1,3,NG)
      IF(NS.LE.4) GO TO 700
      NG = 4
      IF(NS.LT.8) NG=NS-4
      CALL DRAW(T,T,I,T,SS(1,5),SS(1,6),SS(1,7),SS(1,8),ISTEPP1,4,NG)
      IF(NS.LT.8) GO TO 700
      NG=4
      IF(NS.LT.12) NG=NS-8
      CALL DRAW(T,1,T,1,SS(1,9),SS(1,10),SS(1,11),SS(1,12),ISTEP1,7,NG)
  700 CONTINUE
C    ....SHIFT DATA TO PREPARE FOR COLLAPSE PHASE..,.
      DT1=DT
      DO 730 K=1,NS
      I=NS-K
  730 E(I+11)=E(1+10)
      E(9)=AA(ISTEP)
      AO=AA(ISTEP)
      IF(IPLUNG .EQ. 1) GO TO 720
      E(10)=0.
      RETURN
C     ....HERE IF CLOUD HAS HIT BOTTOM,,,.
  720 E(10)=ROO*PI*E(9)**3*(2.666*CV(ISTEP))/32.
      RETURN
      END

      SUBROUTINE DERIVD (E , U, W, DEPTH)
C      ....CALLED FROM DUMP VIA RUNGS....
      DIMENSION E(22)
      COMMON/DPASS/ NPASS,MPASS
      COMMON/DIMEN/ NS,NSP1,NVL,NSC
      COMMON /A/ EP(22)
      COMMON/BAYZ DX , FTL , XBARGE , ZBARGE, DXH , DXR , AREA
      COMMON/AMBZ/ NROA,IY,Y(10),ROA(10),H
      COMMON/PIF.CES/PARAM(13),ROAS(13) ,CS (13) , VFALL (13), VOIDS(1 3),BVOID
      COMMON/GUIDE1Z TDUMP,TSTOP,I STEP,IPLUNG,NUTRL,NTRIAL,ILF AVE,
      1 KEY 1,KEY2,KEY3
      COMMON/GPIZ G,PJ
      COMMON /STCOEFZ ALPHA,ALPHAO,ALPHAC,BETA,CDRAG,CFRIC,CD,CD1,CD2
      1, CD3,CD4,CM,DINCR1,DTNCR2,FRICTN,GAMA,F1
      COMMON/COLZ AO,JBED,FBED
C
      IF(E(2).GT. 0.) GO TO 30
      WRITE(6,15)
   15 FORMAT(1X,51HDEPTH Y .LT. 0 --CHANGE INPUT DATA TO ENSURE DESCENT)
      CALL EXIT
C     SET IY SO THAT CLOUD DEPTH ECP) IS BRACKETED BY Y(IY) AND Y(IY+1)
   30 IF(E(2) .LT. Y(IY)) GO TO 40
      IY=IY+1
      GO TO 30
   40 IF(E(2)-Y(IY)) 50,100,100
   50 IY=IY-1
      GO TO 30
C      INTERPOLATE FOR AMBIENT DENSITY AT DEPTH OF CENTROID OF CLOUD...
  100 ROA=ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
      CE=(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
      !   E(4) is the mass
      VOLUME=(E(4)+E(8))/ROA(1) ! I'm not sure what this is averaging. 
      ! Seems to be calculating the volume of the cloud from the mass of the cloud and the mass of the particles in the cloud?
      ROO=E(4)/VOLUME
      IF (ROO .LE. ROAA) NUTRL=1
      *VOLUME/
      B=(1.5*VOLUME/PI)**.333333
C      DETERMINE HORIZONTAL VELOCITIES AT CLOUD
      XX=XBARGE+E(1)
      ZZ=ZBARGE+E(3)
      CALL VEL(XX,E(2),ZZ,UA,WA,U,W,DEPTH,NPASS,MPASS)
      IF(F(9)) 110,110,120
  110 ALPHA=ALPHAO
      GO TO 200
  120 ALPHA=ALPHAC*SQRTHA=ALPHAO( TANH (*((GVROO-OLUMEROAA)E(9)**ALPHA0))*22))
C
C    MAIN COMPUTATIONS
  200 CMMASS=CM*E(4) ! Calc the mass of 
      UU=E(5) / CMMASS ! Think: Calc the u-vel from the u momentum
      VV=E(6) / CMMASS ! Calc the v-vel from the v momentum
      WW=E(7) / CMMASS ! Calc the w-vel from the w momentum
      PHI=SQRT((UU-UA)**2+(VV**2)+(WW-WA)**2) ! Velocity norm
C     ENTRAINED VOLUME IS
      ENTRV=2*PI*B**2*ALPHA*PHI ! Calc the entrainment rate
      EP(1)=UU
      EP(2)=VV
      EP(3)=WW
      ! Rate of mass entrainment kg/s
      EP(4)=ENTRV*ROAA
      DRAG = CD * ROAA * PI * B**2 * PHI * 0.5
      ! Calc the net x - force. ENTRV is holding m^3/s
      EP(5) = ENTRV*ROAA*UA - DRAG*(UU-UA)*0.5
      ! calc the net y - force
      EP(6) = VOLUME*(ROD-ROAA)*G - DRAG*VV
      ! Calc the net z - force
      EP(7) = ENTRV*ROAA*WA - DRAG*(WW-WA)*0.5
      ! Update the rate of buoyant mass change
      EP(8) = ENTRV*(ROA(1)-ROAA)
      ! Vorticity changeDissipation parameter * CE (where CE is derivative of the spatial ambient densitity at the cloud location)
      EP(9) = -3.0*B**2*G*CE/ROA(1)
      ! Loop over each iTH class and update it's parameters
      DO 250 K=1,NS
C       Absolute value of the settling velocity
        ABSWS = ABS(VFALL(K)) 
        IF (ABSWS - ABS(VV)) 220, 220, 230
C       IF FALL VEL. IS SMALLER THAN THE CONVECTIVE VEL. NO SETTLING OCCURS
  220   BETAA = 1.0
        GO TO 240
  230   BETAA = BETA
  ! E(K+9)/VOLUME is the volume concentration of that material
  ! Calc the volume rate of solids in class i settling out of the cloud.
  240   SETLV = PI*B**2*ABS(VFALL(K))*(1.0-BETAA)*E(K+9)/VOLUME ! Calc the rate the solids are settling out of the cloud. 
        ! kg/s - m^3/s * kg/m^3
        EP(4) = EP(4) - SETLV*(ROAS(K)) ! Subtract the
        !  Subtract the rate of momentum lost because of the material settiling out.
        EP(5) = EP(5) - SETLV*(ROAS(K))*UU
        EP(6) = EP(6) - SETLV*(ROAS(K))*VV
        EP(7) = EP(7) - SETLV*(ROAS(K))*WW
        ! Subtract the rate of buoyant mass change due to material settiling out.
        EP(8) = EP(8) - SETLV*(ROA(1)-ROAS(K))
        EP(K+9) = -SETLV
      250 CONTINUE
      RETURN
      END

      SUBROUTINE COLAPS(SS,U,W,DEPTH,NS)
      EXTERNAL DERIVC
      DIMENSION SS(600,NS)
      COMMON/AMB/ NRDA,IY,Y(10),RUA(10),H
      COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),CV(600)
     1,CW(600),DENDIF(600),BC(600),AA(600),FC(600),VF
      COMMON/PIECES/PARAM(15),RUAS(13),CS(15),VFALL(13),VOIDS(13),BVOID
      COMMON/GUIDE/ IDUMP,ISTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,TLFAVE,
     1 KEY1,KEY2,KEY3
      COMMON/CUL/ AO,IBED,FRED
      COMMON/COMP1/ E(22)
      COMMON/GPI/ G,PI
      COMMON/STCOEF/ ALPHA,ALPHAO,ALPHAC,BETA,CDRAG,CFRIC,CD,CD1,CD2
     1,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,GAMA,F1
      COMMON/LTCOF/ ALAMDA,DIF,AKYO
      COMMON/DTEES/ DT,DT1,DT2
      COMMON/GP/IGCN,IGCL,IGLT,IPCN,IPCL,IPLT
      COMMON/USERDT/ KEY4,DT1U,DT2U
      COMMON/FLFE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
      DIMENSION SAVE(22),ACONC(12)
C
      DINCR=DINCR2
      NTRIAL=0
      ISAV=ISTEP
      IF(ISTEP .EQ. IBED) GO TO 10
C     ....HERE IF CLOUD HAS NOT ENCOUNTERED BOTTOM...
      E1=(ROA(IY+1)-ROA(IY))/(ROA(1)*(Y(IY+1)-Y(IY)))
      EG=SQRT(E1*G)
      B1=(AA(ISTEP)**3*.84*EG*1000.)**.42857
      DT2=.001*(B1/AA(ISTEP))**3/EG*.1
      DT=DT2
      GO TO 20
C     ....HERE IF CLOUD IS ON BOTTOM...
   10 DT=DT1
   20 WRITE(6,25)
   25 FORMAT(1H1,10X,23HCOLLAPSE PHASE OF CLOUD  ///10X,27HCOMPUTATIONAL
     1 INDICATORS.../5X,6HNTRIAL,4X,2HDT,6X,6HIPLUNG,2X,5HNUTRL,2X,
     2 5HISTEP,2X,4HIBED,3X,6HILEAVE )
      IF(KEY4 .EQ. 1) DT=DT2U
      NE=NS+10
C     SAVE STARTING VALUES IN E ARRAY...
      DO 100 KK=1,NE
  100 SAVE(KK)=E(KK)
C
C     ....HERE TO BEGIN A TRIAL...
  400 DO 410 KK=1,NE
  410 E(KK)=SAVE(KK)
      NTRIAL=NTRIAL+1
      ISTEP=ISAV
      VOLUME=(E(4)+E(8))/ROA(1)
      ROD=E(4)/VOLUME
      NUTRL=0
      IPLUNG=0
      IF(ISTEP .EQ. IBED )IPLUNG=1
C     IF CLOUD HAS HIT BOTTOM, GO DIRECTLY TO BOTTOM
      IF(ISTEP .EQ. IBED) GO TO 520
C     IF THIS IS FIRST TIME STEP IN COLAPS1,GO DIRECTLY TO RUNGS ROUTINE.
      IF(ISTEP .EQ. ISAV) GO TO 460
C
C     ....HERE TO BEGIN MAIN COMPUTATIONAL LOOP IN TIME...
C     ...SAVE RESULTS OF PREVIOUS COMPUTATIONS...
  420 CX(ISTEP)=E(1)
      CY(ISTEP)=E(2)
      CZ(ISTEP)=E(3)
      VOLUME=(E(4)+E(8))/ROA(1)
      CMMASS=CM*E(4)
      E(9) IS SEMI-MAJOR AXIS
C     BC IS HORIZONTAL DIMENSION OF CLOUD
      BC(ISTEP)=2.*E(9)
C     AA IS VERTICAL DIMENSION OF CLOUD
      AA(ISTEP)=.6*VOLUME/(PI*BC(ISTEP)**2)
      CU(ISTEP)=E(5)/CMMASS
      CV(ISTEP)=E(6)/(CMMASS*BC(ISTEP))*AA(ISTEP)
      CW(ISTEP)=E(7)/CMMASS
      ROD=E(4)/VOLUME
      ROAA=ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
      DENDIF(ISTEP)=(ROD-ROAA)*.51545
C     SS SAVE SOLID CONCENTRATION FOR DIFFUSION
      DO 430 K=1,NS
  430 SS(ISTEP,K)=E(K+10)/VOLUME
      FC(ISTEP)=VF/VOLUME
      CTRACE=(CINIT*VF+(VOLUME-VF)*CBACK)/VOLUME
      DR=CTRACE/CINIT
      IF(DR .GT. DC(ITD)) GO TO 432
      TD(ITD)=T(ISTEP)
      ITD=ITD+1
  432 CONTINUE
      IF(IPLUNG .EQ. 4) GO TO 440
      IF((CY(ISTEP)+3.* AA(ISTEP)/8.) .GE. H) IPLUNG=2
C     AKX - CHANGE OF B BY DIFFUSION
  440 AKX=2.*ALAMDA*( E(9))**.33333
      DBDT=.5*(BC(ISTEP)-BC(ISTEP-1))/DT
C     ...EXIT TESTS...
C     IF CLOUD TOUCHES FREE SURFACE, EXIT TO PRINTOUTS...
      IF(CY(ISTEP)-AA(ISTEP).LE.0.) GO TO 570
      IF(ISTEP .LE. ISAV+5) GO TO 450
C     IF CHANGE OF CLOUD MAJOR AXIS BY DIFFUSION IS .GT. OR EQUAL TO
C     CHANGE IN MAJOR AXIS IN ONE TIME STEP, ATTEMPT EXIT TO BEGIN
C     LONG TERM DIFFUSION...
      IF(AKX .GE. DBDT)NUTRL=3
  450 IF(NUTRL .EQ. 3) GO TO 550
C     IF CLOUD HIT BOTTOM WHILE COLLAPSING GO CALL BOTTOM1
      IF(IPLUNG .EQ. 2) GO TO 500
      IF(ISTEP .GE. 599) GO TO 550
  460 CALL RUNGS(DERIVC,NE,U,W,DEPTH)
      ISTEP=ISTEP+1
      T(ISTEP)=T(ISTEP-1)+DT
      GO TO 420
C     ...END OF MAJOR LOOP...
C
C     ...HERE TO COMPUTE COLLAPSE ON BOTTOM...
  500 IBED=ISTEP
      DBT=E(10)*16./(PI*.5*AA(ISTEP)*.25*BC(ISTEP)**2*ROD)
      E(10)=ROD*PI*.5*AA(ISTEP)*.25*BC(ISTEP)**2
     1     *(DBT*.666667*.5*BC(ISTEP)*CV(ISTEP)/(.5*AA(ISTEP)))/8.
  520 CALL BOTTOM(SS,U,W,DEPTH,NS,NEXT)
      GO TO (530,540,550),NEXT
  530 E(6)=CM*E(4)*CV(ISTEP)
      E(2)=CY(ISTEP)
      DBT=E(10)*8./(PI*AA(ISTEP)*.25*BC(ISTEP)**2*ROU)
      E(10)=ROO*PI *AA(ISTEP)*.50*BC(ISTEP)**2*DBT/16.
C     ILEAVE=ISTEP
      GO CALL RUNGS
      GO TO 460
  540 ISTEP=ISTEP-1
  550 WRITE(6,555) NTRIAL,DT,IPLUNG,NUTRL,ISTEP,IBED,ILEAVE
  555 FORMAT(5X,I4,G12.4,I6,4I7)
      IF((ISTEP-ISAV) .LE. 100 .OR. (ISTEP-ISAV) .GE. 599) 560,570
  560 DT=DT*FLOAT(ISTEP-ISAV)*DINCR/250.
      IF(NTRIAL .GE. 5) GO TO 570
C      RETURN FOR ANOTHER TRIAL
      GO TO 400
C
C     ...HERE FOR PRINTOUT AFTER COMPUTATIONS COMPLETED...
  570 IF(IPCL.EQ.0) GO TO 600
      WRITE(6,574)
  574 FORMAT(//10X,36HX AND Z MEASURED FROM BARGE POSITION )
      WRITE(6,575)
  575 FORMAT(/ 6X,4HTIME,8X,1HX,6X,1HY,6X,1HZ,9X,1HU,6X,1HV,5X,1HW,
     1 6X,7HDEN-DIF,6X,2HAA,4X,2HBC,8X,11HFLUID CONC.,3X,
     1 10HSOLID-VOL.,2X,13HCONCENTRATION)
      NGRID=(ISTEP-ISAV )/60
      IF(NGRID .LT. 1) NGRID=1
      DO 599 J=ISAV,ISTEP,NGRID
      DO 580 K=1,NS
  580 ACONC(K)=4.*PI*.5*AA(J)*.25*BC(J)**2*SS(J,K)/3.
      WRITE(6,585) T(J),CX(J),CY(J),CZ(J),CU(J),CV(J),CW(J),DENDIF(J)
     1,AA(J),BC(J),FC(J),ACONC(1),SS(J,1)
  585 FORMAT( 1X,2F10.2,F8.2,G11.4,F6.2,F7.3,F6.2,E12.4,F7.2,G11.4,
     1       3E12.4)
      IF(NS .EQ. 1) GO TO 599
      DO 590 K=2,NS
  590 WRITE(6,595)ACONC(K),SS(J,K)
  595 FORMAT(101X,2F12.4)
  599 CONTINUE
  600 IF(IGCL.EQ.0) GO TO 700
      ISTEP1=ISTEP+1
      T(ISTEP1)=2.*T(ISTEP)-T(ISTEP-1)
      AA(ISTEP1)=0.
      CY(ISTEP1)=0.
      BC(ISTEP1)=0.
      FC(ISTEP1)=0.
      CX(ISTEP1)=2.*CX(ISTEP)-CX(ISTEP-1)
      CZ(ISTEP1)=2.*CZ(ISTEP)-CZ(ISTEP-1)
      CALL DRAW(T,T,T,AA,BC,FC,CY          ,ISTEP1,2,4)
      CALL DRAW(CX,T,T,T,CZ,T,T,T,ISTEP1, 5,1)
  700 DT2=DT
      RETURN
      END

      SUBROUTINE DERIVC(E,U,W,DEPTH)
C      ...CALLED FROM COLAPS1 VIA RUNGS...
       DIMENSION E(22)
       COMMON/DPASS/ NPASS,MPASS
       COMMON/A/ EP(22)
       COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
       COMMON/AMB/ NRDA,IY,Y(10),ROA(10),H
       COMMON/PIECES/PARAM(15),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
       COMMON/GPI/ G,PI
       COMMON/STCOEF/ ALPHA,ALPHAO,ALPHAC,BETA,CDRAG,CFRIC,CD,CD1,CD2
      1,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,GAMA,F1
       COMMON/COL/ AO,IBED,FBED
       COMMON/GUIDE1/ IDUMP,ISTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
      1 KEY1,KEY2,KEY3
       COMMON/DIMEN/ NS,NSP1,NVL,NSC
C
       IF(E(2).GE.0.) GO TO 30
       WRITE(6,15)
   15  FORMAT( 47H Y LT 0 -- CHANGE INPUT DATA TO ENSURE DESCENT  )
       CALL EXIT
   30  IF(E(2) .LE. Y(IY+1)) GO TO 40
       IY=IY+1
       GO TO 30
   40  IF(E(2)-Y(IY)) 50,100,100
   50  IY=IY-1
       GO TO 30
  100  ROAA=ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
       CE=(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
       VOLUME=(E(4)+E(8))/ROA(1)
       ROD=E(4)/VOLUME
C      A IS SEMIMINOR AXIS                B IS SEMIMAJOR AXIS
       B=E(9)
       A=3.*VOLUME/(4.*PI*B**2)
       ALPHA=ALPHAO*(A/B)**2
C
C      DETERMINE HORIZONTAL VELOCITIES AT CLOUD
       XX=XBARGE+E(1)
       ZZ=ZBARGE+E(3)
       CALL VEL(XX,E(2),ZZ,UA,WA,U,W,DEPTH,NPASS,MPASS)
C
       CMMASS=CM*E(4)
       UU=E(5)/CMMASS
       VV=E(6)/(CMMASS*B)*A
       WW=E(7)/CMMASS
       PHI=SQRT((UU-UA)**2+VV**2+(WW-WA)**2)
C      CONTRIBUTION OF COLLAPSE TO THE TIP VELOCITY OF CLOUD
       EP(9)=E(10)*16./(PI*A*B**2*ROD)
C      COMPUTE FLUID VOLUME ENTRAINED OVER SURFACE AREA OF OBLATE SPHEROID
       A1=B**2
       A2=A1
       IF(B-A) 140,140,130
  130  RT=SQRT(B**2-A**2)
       A2=.5*(A**2*B/RT)*ALOG((B+RT)/(B-RT))
  140  ENTRY=2.*PI*(A1+A2)*(PHI*ALPHA +ALPHAC*EP(9))
C
C      MAIN COMPUTATIONS
       EP(1)=UU
       EP(2)=VV
       EP(3)=WW
       EP(4)=ENTRY*ROAA
       DRAG=   PI *ROAA*PHI*.5
       EP(5)=ENTRY*ROAA*UA-DRAG*A*B*(UU-UA)*CD3
       EP(6)=VOLUME*(ROD-ROAA)*G-DRAG*B**2*VV*CD4
       EP(7)=ENTRY*ROAA*WA-DRAG*A*B*(WW-WA)*CD3
       EP(8)=ENTRY*(ROA(1)-ROAA)
       EP(10)=   PI*(1.-GAMA*AO/A)*CE*G*A**3*B/16.
      ,      -CDRAG*ROAA*A*B*EP(9)*ABS(EP(9))/4.
      ,      -CFRIC*ROAA*B**2*EP(9)/(2.*A)
       DV=ENTRY*ROAA
       DO 250 K=1,NS
       ABSWS=ABS(VFALL(K))
       IF(ABSWS-ABS(VV))220,220,230
C      IF FALL VEL. IS SMALLER THAN THE CONVECTIVE VEL. NO SETTLING OCCURS
  220  BETAA=1.
       GO TO 240
  230  BETAA=BETA
  240  SETLV=PI*B**2*ABS(VFALL(K))*(1.-BETAA)*E(K+10)/VOLUME
       EP(4)=EP(4)-SETLV*(ROAS(K))
       EP(5)=EP(5)-SETLV*(ROAS(K))*UU
       EP(6)=EP(6)-SETLV*(ROAS(K))*VV
       EP(7)=EP(7)-SETLV*(ROAS(K))*WW
       EP(8)=EP(8)-SETLV*(ROA(1)-ROAS(K))
       EP(K+10)=-SETLV
       DV=DV-SETLV*ROAS(K)
  250  CONTINUE
C     CONTRIBUTION OF ENTRAINMENT TO TIP VELOCITY OF CLOUD
      EP(9)=EP(9)+DV*0.375/(PI*A*B*ROD)
      RETURN
      END

      SUBROUTINE BOTTOM(SS,U,W,DEPTH,NS,NEXT)
      EXTERNAL DERIVB
      DIMENSION SS(600,NS)
      COMMON/AMB/ NRDA,IY,Y(10),ROA(10),H
      COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),CV(600)
     1,CW(600),DENDIF(600),BC(600),AA(600),FC(600),VF
      COMMON/PIECES/PARAM(15),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
      COMMON/GUIDE1/ IDUMP,ISTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1 KEY1,KEY2,KEY3
      COMMON/GPI/ G,PI
      COMMON/STCOEF/ ALPHA,ALPHAO,ALPHAC,BETA,CDRAG,CFRIC,CD,CD1,CD2
     1,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,GAMA,F1
      COMMON/LTCOF/ ALAMDA,DIF,AKYO
      COMMON/COMP1/ E(22)
      COMMON/CUL/ AO,IBFD,FBED
      COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
      COMMON/DTEES/ DT,DT1,DT2
C
      NE=10+NS
  100 VOLUME=(E(4)+E(8))/ROA(1)
C     E(9) IS SEMIMAJOR AXIS
      BC(ISTEP)=2.*E(9)
      AA(ISTEP)=3.*VOLUME/(2.*PI *E(9)**2)
      ROD=E(4)/VOLUME
      IF(ISTEP .NE. IBED) 120,130
C     COMPUTE INITIAL BED REACTION FORCE ON PORTION OF HEMISPHERICAL
C     CLOUD THAT HAS --PASSED THRU BOTTOM--
  110 CONTINUE
      RI=H-CY(IBED)+3.*E(9)/8.
      VR=.33333*PI*RI**2*(3.*E(9)-RI)
      FBED=FBED+VB*G*(ROD-ROA(NRDA))+CM*VB*ROD*CV(IBED)/DT
      GO TO 170
C
C     ...START OF COMPUTATIONAL LOOP...
  120 CX(ISTEP)=E(1)
      CY(ISTEP)=H-3.*AA(ISTEP)/8.
      CZ(ISTEP)=E(3)
      CMMASS=CM*E(4)
      CU(ISTEP)=E(5)/CMMASS
      CV(ISTEP)=.75*16.*E(10)/(PI*E(9)**3*ROD)
      CW(ISTEP)=E(7)/CMMASS
      ROAA=ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
      DENDIF(ISTEP)=(ROD-ROAA)*.51545
  130 FBED=0.
      DO 160 K=1,NS
      IF(ABS(CV(ISTEP)) .GT. ABS(VFALL(K))) GO TO 140
      BETAA=1.
      GO TO 150
  140 BETAA=BETA
  150 SS(ISTEP,K)=E(K+10)/VOLUME
      FBED=FBED - PI * E(9)**2 * ABS(VFALL(K)) *ROAS(K) * SS(ISTEP,K)
     ,      *(1.-BETAA)*CV(ISTEP)
  160 CONTINUE
      IF(ISTEP .EQ. IBED) GO TO 110
      FC(ISTEP)=VF/VOLUME
      CTRACE=(CINIT*VF+(VOLUME-VF)*CBACK)/VOLUME
      DR=CTRACE/CINIT
      IF(DR .GT. DC(ITD)) GO TO 460
      TD(ITD)=T(ISTEP)
      ITD=ITD+1
  460 CONTINUE
      FBED = FBED + .66666 * PI * AA(ISTEP) * E(9)**2 * (ROD-ROAA)*G
     1     - CM * ( E(4) * CV(ISTEP) - E(6) * CV (ISTEP-1) ) / DT
C     AKX - CHANGE OF B BY DIFFUSION
      AKX=2.*ALAMDA*(  E(9))**.33333
      IF(E(2) .GE. H) AKX=1.0E50
      DBDT=.5*(BC(ISTEP)-BC(ISTEP-1))/DT
      IF(AKX .GE. DBDT) NUTRL=3
C     STORE OLD MASS IN E(6)
  170 E(6)=E(4)
      IF(FBED .LT. 0.) IPLUNG=4
      IF(NUTRL .NE. 3) GO TO 210
      NEXT=3
      RETURN
  210 IF(IPLUNG .NE. 4) GO TO 250
      ILEAVE=ISTEP
      NEXT=1
      RETURN
  230 IF(ISTEP .LT. 599) GO TO 250
      NEXT=2
      RETURN
  250 CALL RUNGS(DERIVB,NE,U,W,DEPTH)
      ISTEP=ISTEP+1
      T(ISTEP)=T(ISTEP-1)+DT
      GO TO 100
      END
      
      SUBROUTINE DERIVB(E,U,W,DEPTH)
C      ...CALLED FROM BOTTOM VIA RUNGS...
       DIMENSION E(22)
       COMMON/DIMEN/ NS,NSP1,NVL,NSC
       COMMON/DPASS/ NPASS,MPASS
       COMMON/A/ EP(22)
       COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
       COMMON/AMB/ NRDA,IY,Y(10),ROA(10),H
       COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
       COMMON/COL/ AO,IBED,FBED
       COMMON/GPI/ G,PI
       COMMON/STCOEF/ ALPHA,ALPHAO,ALPHAC,BETA,CDRAG,CFRIC,CD,CD1,CD2
      1,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,GAMA,F1
       COMMON/GUIDE1/ IDUMP,ISTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
      1 KEY1,KEY2,KEY3
       COMMON/DTEES/ DT,DT1,DT2
       IF(E(2) .GT. H) E(2)=H
       IF(E(2).GE.0.) GO TO 30
       WRITE(6,15)
   15  FORMAT( 47H Y LT 0 -- CHANGE INPUT DATA TO ENSURE DESCENT  )
       CALL EXIT
   30  IF(E(2) .LE. Y(IY+1)) GO TO 40
       IY=IY+1
       GO TO 30
   40  IF(E(2)-Y(IY)) 50,100,100
   50  IY=IY-1
       GO TO 30
  100  ROAA=ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
       CE=(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
       VOLUME=(E(4)+E(8))/ROA(1)
       ROD=E(4)/VOLUME
C      A IS SEMIMINOR AXIS                B IS SEMIMAJOR AXIS
       B=E(9)
       A=3.*VOLUME/(2.*PI*B**2)
C
C      DETERMINE HORIZONTAL VELOCities AT CLOUD
       XX=XBARGE+E(1)
       ZZ=ZBARGE+E(3)
       CALL VEL(XX,E(2),ZZ,UA,WA,U,W,DEPTH,NPASS,MPASS)
C
C      CONTRIBUTION OF COLLAPSE TO TIP VELOCITY OF CLOUD
       EP(9)=E(10)*16./(PI*A*B**2*ROD)
       CMMASS=CM*E(4)
       UU=E(5)/CMMASS
       WW=E(7)/CMMASS
       PHI=SQRT((UU-UA)**2      +(WW-WA)**2)
       PH=SQRT(UU**2+WW**2)
C      FOLLOWING STMTS ACCOUNT FOR UNIQUE NATURE OF BED FRICTION FORCE
C      WHICH ACTS TO OPPOSE MOTION BUT NOT TO CAUSE MOTION
C      TCOR MAKES FRICTION FORCE ACTING FOR TIME DT STOP CLOUD WHEN CLOUD
C      VELOCITY BECOMES SMALL ENOUGH.  STMT 201 ACTS TO KEEP FRICTION FORCE
C      ZERO AS LONG AS CLOUD IS STATIONARY.
       TCOR=1.
       IF(FBED .EQ. 0.) GO TO 120
       TCK=E(4)*PH/(FBED*FRICTN)
       IF(TCK .LT. DT) FCOR=TCK/DT
  120  CONTINUE
       IF(PH .LE. 0.001 ) 130,140
  130  PH=0.
       GO TO 150
  140  PH=1./PH
  150  CONTINUE
C
C      COMPUTE FLUID VOLUME ENTRAINED OVER SURFACE OF HALF OBLATE SPHEROID
       A1=B**2
       A2=A1
C      DETERMINE ENTRAINMENT COEFFICIENT AS FUNCTION OF RICHARDSON
C      NUMBER (REF. KOH AND FAN(1970), P 56)
       ALPHAB=0.
       IF(PHI .LT. 1.0E-10) GO TO 160
       RI=G*(ROD-ROAA)*A/(ROAA*PHI**2)
       IF(RI .LT. 0. .OR. RI .GT. .85) GO TO 160
       ALPHAB=.075*(2./(1.+RI/.85)-1.)**1.75
  160  IF(B-A) 180,180,170
  170  RT=SQRT(B**2-A**2)
       A2=.5*(A**2*B/RT)*ALOG((B+RT)/(B-RT))
  180  ENTRY=PI*(A1+A2)*ALPHAB*EP(9)
C      MAIN COMPUTATIONS
       EP(1)=UU
       EP(2)=0.
       EP(3)=WW
       EP(4)=ENTRY*ROAA
       DRAG=   PI *ROAA*PHI*.5
       EP(5)=ENTRY*ROAA*UA-DRAG*A*B*(UU-UA)*CD3*.5-FBED*FRICTN*UU*PH
      1 *TCOR
       EP(6)=0.
       EP(7)=ENTRY*ROAA*WA-DRAG*A*B*(WW-WA)*CD3*.5-FBED*FRICTN*WW*PH
      1 *TCOR
       EP(8)=ENTRY*(ROA(1)-ROAA)
       EP(10)=   PI*(1.-GAMA*AO/A)*CE*G*A**3*B/16.
     ,             -CDRAG*ROAA*A*B*EP(9)*ABS(EP(9))/4.
     ,       -CFRIC*ROAA*B**2*EP(9)/(2.*A)
     ,         -F1* FBED*FRICTN/(2.*PI)
       DV=ENTRY*ROAA
       DO 250 K=1,NS
       ABSWS=ABS(VFALL(K))
       IF(ABSWS-ABS(EP(2)))220,220,230
C      IF FALL VEL. IS SMALLER THAN THE CONVECTIVE VEL. NO SETTLING OCCURS
  220  BETAA=1.
       GO TO 240
  230  BETAA=BETA
  240  SETLV=PI*B**2*ABS(VFALL(K))*(1.-BETAA)*E(K+10)/VOLUME
       EP(4)=EP(4)-SETLV*(ROAS(K))
       EP(5)=EP(5)-SETLV*(ROAS(K))*UU
       EP(7)=EP(7)-SETLV*(ROAS(K))*WW
       EP(8)=EP(8)-SETLV*(ROA(1)-ROAS(K))
       EP(K+10)=-SETLV
       DV=DV-SETLV*ROAS(K)
  250  CONTINUE
C      CONTRIBUTION OF ENTRAINMENT TO TIP VELOCITY OF CLOUD
       EP(9)=EP(9)+DV*0.75/(PI*A*B*ROD)
       RETURN
       END
      
      SUBROUTINE RUNGS(DERIVE,NE,U,W,D)
      COMMON/COMP1/ E(22)
      COMMON/A/ EP(22)
      COMMON/DTEES/ DT,DT1,DT2
      DIMENSION W1(22),W2(22),W3(22),W4(22),Z(22)
C
C
      CALL DERIVE(E,U,W,D)
      DO 2 I=1,NE
C This calculates the increment at the first dt value
      W1(I)=DT*EP(I)
C This accumulates the weighted increment
    2 Z(I)=E(I)+ W1(I)*0.5

      CALL DERIVE(Z,U,W,D)
      DO 3 I=1,NE
      W2(I)=DT*EP(I)
    3 Z(I)=E(I)+W2(I)*0.5

      CALL DERIVE(Z,U,W,D)
      DO 4 I=1,NE
      W3(I)=DT*EP(I)
    4 Z(I)=E(I)+W3(I)

      CALL DERIVE(Z,U,W,D)
      DO 7 I=1,NE
      W4(I)=DT*EP(I)
    7 E(I)=E(I)+(2.*(W2(I)+W3(I))+W1(I)+W4(I))/6.
      RETURN
      END

      SUBROUTINE UW(ETS,U,W,NMAX,MMAX)
C     ROUTINE TO READ A SET OF VELOCITIES FROM TAPE.  THESE VELOCITIES
C     ARE CONSTANT FOR ONE TIME STEP,DTL.
      DIMENSION U(NMAX,MMAX,1),W(NMAX,MMAX,1)
      COMMON/DIMEN/ NS,NSP1,NVL,NSC
      COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/GUIDE1/ IDUMP,ISTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1 KEY1,KEY2,KEY3
      COMMON/VSPECS/ IFORM,DU1,DU2,UU1,UU2,DW1,DW2,WW1,WW2,DL1,DL2
      INTEGER SKIP
      IF(IFORM .EQ. 4) RETURN
      ICYCLE=ETS/90000.+1.
      SKIP=1
C     TTAPE RELATES TAPE TIME TO ELAPSED TIME
      TTAPE=ETS+TDUMP
      TSHIFT=FLOAT(ICYCLE-1)*90000.
      TTAPE=TTAPE-TSHIFT
      IF(NVL .GT. 1) GO TO 200
C
C     HERE FOR SINGLE LAYER
   50 READ(7) TUW
      IF((TUW+.01) .LT. 90000.) GO TO 70
      REWIND 7
      GO TO 50
   70 CONTINUE
      IF(ABS(TUW-TTAPE) .LT. .01) SKIP=0
      READ (7) ((U(N,M,1),N=1,NMAX),M=1,MMAX)
     1        ,((W(N,M,1),N=1,NMAX),M=1,MMAX)
      IF(SKIP .EQ. 1) GO TO 50
      RETURN
C
C     HERE FOR MULTI-LAYER VELOCITIES
  200 CONTINUE
  250 READ(7) TUW
      IF((TUW+.01) .LT. 90000.) GO TO 270
      REWIND 7
      GO TO 250
  270 CONTINUE
      IF(ABS(TUW-TTAPE) .LT. .01) SKIP=0
      READ(7) DL1,DL2
      DO 280 L=1,NVL
      READ (7) ((U(N,M,L),N=1,NMAX),M=1,MMAX)
     1        ,((W(N,M,L),N=1,NMAX),M=1,MMAX)
  280 CONTINUE
      IF(SKIP .EQ. 1) GO TO 250
      RETURN
      END
      SUBROUTINE VEL(XA,YA,ZA,UA,WA,U,W,DEPTH,NMAX,MMAX)
C     SUBROUTINE TO SUPPLY HORIZONTAL VELOCITY DATA, GIVEN X,Y,Z,T
      DIMENSION U(NMAX,MMAX,1),W(NMAX,MMAX,1),DEPTH(NMAX,1)
      COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/DIMEN/ NS,NSP1,NVL,NSC
      COMMON/VSPECS/ IFORM,DU1,DU2,UU1,UU2,DW1,DW2,WW1,WW2,DL1,DL2
      DIMENSION UI(4),WI(4)
      IF(IFORM .EQ. 4) GO TO 500
      XX=XA
      ZZ=ZA
C     DETERMINE HORIZONTAL COORDINATES OF 4 POINTS SURROUNDING (XX,ZZ) AND
C     WEIGHT FACTORS FOR INTERPOLATION
   30 ZN=ZZ*DXR
      XM=XX*DXR
      N=ZN+.0001
      M=XM+.0001
      EN=ZN-FLOAT(N)
      EM=XM-FLOAT(M)
      IF(EN .LT. .0001) EN=0.
      IF(EM .LT. .0001) EM=0.
C     IF MORE THAN ONE LAYER, BRANCH
      IF(IFORM .EQ. 3) GO TO 300
C     HERE TO INTERPOLATE FOR VELOCITIES IN SINGLE LAYER
      UA1=U(N,M,1)+EN*(U(N+1,M,1)-U(N,M,1))
      WA1=W(N,M,1)+EN*(W(N+1,M,1)-W(N,M,1))
      UA2=U(N,M+1,1)+EN*(U(N+1,M+1,1)-U(N,M+1,1))
      WA2=W(N,M+1,1)+EN*(W(N+1,M+1,1)-W(N,M+1,1))
      UA=UA1+EM*(UA2-UA1)
      WA=WA1+EM*(WA2-WA1)
C     IF USING LOG PROFILE CORRECT VELOCITIES AS APPROPRIATE...IF NOT, RETURN
      IF(IFORM .EQ. 1) GO TO 100
      CALL DINT(XX,ZZ,DD,DEPTH,NMAX)
      COR=0.
      IF(YA/DD .GT. .99) GO TO 50
      COR=1.+.476*(1.+ALOG((DD-YA)/DD))/DD**.666666
   50 CONTINUE
      UA=UA*COR
      WA=WA*COR
  100 RETURN
C
C     HERE FOR MULTI-LAYER VELOCITIES
  300 CONTINUE
      DO 380 I=1,4
      NI=N
      MI=M
      IF(I .EQ. 2 .OR. I .EQ. 3) NI=NI+1
      IF(I .EQ. 3 .OR. I .EQ. 4) MI=MI+1
      IF(DEPTH(NI,MI) .LE. 0.) GO TO 360
      DD1=DL1*DEPTH(NI,MI)
      DD2=DL2*DEPTH(NI,MI)
      IF(YA .GT. DD1) GO TO 320
      UI(I)=U(NI,MI,1)
      WI(I)=W(NI,MI,1)
      GO TO 380
  320 IF(YA .GT. DD2) GO TO 340
      FRAC=(YA-DD1)/(DD2-DD1)
      UI(I)=U(NI,MI,1)+FRAC*(U(NI,MI,2)-U(NI,MI,1))
      WI(I)=W(NI,MI,1)+FRAC*(W(NI,MI,2)-W(NI,MI,1))
      GO TO 380
  340 FRAC=(YA-DD2)/(DEPTH(NI,MI)-DD2)
      UI(I)=U(NI,MI,2)+FRAC*(0.-U(NI,MI,2))
      WI(I)=W(NI,MI,2)+FRAC*(0.-W(NI,MI,2))
      GO TO 380
  360 UI(I)=0.
      WI(I)=0.
  380 CONTINUE
      UA1=UI(1)+EN*(UI(2)-UI(1))
      WA1=WI(1)+EN*(WI(2)-WI(1))
      UA2=UI(3)+EN*(UI(4)-UI(3))
      WA2=WI(3)+EN*(WI(4)-WI(3))
      UA=UA1+EM*(UA2-UA1)
      WA=WA1+EM*(WA2-WA1)
      RETURN
C     ...HERE TO INTERPRET --QUICK LOOK-- VELOCITY PROFILES...
  500 CONTINUE
      IF(YA .LE. DU1) GO TO 510
      IF(YA .GE. DU2) GO TO 520
      UA=UU1+(UU2-UU1)*(YA-DU1)/(DU2-DU1)
      GO TO 550
  510 UA=UU1
      GO TO 550
  520 CALL DINT(XA,ZA,DD,DEPTH,NMAX)
      UA=UU2+(0.-UU2)*(YA-DU2)/(DD-DU2)
  550 CONTINUE
      IF(YA .LE. DW1) GO TO 560
      IF(YA .GE. DW2) GO TO 570
      WA=WW1+(WW2-WW1)*(YA-DW1)/(DW2-DW1)
      GO TO 600
  560 WA=WW1
      GO TO 600
  570 CALL DINT(XA,ZA,DD,DEPTH,NMAX)
      WA=WW2+(0.-WW2)*(YA-DW2)/(DD-DW2)
  600 RETURN
      END

      SUBROUTINE DRAW(X1,X2,X3,X4,Y1,Y2,Y3,Y4,N,IG,NCURV)
C     GRAPHING ROUTINE
C     X1,X2,X3,X4--INDEPENDENT VARIABLES
C     Y1,Y2,Y3,Y4--DEPENDENT VARIABLES
C     N--NUMBER OF POINTS AVAILABLE FOR PLOTTING
      DIMENSION X1(1),X2(1),X3(1),X4(1),Y1(1),Y2(1),Y3(1),Y4(1),X(800),
     *Y(800),YY(800),SYM(4),SIM(20),P(2400)
      DATA SIM/1HY,1HB,1HC,1HS,1HA,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1HT,
     *1HX,1HZ,1H*,1H+,1H*,1HO/                                       NON-ANSI
      IF(NCURV.LT.1) RETURN
C     NX IS NUMBER OF LINES FOR INDEPENDENT VARIABLE
C     NY IS NUMBER OF COLUMNS FOR DEPENDENT VARIABLE
      NX=50
      NY=101
      NSCALE=60
      IN = N/NSCALE
      IF(IN.LT.1) IN=1
C
C     PLACE VARIABLES IN PLOT ARRAYS
      J=0
      DO 1 I=1,N,IN
      J=J+1
      X(J)=X1(I)
    1 Y(J)=Y1(I)
      J=J+1
      X(J)=X1(N)
      Y(J)=Y1(N)
      NN=J
      IF(NCURV.EQ.1) GO TO 5
      DO 2 I=1,N,IN
      J=J+1
      X(J)=X2(I)
    2 Y(J)=Y2(I)
      J=J+1
      X(J)=X2(N)
      Y(J)=Y2(N)
      IF(NCURV.EQ.2) GO TO 5
      DO 3 I=1,N,IN
      J=J+1
      X(J)=X3(I)
    3 Y(J)=Y3(I)
      J=J+1
      X(J)=X3(N)
      Y(J)=Y3(N)
      IF(NCURV.EQ.3) GO TO 5
      DO 4 I=1,N,IN
      J=J+1
      X(J)=X4(I)
    4 Y(J)=Y4(I)
      J=J+1
      X(J)=X4(N)
      Y(J)=Y4(N)
    5 CONTINUE
      GO TO (10,20,50,60,2000,1000,3000),IG
C
   10 SYM(1)=SIM(1)
      SYM(2)=SIM(2)
      SYM(3)=SIM(15)
      SYM(4)=SIM(16)
      CALL NORM(Y,YY,NN,1,0.,AMXY,AMNY)
      NN1=NN+1
      CALL NORM(Y(NN1),YY(NN1),NN,1,0.,AMXB,AMNB)
      NN1=NN1+NN
      CALL NORM(Y(NN1),YY(NN1),NN,1,0.,AMXC,AMNC)
      NN1=NN1+NN
      CALL NORM (Y(NN1),YY(NN1),NN,1,0.,AMXS,AMNS)
      WRITE(6,15) X(1),X(NN),AMXY,AMXB,AMXC,AMXS,AMNY,AMNB,AMNC,AMNS
   15 FORMAT(1H1////10X,59HPLOT OF CLOUD PATH AND RADIUS AS SEEN FROM P
     1OINT OF RELEASE ///10X,45HINDEPENDENT VARIABLE IS TIME (SEC) OVER
     2RANGE,2X,2G13.5///10X,61HDEPENDENT VARIABLES, ALL NORMALIZED FOR P
     3LOTTING ON UNIT AXIS//10X,6HSYMBOL,13X,1HY,17X,1HB,15X,1HX,15X,1HZ
     4//10X,11HMAX PLOTTED,3X,G12.5,3(6X,G12.5)/10X
     5,11HMIN PLOTTED,3X,G12.5,3(6X,G12.5)/10X
     6,7HREMARKS,8X,5HDEPTH,13X,6HRADIUS,12X,12HHOR DIST(CX),6X,12HHOR
     7DIST(CZ) )
      CALL SPLOT(YY,X,P,J,NY,NX,NN,4,SYM)
      RETURN
C
   20 SYM(1)=SIM(5)
      SYM(2)=SIM(2)
      SYM(3)=SIM(3)
      SYM(4)=SIM(1)
      CALL NORM(Y,YY,NN,1,0.,AMXA,AMNA)
      NN1=NN+1
      CALL NORM(Y(NN1),YY(NN1),NN,1,0.,AMXB,AMNB)
      NN1=NN1+NN
      CALL NORM(Y(NN1),YY(NN1),NN,1,0.,AMXC,AMNC)
      NN1=NN1+NN
      CALL NORM(Y(NN1),YY(NN1),NN,1,0.,AMXY,AMNY)
      WRITE(6,25) X(1),X(NN),AMXA,AMXB,AMXC,AMXY,AMNA,AMNB,AMNC,AMNY
   25 FORMAT(1H1////10X,40HPLOT OF COLLAPSING CLOUD CHARACTERISTICS///
     1,10X,39HINDEPENDENT VARIABLE IS TIME OVER RANGE,2X,2G13.5//10X,
     2 60HDEPENDENT VARIABLE, ALL NORMALIZED FOR PLOTTING ON UNIT AXIS//
     3 10X,6HSYMBOL,13X,1HA,17X,1HB,13X,1HC,13X,1HY/10X,11HMAX PLOTTED,
     4 3X,G12.5,4X,3(2X,G12.5)/10X,11HMIN PLOTTED,3X,G12.5,4X,3(2X,G12.5
     5)/10X,7HREMARKS,8X,9HVERT SIZE,9X,8HHOR SIZE,4X,12HHOR DIST(CX),4X
     6,12HHOR DIST(CZ) )
      CALL SPLOT(YY,X,P,J,NY,NX,NN,4,SYM)
      RETURN
C
   50 DO 51 I=1,4
   51 SYM(I)=SIM(I+5)
   52 CALL RANGE(Y,J,AMXS,AMNS,JMX,JMN)
      WRITE(6,500) X(1),X(NN),AMNS,AMXS
      CALL SPLOT( Y,X,P,J,NY,NX,NN,NCURV,SYM)
  500 FORMAT(1H1,/////,2X,31HGRAPH OF WASTE CONCENTRATIONS ,///,
     * 2X,12HRANGE OF X ,20X,2G20.8,/ 2X,32HRANGE OF CONCENTRATIONS PL
     1OTTED   , 2G20.8, &///)
      RETURN
C
   60 DO 61 I=1,4
   61 SYM(I)=SIM(I+9)
      GO TO 52
C
 1000 DO 1001 I=2,4
 1001 SYM(I)=SIM(I+4)
      SYM(1)=SIM(3)
      GO TO 52
C
 3000 CONTINUE
      DO 3001 I=1,4
 3001 SYM(I)=SIM(I+16)
      GO TO 52
C
 2000 SYM(1)=SIM(15)
      CALL RANGE(Y,J,AMX,AMN,JMX,JMN)
      IF(AMN.EQ.0.AND.AMX.EQ.0.) RETURN
      WRITE(6,2001) X(1),X(NN),AMN,AMX
 2001 FORMAT(1H1,11(),20X,15HGRAPH OF X VS Z,///,2X,10HRANGE OF X,
     *2G20.8,/,2X,10HRANGE OF Z,2G20.8)
      CALL SPLOT(Y,X,P,J,NY,NX,NN,NCURV,SYM)
      RETURN
      END

      SUBROUTINE SPLOT(B,A,P,N,L,M,NREP,NSYM,SYM)
C     PRINTER PLOT ROUTINE
C     NSYM--NUMBER OF GRAPHS PLOTTED ON THIS FRAME
C     M--NUMBER OF SPACES DOWN THE PAGE
C     L--NUMBER OF SPACES ACROSS THE PAGE
      DIMENSION A(1),B(1),SYM(1),P(1),Q(20),H(10)
      DATA Q/20*5H-----/                                            NON-ANSI
      DATA BLS/5H     /
      DATA EYE/1HI/
C     SET GRAPH FIELD TO BLANKS
      LOLD=L
      L5=L/5
      L=5*L5
      LO=L5-1
      ML=(M+1)*(L5+1)
      DO 10 J=1,ML
   10 P(J)=BLS
C     DETERMINE MAX AND MIN OF INDEPENDENT VARIABLE A AND DEPENDENT
C     VARIABLE B AND THE INCREMENT OF EACH CORRESPONDING TO ONE PRINTER
C     PRINT POSITION IN EACH DIRECTION
      CALL RANGE(A,N,AMX,AMN,JMX,JMN)
      CALL RANGE(B,N,BMX,BMN,JMX,JMN)
      DIV=5.
      IF(AMX .GT. 100.) DIV=10.
      IAMX=AMX/DIV
      AMX=DIV*FLOAT(IAMX)+DIV
      DA=(AMX-AMN)/FLOAT(M)
      DB=(BMX-BMN)/FLOAT(L)
      WRITE(6,2000) AMX,AMN,DA
 2000 FORMAT(///,1X,26HMAX,MIN,INC. OF IND.VAR.  ,/,1X,6G20.8)
      WRITE(6,2001) BMX,BMN,DB
 2001 FORMAT(//,1X,26HMAX,MIN,INC. OF DEP. VAR.  ,/,1X,6G20.8)
      WRITE(6,2002)
 2002 FORMAT(1H1)
C     DETERMINE AND PRINT TOP (DEPENDENT AXIS) LABEL AND LINE
      JZA=0
      ZRO=0.
      TESTA=AMX*AMN
      TESTB=BMX*BMN
      IF(TESTA)50,60,60
   50 JZA=-AMN/DA
   60 IF(TESTB) 70,90,90
   70 IB=-BMN/DB
      LIA=-L5
      DO 80 J=1,M
      LIA=LIA+L5
   80 CALL PFIX(P,IB,LIA,EYE)
   90 L10=LOLD/20+1
      DB20=20.*DB
      DO 100 J=1,L10
  100 H(J)=BMN+FLOAT(J-1)*DB20
      HMAX=ALOG10(ABS(H(L10)))+.0001
      IF(HMAX .LT. 0.) GO TO 106
      IF(HMAX .GE. 1.) GO TO 109
      WRITE(6,105) (H(J),J=1,L10)
  105 FORMAT(14X,F3.1,5(17X,F3.1))
      GO TO 114
  106 WRITE(6,108) (H(J),J=1,L10)
  108 FORMAT(4X,F6.4,5(14X,F6.4))
      GO TO 114
  109 WRITE(6,110) (H(J),J=1,L10)
  110 FORMAT(12X,F6.2,5(14X,F6.2))
  114 WRITE(6,115) (Q(J),J=1,20)
  115 FORMAT(15X,1HI,20A5)
C
C      ENCODE PLOT POINTS
       DO 200 J=1,N
       IA=(A(J)-AMN)/DA
       LIA=L5*IA
       IB=(B(J)-BMN)/DB
       JZZ=(J-1)/NREP
       ISYM=JZZ-(JZZ/NSYM)*NSYM+1
       CALL PFIX(P,IB,LIA,SYM(ISYM))
  200  CONTINUE
C
C      PRINT GRAPH
       DO 300 J=1,M
       JQ=(J/10)*10
       JLO=J*L5-LO
       JHI=JLO+LQ
       WRITE(6,255) (P(K),K=JLO,JHI)
  255  FORMAT(15X,1HI,20A5)
       IF(J.EQ.JZA) WRITE(6,265) ZRO,(Q(K),K=1,20)
  265  FORMAT(1H+,G13.5,2X,20A5)
       IF(JQ.NE.J) GO TO 300
       DAJ=AMN+DA*FLOAT(J)
       WRITE(6,265 ) DAJ,(Q(K),K=1,20)
  300  CONTINUE
       RETURN
       END

      SUBROUTINE RANGE(A,N,AMX,AMN,JMX,JMN)
C     GIVEN ARRAY A WITH N ELEMENTS, FIND MAX AND MIN VALUES AND
C     CORRESPONDING INDICES
      DIMENSION A(1)
      AMX=A(1)
      AMN=A(1)
      JMX=1
      JMN=1
      DO 100 J=2,N
      IF(A(J).LT.AMX) GOTO 50
      JMX=J
      AMX=A(J)
   50 CONTINUE
      IF(A(J).GT.AMN) GOTO 100
      JMN=J
      AMN=A(J)
  100 CONTINUE
      RETURN
      END

      SUBROUTINE NORM(A,B,N,C1,C2,AMX,AMN)
C     NORMALIZES ARRAY A WITH ARBITRARY MAX VALUE AMX, AND ARBITRARY
C     MIN VALUE AMN, INTO ARRAY B WITH MAX VALUE C1 AND MIN VALUE C2
      DIMENSION A(1),B(1)
      CALL RANGE(A,N,AMX,AMN,JMX,JMN)
      CC=C1-C2
      X=(AMX-AMN)/CC
      IF(X.EQ.0.)X=1.
      Y=(C1*AMN-C2*AMX)/CC
      Z=1./X
      DO 100 J=1,N
      B(J)=(A(J)-Y)*Z
  100 CONTINUE
      RETURN
      END

      SUBROUTINE PFIX(P,IB,LIA,SYM)
C     ROUTINE TO PLACE ALPHAMERIC CHARACTER INTO PROPER PRINT
C     POSITION IN ARRAY P
      DIMENSION BUF(5),P(1)
      IB5=IB/5
      LIB=LIA+IB5+1
      DECODE(5,1000,P(LIB)) BUF      NON-ANSI
 1000 FORMAT(5A1)
      IRES=IB-5*IB5+1
      BUF(IRES)=SYM
      ENCODE(5,1000,P(LIB)) BUF      NON-ANSI
      RETURN
      END

      SUBROUTINE BOOKS(K,SS,TSIDE,TTHK,TTHOP,TMASS,TX,TZ,NS,DEPTH,ACCUM
     1,U,W,NMAX,MMAX,NSC)
C DUMP MODEL
C HOUSEKEEPING MUTINE FOR MASS TRANSFER FROM SHORT TO LONG TERM
C TAKEN ONE COMPONENT (INDEX K) AT A TIME
      DIMENSION SS(600,NS),ACCUM(NMAX,1),DEPTH(NMAX,1),TSIDE(1),TTHK(1)
     1, TTHOP(1),TMASS(1),TX(1),TZ(1)
      COMMON/XX/ XTCLD
      COMMON/CLOUD/I(600),CX(600),CY(600),C(600),CU(600),CV(600)
     1, CW(600),DEN(N),SS(600),BC(600),AA(600),TC(600),VF
      COMMON/SPECS/PARAM(13),SHORT(13),SS(13),TSTEP(13),VOIDS(13),BVOID
      COMMON/GUIDE/I DUMP,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1 NEWT,KEY1,KEY3
      COMMON/DXY/ DX,DIL,XBARGE,ZHARGE,DXH,DXR,AREA
      COMMON/COL/ AD,THED,FRED
      COMMON/LICOF/ ALAMDA,DIF,AKYO
      COMMON/SWITCH/ ITF
      COMMON/LIFE/ ITD,ID(6),OC(6),TRACER,CINIT,CBACK
      NSP1=NS+1
      XTCLD=0.
      C1=3.14159/3.
      NEWT=1
      INCT=ISTEP/10
C INCT IS INCREMENT OF STEPS TO CHECK SHORT TERM
      IF(K .EQ. NSP1) GO TO 300
  100 CONTINUE
      LAST=NEWT
  102 NEWT=NEWT+INCT
C AT LAST STEP IN SHORT TERM SET TO CREATE FINAL CLOUD OF THIS
C MATERIAL
      IF(NEWT .GT. ISTEP) NEWT=ISTEP
C
C ....HERE TO CHECK IF SOLIDS HAVE LEFT CLOUD IN LATEST TIME INTERVAL
C     L IS INDICATOR OF CHANGE OF COMPUTATION PHASE DURING SHORT
C     TERM
C     VLDSS IS SOLID VOLUME LOSS FROM CLOUD
      IF(I(NEWT) .LE. I(ITF)) GO TO 120
      IF(I(LAST) .GT. I(ITF)) GO TO 140
C
C BETWEEN CONVECTIVE DESCENT AND DYNAMIC COLLAPSE
      VVV= C1*SS(LAST,K)*AA(LAST)**3
      VLDSS=VV-.25*C1*SS(NEWT,K)*AA(NEWT)*BC(NEWT)**2
      L=2
      GO TO 200
C
C IN CONVECTIVE DESCENT PHASE
  120 CONTINUE
      VVV=C1*SS(LAST,K)*AA(LAST)**3
      VLDSS=VVV-C1*SS(NEWT,K)*AA(NEWT)**3
      L=1
      GO TO 200
C
C IN DYNAMIC COLLAPSE PHASE
  140 CONTINUE
      VVV=.25*C1*SS(LAST,K)*AA(LAST)*BC(LAST)**2
      VLDSS=VVV-.25*C1*SS(NEWT,K)*AA(NEWT)*BC(NEWT)**2
      L=3
  200 CONTINUE
C AT FINAL SHORT TERM TIME STEP, VOLUME OF NEW CLOUD IS ALL
C     REMAINING MATERIAL IN CLOUD
      IF(NEWT .EQ. ISTEP) VLOSS=VV
C IF VOLUME LOSS FOR THIS TIME INTERVAL IS ZERO, INCREMENT TO NEXT
C TIME STEP
      IF(NEWT .EQ. ISTEP) GO TO 210
      IF(VLOSS .EQ. 0.)GO TO 100
      IF(VLOSS/VV) .LT. 1.0E-03) GO TO 102
C
C ...HERE TO CREATE SOLIDS CLOUDS...
  210 NTCLD=NTCLD+1
      IF(NTCLD .LE. NSC) GO TO 219
      WRITE(6,205)
  205 FORMAT(///10X,38HSHALL CLOUDS ARRAYS FILLED...CALL EXIT /10X,
     1 39HUSER SHOULD INCREASE INPUT VARIABLE NSC )
      CALL EXIT
  219 CONTINUE
      TMASS(NTCLD)=VLOSS
      TTHK(NTCLD)=VFALL(K )*(T(NEWT)-T(LAST))
      IF(NEWT .EQ. ISTEP)TTHK(NTCLD)=TTHK(NTCLD)*AA(ISTEP)
C HORIZONTAL POSITION MEASUREMENT NOW TRANSLATED SO THAT IT IS W/R
C TO ESTUARY COORDINATES
      TX(NTCLD)=CX(NEWT)+XBARGE
      TZ(NTCLD)=CZ(NEWT)+ZBARGE
      CALL DINT(TX(NTCLD),TZ(NTCLD),D3,DEPTH,NMAX)
      GO TO(220,240,240),L
  220 TTOP(NTCLD)=CY(NEWT)+.5*AA(NEWT)/4.
      IF(NEWT .EQ. ISTEP)TTOP(NTCLD)=TTOP(NTCLD)-.5*AA(NEWT)/4.
      GO TO 250
  240 TTOP(NTCLD)=CY(NEWT)+AA(NEWT)*.5
      IF(IBED .NE. 0 .AND. NEWT .GT. IBED .AND. NEWT .LT. ILEAVE)
     1 TTOP(NTCLD)=D3
      IF(NEWT .EQ. ISTEP)TTOP(NTCLD)=TTOP(NTCLD)-AA(NEWT)
  250 CONTINUE
      IF(TTOP(NTCLD)+TTHK(NTCLD) .GT. D3) TTOP(NTCLD)=D3-TTHK(NTCLD)
C TSIDE IS SIDE OF SQUARE WITH AREA EQUAL TO AREA OF CIRCULAR
C SHORT TERM CLOUD
      TSIDE(NTCLD)=.886226*BC(ISTEP)
  253 WRITE(6,255) NTCLD,T(NEWT),TX(NTCLD),TZ(NTCLD),TSIDE(NTCLD)
     1,TTOP(NTCLD),TTHK(NTCLD),TMASS(NTCLD),NEWT,LAST
  255 FORMAT(///1X,27HNEW CLOUD CREATED, NTCLD = ,I5,3X,6HT(SEC),8X,2HTX
     1,10X,2HTZ,9X,5HTSIDE,8X,3HTOP,8X,4HTTHK,8X,5HTMASS,8X,4HNEWT
     2,7X,4HLAST/1X,7G12.4,4X,I4,6X,I4)
      GO TO 400
C
C ...HERE TO CREATE FINAL FLUID CLOUD...
  300 NTCLD=NTCLD+1
      NEWT=ISTEP
      TX(NTCLD)=CX(ISTEP)+XBARGE
      TZ(NTCLD)=CZ(ISTEP)+ZBARGE
      CALL DINT(TX(NTCLD),TZ(NTCLD),D3,DEPTH,NMAX)
      TSIDE(NTCLD)=.886226*BC(ISTEP)
      IF(ISTEP .GT. ITF) GO TO 340
      TTOP(NTCLD)=CY(ISTEP)-.5*AA(ISTEP)/4.
      TMASS(NTCLD)=FC(ISTEP)*C1*AA(ISTEP)**3
      GO TO 350
  340 TTOP(NTCLD)=CY(ISTEP)-AA(ISTEP)*.5
      IF(IBED .NE. 0 .AND. NEWT .GT. IBED .AND. NEWT .LT. ILEAVE)
     1 TTOP(NTCLD)=D3-AA(ISTEP)
      TMASS(NTCLD)=FC(ISTEP)*.25*C1*AA(ISTEP)*BC(ISTEP)**2/8.
  350 CONTINUE
      TTHK(NTCLD)=TMASS(NTCLD)/(FC(ISTEP)*TSIDE(NTCLD)**2)
      IF(TTOP(NTCLD)+TTHK(NTCLD) .GT. D3) TTOP(NTCLD)=D3-TTHK(NTCLD)
      GO TO 253
C
C ...UPDATE LATEST CLOUD TO 1/2 HOUR AFTER DUMP
  400 DLT=DTL -T(NEWT)
      DTOP=0.
      CALL DINT(TX(NTCLD),TZ(NTCLD),D1,DEPTH,NMAX)
      IF(TTOP(NTCLD) .EQ. D1)GO TO 410
C ...CONVECT...
C DETERMINE HORIZONTAL VELOCITIES
      YY=TTOP(NTCLD)+.5*TTHK(NTCLD)
      CALL VEL(TX(NTCLD),YY,TZ(NTCLD),UA,WA,U,W,DEPTH,NMAX,MMAX)
      TX(NTCLD)=TX(NTCLD)+UA*DELT
      TZ(NTCLD)=TZ(NTCLD)+WA*DELT
C CHECK FOR SMALL CLOUD PASSING OUT OF GRID BOUNDARY
      NCHK=TX(NTCLD)*DXR
      MCHK=TZ(NTCLD)*DXR
      IF(NCHK .LT. 1 .OR. NCHK .GT. NMAX .OR. MCHK .LT. 1 .OR. MCHK .GT.
     1 MMAX) WRITE(6,405)
  405 FORMAT(/5X,101H---WARNING---A SMALL CLOUD HAS PASSED OUT OF GRID B
     1OUNDARY IN SUBROUTINE HOOKS...ERRORS WILL OCCUR--- )
      CALL DINT(TX(NTCLD),TZ(NTCLD),D2,DEPTH,NMAX)
C DTOP ESTIMATES VARIATION OF CLOUD DEPTH DUE TO CONVECTION OVER
C VARYING DEPTHS
      DTOP=(D1-D2)*TTOP(NTCLD)/D1
C ...DIFFUSE HORIZONTALLY...
      TSIDE(NTCLD)=TSIDE(NTCLD)*(1.+(1.33333*ALAMDA/TSIDE(NTCLD)**
     1 .66666)*DELT)**1.5
C ...DIFFUSE VERTICALLY...
      DTOP=TTOP(NTCLD)
      MX=TX(NTCLD)*DXR+.5
      MZ=TZ(NTCLD)*DXR+.5
      CALL VDIFF(N,D,MX,MZ,DTOP,DCO,U,W,DEPTH,NMAX,MMAX)
      DINK=2.*SQRT(DCO*DELT)
      TTOP(NTCLD)=TTOP(NTCLD)+DINK
      IF(TTOP(NTCLD) .LT. 0.) TTOP(NTCLD)=0.
      DBOT=DINK+TTHK(NTCLD)
      IF(DBOT .GT. D2) DBOT=D2
      CALL VDIFF(N,D,MX,MZ,DTOP,DCO,U,W,DEPTH,NMAX,MMAX)
      DUNK=2.*SQRT(DCO*DELT)
      TTHK(NTCLD)=TTHK(NTCLD)+DINK+DUNK
      IF(DTOP+TTHK(NTCLD)) .GT. D2) TTHK(NTCLD)=D2-TTOP(NTCLD)
C ...SETTLE...
  410 IF(K .EQ. NSP1) GO TO 440
      DIST=VFALL(K)*DELT
      MX=TX(NTCLD)*DXR+.5
      MZ=TZ(NTCLD)*DXR+.5
  411 XS=D2-TTOP(NTCLD)-TTHK(NTCLD)-DTOP
      IF(XS .GE. DIST) GO TO 430
      IF(XS .GE. 0.) GO TO 412
      IF(TTHK(NTCLD) .GT. D2) GO TO 420
      FALOUT=ABS(XS)*TTHK(NTCLD)*TMASS(NTCLD)
      ACCUM(NZ,MX)=ACCUM(NZ,MX)+FALOUT
      TMASS(NTCLD)=TMASS(NTCLD)-FALOUT
      TTHK(NTCLD)=TTHK(NTCLD)-ABS(XS)
      GO TO 411
  412 IF(TTHK(NTCLD) .LT. (DIST-XS)) GO TO 420
      FALOUT =(DIST-XS)/TTHK(NTCLD)*TMASS(NTCLD)
      ACCUM(NZ,MX)=ACCUM(NZ,MX)+FALOUT
      TMASS(NTCLD)=TMASS(NTCLD)-FALOUT
      TTHK(NTCLD)=TTHK(NTCLD)-(DIST-XS)
      TTOP(NTCLD)=TTOP(NTCLD)+DIST-DTOP
      GO TO 440
  420 ACCUM(NZ,MX)=ACCUM(NZ,MX)+TMASS(NTCLD)
C ERASE CLOUD
      TMASS(NTCLD)=0.
      TX(NTCLD)=0.
      TZ(NTCLD)=0.
      TSIDE(NTCLD)=0.
      TTHK(NTCLD)=0.
      TTOP(NTCLD)=0.
      NTCLD=NTCLD-1
      GO TO 440
  430 TTOP(NTCLD)=TTOP(NTCLD)+DIST-DTOP
  440 CONTINUE
C
      IF(K .NE. NSP1) GO TO 700
      IF(TMASS(NTCLD) .LT. 1.0E-10) GO TO 700
      VOLUME=TTHK(NTCLD)*TSIDE(NTCLD)**2
      CTRACE=(CINIT)*VF+(VOLUME-VF)*CBACK)/VOLUME
      DIF=TRACE-CINIT
      IF(DIF .GT. OC(ITD)) GO TO 700
      TD(ITD)=DTL
      ITD=ITD+1
  700 IF(NEWT .EQ. ISTEP) RETURN
      GO TO 100
      END
      SUBROUTINE INJECT(K,C,THICK,TOP,ACCUM,DEPTH,U,W,TSIDE,TTHK,TTOP
     1, TMASS,TX,TZ,NMAX,MMAX,ETS)
C DUMP MODEL
C ROUTINE TO ANALYTICALLY CONVECT AND DIFFUSE DREDGED MATERIAL
C CLOUDS THAT ARE TOO SMALL TO BE DEFINED BY THE NORMAL GRID.
C IF A CLOUD GROWS HIGGER THAN STEPSIZE DX, THEN IT IS INSERTED INTO
C NORMAL GRID.
C
      DIMENSION C(NMAX,1),THICK(NMAX,1),TOP(NMAX,1),ACCUM(NMAX,1)
     1, DEPTH(NMAX,1),TSIDE(1),TTHK(1),TTOP(1),TMASS(1),TX(1),TZ(1)
      COMMON/MC/ NTCLD
      COMMON/DIMEN/ NS,NSP1,NVL,NSC
      COMMON/DXY/ DX,DIL,XBARGE,ZHARGE,DXH,DXR,AREA
      COMMON/SPECS/PARAM(13),RDAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
      COMMON/LICOF/ ALAMDA,DIF,AKYO
      COMMON/LUST/ GONE
      COMMON/LIFE/ ITD,ID(6),OC(6),TRACER,CINIT,CBACK
      COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),CV(600)
     1, CW(600),DENDIF(600),BC(600),AA(600),FC(600),VF
C
C CHECK CLOUD FOR INJECTION TO LONG TERM GRID
      N=1
      NTEMP=NTCLD
   60 CONTINUE
C CHECK CLOUD SIZE...IF LARGE ENOUGH, INJECT INTO NORMAL GRID
      IPROP=0
      IF(TMASS(N) .EQ. 0.) GO TO 70
C CHECK FOR SMALL CLOUDS ON OR OUTSIDE OF GRID BOUNDARIES
      MXC=TX(N)*DXR+.0001
      NZC=TZ(N)*DXR+.0001
      IF(MXC .GT. MMAX .OR. MXC .LT. 1 .OR. NZC .GT. NMAX .OR. NZC .LT.
     1  1) GO TO 250
      IF(TSIDE(N) .GT. 2.*DX) GO TO 200
      IF(TSIDE(N) .LT. DX) GO TO 100
C ...HERE TO INJECT A SMALL CLOUD INTO THE NORMAL GRID
C ASSIGN CLOUD MATERIAL TO FOUR NEAREST GRID POINTS
      MX=TX(N)*DXR+.0001
      NZ=TZ(N)*DXR+.0001
      PROPX=(TX(N)-FLOAT(MX)*DX)/DX
      IF(PROPX .LT. .0001) PROPX=0.
      XMASS3=PROPX*TMASS(N)
      XMASS1=TMASS(N)-XMASS3
      PROPZ=(TZ(N)-FLOAT(NZ)*DX)/DX
      IF(PROPZ .LT. .0001) PROPZ=0.
      TMASS2=PROPZ*XMASS1
      TMASS1=XMASS1-TMASS2
      TMASS4=PROPZ*XMASS3
      TMASS3=XMASS3-TMASS4
      VOL=AREA * TTHK(N)
C
      IF(TMASS1 .EQ. 0.) GO TO 61
      IF(C(NZ,MX) .NE. 0.) GO TO 610
C HERE TO ADD MATL TO EMPTY GRID
      C(NZ ,MX )=TMASS1/VOL
      THICK(NZ ,MX )=TTHK(N)
      TOP(NZ ,MX )=TTOP(N)
      GO TO 61
  610 CONTINUE
C HERE ADD MATL TO NON-EMPTY GRID
      DMSC(NZ,MX)=THICK(NZ,MX)*AREA
      B1=TOP(NZ,MX)+THICK(NZ,MX)
      B2=TTOP(N)+TTHK(N)
      BOT=AMAX1(B1,B2)
      TOP(NZ,MX)=AMIN1(TOP(NZ,MX),TTOP(N))
      THICK(NZ,MX)=BOT-TOP(NZ,MX)
      C(NZ,MX)=(DM+TMASS1)/(THICK(NZ,MX)*AREA)
      IF(TMASS2 .EQ. 0.) GO TO 62
      IF(C(NZ+1,MX) .NE. 0.) GO TO 620
C HERE TO ADD MATL TO EMPTY GRID
      C(NZ+1,MX )=TMASS2/VOL
      THICK(NZ+1,MX )=TTHK(N)
      TOP(NZ+1,MX )=TTOP(N)
      GO TO 62
  620 CONTINUE
C HERE TO ADD MATL TO NON-EMPTY GRID
      DMSC(NZ+1,MX)=THICK(NZ+1,MX)*AREA
      B1=TOP(NZ+1,MX)+THICK(NZ+1,MX)
      B2=TTOP(N)+TTHK(N)
      BOT=AMAX1(B1,B2)
      TOP(NZ+1,MX)=AMIN1(TOP(NZ+1,MX),TTOP(N))
      THICK(NZ+1,MX)=BOT-TOP(NZ+1,MX)
      C(NZ+1,MX)=(DM+TMASS2)/(THICK(NZ+1,MX)*AREA)
   62 IF(TMASS3 .EQ. 0.) GO TO 63
      IF(C(NZ,MX+1) .NE. 0.) GO TO 630
C HERE ADD MATL TO EMPTY GRID
      C(NZ ,MX+1)=TMASS3/VOL
      THICK(NZ ,MX+1)=TTHK(N)
      TOP(NZ ,MX+1)=TTOP(N)
      GO TO 63
  630 CONTINUE
C HERE ADD MATL TO NON-EMPTY GRID
      DMSC(NZ,MX+1)=THICK(NZ,MX+1)*AREA
      B1=TOP(NZ,MX+1)+THICK(NZ,MX+1)
      B2=TTOP(N)+TTHK(N)
      BOT=AMAX1(B1,B2)
      TOP(NZ,MX+1)=AMIN1(TOP(NZ,MX+1),TTOP(N))
      THICK(NZ,MX+1)=BOT-TOP(NZ,MX+1)
      C(NZ,MX+1)=(DM+TMASS3)/(THICK(NZ,MX+1)*AREA)
   63 IF(TMASS4 .EQ. 0.) GO TO 64
      IF(C(NZ+1,MX+1) .NE. 0.) GO TO 640
C HERE ADD MATL TO EMPTY GRID
      C(NZ+1,MX+1)=TMASS4/VOL
      THICK(NZ+1,MX+1)=TTHK(N)
      TOP(NZ+1,MX+1)=TTOP(N)
      GO TO 64
  640 CONTINUE
C HERE ADD MATL TO NON-EMPTY GRID
      DMSC(NZ+1,MX+1)=THICK(NZ+1,MX+1)*AREA
      B1=TOP(NZ+1,MX+1)+THICK(NZ+1,MX+1)
      B2=TTOP(N)+TTHK(N)
      BOT=AMAX1(B1,B2)
      TOP(NZ+1,MX+1)=AMIN1(TOP(NZ+1,MX+1),TTOP(N))
      THICK(NZ+1,MX+1)=BOT-TOP(NZ+1,MX+1)
      C(NZ+1,MX+1)=(DM+TMASS4)/(THICK(NZ+1,MX+1)*AREA)
   64 CONTINUE
      GO TO 70
C ...HERE TO INJECT CLOUDS WITH SIDE GREATER THAN 2*DX
  200 CONTINUE
C DETERMINE COORDINATES OF CORNERS
      HS=.5*TSIDE(N)
      XU=TX(N)-HS
      XD=TX(N)+HS
      ZL=TZ(N)-HS
      ZR=TZ(N)+HS
C DETERMINE GRID SQUARES TO GET CLOUD MASS
      NL=ZL/DX+1.
      MU=XU/DX+1.
      NR=ZR/DX
      MD=XD/DX
      IF(NL .LT. 1) NL=1
      IF(NR .GT. NMAX)NR=NMAX
      IF(MU .LT. 1) MU=1
      IF(MD .GT. MMAX) MD=MMAX
      SIDE2=TSIDE(N)**2
      TMC=0.
      DO 220 MM=MU,MD
      DO 220 NN=NL,NR
      X1=FLOAT(MM)*DX-DXH
      IF(MM .EQ. MU) X1=XU
      X2=FLOAT(MM)*DX+DXH
      IF(MM .EQ. MD) X2=XD
      Z1=FLOAT(NN)*DX-DXH
      IF(NN .EQ. NL) Z1=ZL
      Z2=FLOAT(NN)*DX+DXH
      IF(NN .EQ. NR)Z2=ZR
      IF(C(NN,MM) .NE. 0.) GO TO 210
C ADD MATL TO EMPTY GRID
      TOP(NN,MM)=TTOP(N)
      THICK(NN,MM)=TTHK(N)
      C(NN,MM)=((X2-X1)*(Z2-Z1)*TMASS(N)/(SIDE2*THICK(NN,MM)*AREA))
      GO TO 215
  210 CONTINUE
C HERE ADD MATL TO NON-EMPTY GRID
      DM=C(NN,MM)*THICK(NN,MM)*AREA
      B1=TOP(NN,MM)+THICK(NN,MM)*AREA
      B2=TTOP(N)+TTHK(N)
      BOT=AMAX1(B1,B2)
      TOP(NN,MM)=AMIN1(TOP(NN,MM),TTOP(N))
      THICK(NN,MM)=BOT-TOP(NN,MM)
      C(NN,MM)=(DM+((X2-X1)*(Z2-Z1)/SIDE2)*TMASS(N) /(THICK(NN,MM)*AREA))
  215 TMC=TMC+C(NN,MM)*THICK(NN,MM)*AREA
  220 CONTINUE
C HERE COLLECT MASS SPILLED OUT OF BOUNDARY FROM LARGE CLOUD
      GONE=GONE+TMASS(N)-TMC
      GO TO 70
  250 CONTINUE
C HERE COLLECT MASS PASSING THROUGH GRID BOUNDARY
      GONE=GONE+TMASS(N)
C
C ERASE TRANSITION CLOUD AND MOVE CLOUDS BEHIND IT UP ONE SLOT
   70 NTEMP=NTEMP-1
      IERASE=1
      DO 80 I=N,NTEMP
      TSIDE(I)=TSIDE(I+1)
      TTHK(I)=TTHK(I+1)
      TTOP(I)=TTOP(I+1)
      TMASS(I)=TMASS(I+1)
      TX(I)=TX(I+1)
      TZ(I)=TZ(I+1)
   80 CONTINUE
      TSIDE(NTEMP+1)=0.
      TTHK(NTEMP+1)=0.
      TTOP(NTEMP+1)=0.
      TMASS(NTEMP+1)=0.
      TX(NTEMP+1)=0.
      TZ(NTEMP+1)=0.
  100 CONTINUE
      IF(IERASE .EQ. 0) N=N+1
      IF(N .LE. NTEMP) GO TO 60
      NTCLD=NTEMP
      IF(NTCLD .EQ. 0) RETURN
C
C LOOP ONCE FOR EACH CLOUD
      DO 50 N=1,NTCLD
C CONVECT...
C DETERMINE HORIZONTAL VELOCITIES
      YY=TTOP(N)+.5*TTHK(N)
      CALL VEL(TX(N),YY,TZ(N),UA,WA,U,W,DEPTH,NMAX,MMAX)
      CALL DINT(TX(N),TZ(N),D1,DEPTH,NMAX)
      TX(N)=TX(N)+UA*DTL
      TZ(N)=TZ(N)+WA*DTL
C CHECK FOR SMALL CLOUD PASSING OUT OF GRID BOUNDARY
      NCHK=TX(N)*DXR
      MCHK=TX(N)*DXR
      IF(NCHK .LT. 1 .OR. NCHK .GT. NMAX .OR. MCHK .LT. 1 .OR. MCHK .GT.
     1 MMAX) WRITE(6,405)
  405 FORMAT(/5X,101H---WARNING---A SMALL CLOUD HAS PASSED OUT OF GRID B
     1OUNDARY IN SUBROUTINE HOOKS...ERRORS WILL OCCUR--- )
      CALL DINT(TX(N),TZ(N),D2,DEPTH,NMAX)
C DTOP ESTIMATES VARIATION OF CLOUD DEPTH DUE TO CONVECTION OVER
C VARYING DEPTHS
      DTOP=(D1-D2)*TTOP(N)/D1
C ...DIFFUSE HORIZONTALLY...
      TSIDE(N)=TSIDE(N)*(1.+(1.33333*ALAMDA/TSIDE(N)**.666666)*DTL)
     1 **1.5
C ...SETTLE....
      IF(K .EQ. NSP1) GO TO 50
      DIST=VFALL(K)*DTL
      MX=TX(N)*DXR + .5
      NZ=TZ(N)*DXR + .5
  411 XS=D2-TTOP(N)-TTHK(N)-DTOP
      IF(XS .GE. DIST) GO TO 40
      IF(XS .GE. 0.) GO TO 412
      FALOUT=ABS(XS)/TTHK(N)*TMASS(N)
      ACCUM(NZ,MX)=ACCUM(NZ,MX)+FALOUT
      TMASS(N)=TMASS(N)-FALOUT
      TTHK(N)=TTHK(N)-ABS(XS)
      GO TO 411
  412 IF(TTHK(N) .LT. (DIST-XS)) GO TO 30
      FALOUT=(DIST-XS)/TTHK(N)*TMASS(N)
      ACCUM(NZ,MX)=ACCUM(NZ,MX)+FALOUT
      TMASS(N)=TMASS(N)-FALOUT
      TTHK(N)=TTHK(N) - (DIST-XS)
      TTOP(N) = TTOP(N) + DIST-DTOP
      GO TO 50
   30 ACCUM(NZ,MX)=ACCUM(NZ,MX)+TMASS(N)
      TMASS(N)=0.
      GO TO 50
   40 TTOP(N)=TTOP(N) + DIST-DTOP
   50 CONTINUE
C ...DIFFUSE VERTICALLY...
      DTOP=TTOP(N)
      MX=TX(N)*DXR+.5
      MZ=TZ(N)*DXR+.5
      CALL VDIFF(N,D,MX,DTOP,DCO,U,W,DEPTH,NMAX,MMAX)
      DINK=2.*SQRT(DCO*DTL)
      TTOP(N)=TTOP(N)+DINK
      IF(TTOP(N) .LT. 0.) TTOP(N)=0.
      DBOT=DTOP+TTHK(N)
      IF(DBOT .GT. DEPTH(NZ,MX)) DBOT=DEPTH(NZ,MX)
      CALL VDIFF(N,D,MX,DBOT,DCO,U,W,DEPTH,NMAX,MMAX)
      DUNK=2.*SQRT(DCO*DTL)
      TTHK(N)=TTHK(N)+DINK+DUNK
      IF(DTOP+TTHK(N) .GT. DEPTH(NZ,MX)) TTHK(N)=DEPTH(NZ,MX)-TTOP(N)
   53 CONTINUE
      NTEMP=NTCLD
      I=1
  500 IF(TMASS(I) .NE. 0.) GO TO 570
      NTEMP=NTEMP-1
      DO 520 J=I,NTEMP
      TMASS(I)=TMASS(I+1)
      TSIDE(I)=TSIDE(I+1)
      TTHK(I)=TTHK(I+1)
      TTOP(I)=TTOP(I+1)
      TX(I)=TX(I+1)
  520 TZ(I)=TZ(I+1)
  570 IF(I .GE. NTEMP) GO TO 580
      I=I+1
      GO TO 500
  580 NTCLD=NTEMP
      IF(K .NE. NSP1) RETURN
C CHECK FLUID DILUTION
      CMAX=0.
      NSAVE=1
      DO 700 N=1,NTCLD
      CF=TMASS(N)/(TTHK(N)*TSIDE(N)**2)
      CMAX=AMAX1(CMAX,CF)
      IF(ABS(CMAX-CF) .LT. .0001) NSAVE=N
  700 CONTINUE
      IF(CMAX .LT. 1.E-30) GO TO 460
      VOLUME=TTHK(NSAVE)*TSIDE(NSAVE)**2
      CTRACE=(CINIT*VF+(VOLUME-VF)*CBACK)/VOLUME
      DIF=TRACE/CINIT - 1.
      IF(DIF .GT. OC(ITD)) GO TO 460
      TD(ITD)=ETS
      ITD=ITD+1
  460 CONTINUE
      RETURN
      END

      SUBROUTINE MAD(K,ETS,X,Z,U,W,C,THICK,TOP,DEPTH,ACCUM,CP,THICKP,
     1 TOPP,COUNT,ICODE,TSIDE,TTHK,TTOP,TMASS,TX,TZ,NMAX,MMAX)
C ROUTINE TO COMPUTE CONVECTION AND DIFFUSION
      COMMON/DIMEN/ NS,NSP1,NVL,NSC
      DIMENSION X(NMAX,1),Z(NMAX,1),C(NMAX,1),THICK(NMAX,1),TOP(NMAX,1)
     1 , DEPTH(NMAX,1),ACCUM(NMAX,1),CP(NMAX,1),THICKP(NMAX,1)
     2 , TOPP(NMAX,1),COUNT(NMAX,1),ICODE(NMAX,1),TMASS(1),TSIDE(1),TX(1)
     3, TZ(1),TTOP(1),TTHK(1)
      COMMON/GUIDE2/NIND,NLINE(150),MF(150),ML(150)
      COMMON/DXY/ DX,DIL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/SPECS/PARAM(13),RDAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
      COMMON/POINT/NST,MST
      COMMON/CHECK/TOTAL
      COMMON/COMP/ CK,CHKM
      COMMON/MC/ NTCLD
      COMMON/LOST/ GONE
      COMMON/PR/ PRT
      COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
      LOGICAL PRT
      Q=1.0E-06
C
C MOVE AND DIFFUSE SMALL CLOUDS, IF ANY
      IF(ABS(ETS-DTL) .LT. .0001) GO TO 10
      IF(NTCLD .GT. 0) CALL ACAD(K,C,THICK,TOP,ACCUM,DEPTH,U,W,TSIDE,
     1 TTHK,TTOP,TMASS,TX,TZ,NMAX,MMAX,ETS)
C
   10 CHKM=0.
      CMAX=0.
      DO 20 N=1,NMAX
      DO 20 M=1,MMAX
      CMAX=AMAX1(CMAX,C(N,M))
   20 CHKM=CHKM+C(N,M)*THICK(N,M)*AREA
      IF(CHKM .LT. 1.0E-06) GO TO 699
C-----------------------------------------------------------------------
C
C BEGIN COMPUTATIONS OVER LARGE GRID
C
C-----------------------------------------------------------------------
      DO 100 N=1,NMAX
      DO 100 M=1,MMAX
      Z(N,M)=FLOAT(N)*DX
  100 X(N,M)=FLOAT(M)*DX
C
C MAP LOCATIONS OF POINTS WHICH TERMINATE IN THE BAY
      DO 200 NUM=1,NIND
      MST=NLINE(NUM)
      MFST=MF(NUM)
      MLST=ML(NUM)
      DO 200 NST=MFST,MLST
      IF( ICODE(NST,MST).GT.1) GO TO 200
C NST AND MST ARE INDEX OF GRID POINT X(NST,MST) AND Z(NST,MST)
C ARE COORDINATES OF LOCATION OF THIS PARTICLE AT START OF
C CONVECTIVE STEP
      YY=TOP(NST,MST)+.5*THICK(NST,MST)
      CALL TRNSPT (Z(NST,MST),X(NST,MST),YY,U,W,DEPTH,ICODE,NMAX,MMAX)
  200 CONTINUE
C CLEAR ARRAYS
      DO 320 N=1,NMAX
      DO 320 M=1,MMAX
      CP(N,M)=0.
      THICKP(N,M)=0.
  320 TOPP(N,M)=0.
C
C COMPUTE NEW CONCENTRATIONS FOR ALL POINTS IN BAY
      CM=0.
      DO 510 NUM=1,NIND
      MST=NLINE(NUM)
      MFST=MF(NUM)
      MLST=ML(NUM)
      DO 510 NST=MFST,MLST
      ZN=Z(NST,MST)+DXH
      XM=X(NST,MST)+DXH
      N=ZN+.0001
      M=XM+.0001
      EN=ZN-FLOAT(N)
      EM=XM-FLOAT(M)
      IF(EN .LT. .0001) EN=0.
      IF(EM .LT. .0001) EM=0.
      EN1=1.-EN
      EM1=1.-EM
      ISUM=0
      CALL AVESPT(N ,M ,C1,TH1,T1,ISUM,C,THICK,TOP,ICODE,NMAX,
     1    DEPTH(N,M))
      CALL AVESPT(N+1,M ,C2,TH2,T2,ISUM,1,C,THICK,TOP,ICODE,NMAX,
     1    DEPTH(N+1,M))
      CALL AVESPT(N+1,M+1,C3,TH3,T3,ISUM,2,C,THICK,TOP,ICODE,NMAX,
     1    DEPTH(N+1,M+1))
      CALL AVESPT(N ,M+1,C4,TH4,T4,ISUM,3,C,THICK,TOP,ICODE,NMAX,
     1    DEPTH(N,M+1))
      CP(NST,MST)=0.
      THICKP(NST,MST)=0.
      TOPP(NST,MST)=0.
      TN=AMAX1(TH1,TH2,TH3,TH4)
      IF(TN .EQ. 0.) GO TO 500
      C1=C1*TH1/TN
      C2=C2*TH2/TN
      C3=C3*TH3/TN
      C4=C4*TH4/TN
      THICKP(NST,MST)=TN
      GO TO (401,402,403,404,405,406,407,408,409,410,411,412,413,414,415
     1), ISUM
  401 CP(NST,MST)=C1
      TOPP(NST,MST)=T1
      GO TO 500
  402 CP(NST,MST)=C2
      TOPP(NST,MST)=T2
      GO TO 500
  404 CP(NST,MST)=C3
      TOPP(NST,MST)=T3
      GO TO 500
  408 CP(NST,MST)=C4
      TOPP(NST,MST)=T4
      GO TO 500
  403 CP(NST,MST)=(C2-C1)*EN+C1
      TOPP(NST,MST)=(T2-T1)*EN+T1
      IF(T1 .LT. 0 .OR. T2 .LT. 0) TOP(NST,MST)=AMAX1(T1,T2)
      GO TO 500
  412 CP(NST,MST)=(C3-C4)*EN+C4
      TOPP(NST,MST)=(T3-T4)*EN+T4
      IF(T3 .LT. 0 .OR. T4 .LT. 0)TOPP(NST,MST)=AMAX1(T3,T4)
      GO TO 500
  406 CP(NST,MST)=(C3-C2)*EM+C2
      TOPP(NST,MST)=(T3-T2)*EM+T2
      IF(T2 .LT. 0 .OR. T3 .LT. 0) TOPP(NST,MST)=AMAX1(T2,T3)
      GO TO 500
  409 CP(NST,MST)=(C4-C1)*EM+C1
      TOPP(NST,MST)=(T4-T1)*EM+T1
      IF(T1 .LT. 0 .OR. T4 .LT. 0)TOPP(NST,MST)=AMAX1(T1,T4)
      GO TO 500
  405 IF (EN-EM-.25) 401,421,404
  421 CP(NST,MST)=.5*(C1+C3)
      TOPP(NST,MST)=.5*(T1+T3)
      IF(T1 .LT. 0 .OR. T3 .LT. 0)TOPP(NST,MST)=AMAX1(T1,T3)
      GO TO 500
  410 IF (EN-EM) 408,422,402
  422 CP(NST,MST)=.5*(C2+C4)
      TOPP(NST,MST)=.5*(T2+T4)
      IF(T2 .LT. 0 .OR. T4 .LT. 0)TOPP(NST,MST)=AMAX1(T2,T4)
      GO TO 500
  407 AD=EN1+EM
      IF (AD .EQ. 0.0) GO TO 402
      CP(NST,MST)=(EN1*(C2-C1)+EN*C1)+EM*((C3-C2)*EM+C2))/AD
      TOP1=(T2-T1)*EN+T1
      IF(T1 .LT. 0 .OR. T2 .LT. 0)TOP1=AMAX1(T1,T2)
      TOP2=(T3-T2)*EM+T2
      IF(T2 .LT. 0 .OR. T3 .LT. 0)TOP2=AMAX1(T2,T3)
      TOPP(NST,MST)=(EN1*TOP1+EM*TOP2)/AD
      IF(TOP1 .LT. 0 .OR. TOP2 .LT. 0)TOPP(NST,MST)=AMAX1(TOP1,TOP2)
      GO TO 500
  411 AD= EN+EM
      IF (AD .EQ. 0.0) GO TO 401
      CP(NST,MST)=(EN*((C2-C1)*EN+C1)+EM*((C4-C1)*EM+C1))/AD
      TOP1=(T2-T1)*EN+T1
      IF(T1 .LT. 0 .OR. T2 .LT. 0) TOP1=AMAX1(T1,T2)
      TOP2=(T4-T1)*EM+T1
      IF(T1 .LT. 0 .OR. T4 .LT. 0) TOP2=AMAX1(T1,T4)
      TOPP(NST,MST)=(EN*TOP1+EM*TOP2)/AD
      IF(TOP1 .LT. 0 .OR. TOP2 .LT. 0)TOPP(NST,MST)=AMAX1(TOP1,TOP2)
      GO TO 500
  413 AD=EM1+EN1
      IF (AD .EQ. 0.0) GO TO 408
      CP(NST,MST)=(EN1*(C3-C4)+EN*C4)+EM1*((C4-C1)*EM+C1))/AD
      TOP1=(T3-T4)*EN+T4
      IF(T3 .LT. 0 .OR. T4 .LT. 0)TOP1=AMAX1(T3,T4)
      TOP2=(T4-T1)*EM+T1
      IF(T1 .LT. 0 .OR. T4 .LT. 0)TOP2=AMAX1(T1,T4)
      TOPP(NST,MST)=(EN1*TOP1+EM1*TOP2)/AD
      IF(TOP1 .LT. 0 .OR. TOP2 .LT. 0)TOPP(NST,MST)=AMAX1(TOP1,TOP2)
      GO TO 500
  414 AD=EM1+EN1
      IF (AD .EQ. 0.0) GO TO 404
      CP(NST,MST)=(EN1*(C3-C4)+EN*C4)+EM1*((C3-C2)*EM+C2))/AD
      TOP1=(T3-T4)*EN+T4
      IF(T3 .LT. 0 .OR. T4 .LT. 0)TOP1=AMAX1(T3,T4)
      TOP2=(T3-T2)*EM+T2
      IF(T2 .LT. 0 .OR. T3 .LT. 0)TOP2=AMAX1(T2,T3)
      TOPP(NST,MST)=(EN1*TOP1+EM1*TOP2)/AD
      IF(TOP1 .LT. 0 .OR. TOP2 .LT. 0)TOPP(NST,MST)=AMAX1(TOP1,TOP2)
      GO TO 500
  415 CONC=(C2-C1)*EN+C1
CTWO=(C3-C4)*EN+C4
      CP(NST,MST)=(CTWO-CONE)*EM+CONE
      TOP1=(T2-T1)*EN+T1
      IF(T1 .LT. 0 .OR. T2 .LT. 0)TOP1=AMAX1(T1,T2)
      TOP2=(T3-T4)*EN+T4
      IF(T3 .LT. 0 .OR. T4 .LT. 0)TOP2=AMAX1(T3,T4)
      TOPP(NST,MST)=(TOP2-TOP1)*EM+TOP1
      IF(EM .LT. .0001) GO TO 500
      IF(TOP1 .LT. 0 .OR. TOP2 .LT. 0)TOPP(NST,MST)=AMAX1(TOP1,TOP2)
  500 IF(CP(NST,MST) .GT. 1.E-20) GO TO 510
      CP(NST,MST)=0.
      THICKP(NST,MST)=0.
      TOPP(NST,MST)=0.
  510 CONTINUE
      DO 2000 NUM=1,NIND
      NST=NLINE(NUM)
      MFST=MF(NUM)
      MLST=ML(NUM)
      DO 2000 NST=MFST,MLST
      DDTHK=TOPP(NST,MST)+THICKP(NST,MST)-DEPTH(NST,MST)
      IF(DDTHK .LE. 0.) GO TO 2000
      DTHK=THICKP(NST,MST)
      THICKP(NST,MST)=THICKP(NST,MST)-DDTHK
      CP(NST,MST)=CP(NST,MST)*DTHK/THICKP(NST,MST)
 2000 CONTINUE
C
C SHIFT ARRAYS AND ADD MASS LOST BY DIFFUSION LIMITING IN AVESPT
C TO POINT OF MAXIMUM CONCENTRATION
      CMAX=0.
      C1=0.
      C2=0.
      NCOR=1
      MCOR=1
      DO 550 NUM=1,NIND
      NST=NLINE(NUM)
      MFST=MF(NUM)
      MLST=ML(NUM)
      DO 550 NST=MFST,MLST
      CMAX=AMAX1(CMAX,CP(NST,MST))
      IF(CMAX .NE. CP(NST,MST)) GO TO 520
      NCOR=NST
      MCOR=MST
  520 CONTINUE
      C1=C1+C(NST,MST)*THICK(NST,MST)*AREA
      C(NST,MST) =CP(NST,MST)
      THICK(NST,MST)=THICKP(NST,MST)
      C2=C2+C(NST,MST)*THICK(NST,MST)*AREA
C DTOP ESTIMATES VARIATION OF CLOUD DEPTH DUE TO CONVECTION OVER
C VARIABLE DEPTHS
      CALL DINT(X(NST,MST),Z(NST,MST),DD1,DEPTH,NMAX)
      DTOP=(DD1-DEPTH(NST,MST))*TOP(NST,MST)/DD1
  550 TOP(NST,MST)=TOPP(NST,MST)-DTOP
      GONE=GONE+C1-C2
      IF(CMAX .LT. 1.E-20) GO TO 560
C ADD MASS LOST BY DIFFUSION LIMITING
      C(NCOR,MCOR)=C(NCOR,MCOR)+CM/(THICK(NCOR,MCOR)*AREA)
      GONE=GONE-CM
C
C SETTLE SOLIDS...
      IF(VFALL(K) .EQ. 0.) GO TO 690
      DIST= VFALL(K)*DTL
      DO 680 NUM=1,NIND
      NST=NLINE(NUM)
      MFST=MF(NUM)
      MLST=ML(NUM)
      DO 680 NST=MFST,MLST
      IF(C(NST,MST) .EQ. 0. .OR. ICODE(NST,MST) .GT. 1) GO TO 680
  611 XS=DEPTH(NST,MST)-TOP(NST,MST)-THICK(NST,MST)
      IF(XS .GE. DIST) GO TO 640
      IF(XS .GE. 0.) GO TO 612
      FALOUT=ABS(XS)*C(NST,MST)*AREA
      ACCUM(NST,MST)=ACCUM(NST,MST)+FALOUT
      THICK(NST,MST)=THICK(NST,MST)-ABS(XS)
      GO TO 611
  612 IF(THICK(NST,MST) .LT. (DIST-XS)) GO TO 630
      FALOUT =(DIST-XS)*AREA *C(NST,MST)
      ACCUM(NST,MST)=ACCUM(NST,MST)+FALOUT
      THICK(NST,MST)=THICK(NST,MST)-(DIST-XS)
      TOP(NST,MST)=TOP(NST,MST)+DIST
      GO TO 680
  630 CONTINUE
      ACCUM(NST,MST)=ACCUM(NST,MST)+THICK(NST,MST)*AREA *C(NST,MST)
      C(NST,MST)=0.
      TOP(NST,MST)=DEPTH(NST,MST)
      THICK(NST,MST)=0.
      GO TO 680
  640 CONTINUE
      TOP(NST,MST)=TOP(NST,MST)+DIST
  680 CONTINUE
  690 CONTINUE
C
C VERTICAL DIFFUSION...
  560 DO 600 NUM=1,NIND
      NST=NLINE(NUM)
      MFST=MF(NUM)
      MLST=ML(NUM)
      DO 600 NST=MFST,MLST
      IF(C(NST,MST) .LT. 1.0E-20) GO TO 600
      IF(THICK(NST,MST) .EQ. 0.) GO TO 600
      DTOP=TOP(NST,MST)
      OTOP=TOP(NST,MST)
      CALL VDIFF(NST,MST,DTOP,DCO,U,W,DEPTH,NMAX,MMAX)
      DINK=2.*SQRT(DCO*DTL)
      IF(DTOP+DINK .GT. 0.) TOP(NST,MST)=TOP(NST,MST)-DINK
      IF(TOP(NST,MST) .LT. 0.) TOP(NST,MST)=0.
C
      DBOT=OTOP+THICK(NST,MST)
      IF(DBOT .GT. DEPTH(NST,MST)) DBOT=DEPTH(NST,MST)
      CALL VDIFF(NST,MST,DBOT,DCO,U,W,DEPTH,NMAX,MMAX)
      DUNK=2.*SQRT(DCO*DTL)
      DBOT=DBOT+DUNK
      IF(DBOT .GT. DEPTH(NST,MST)) DBOT=DEPTH(NST,MST)
      THICK(NST,MST)=DBOT-TOP(NST,MST)
      C(NST,MST)=C(NST,MST)*OTHICK/THICK(NST,MST)
  600 CONTINUE
C
C CHECK FLUID DILUTION
      IF(K .NE. NSP1) GO TO 698
      CMAX=0.
      DO 696 NUM=1,NIND
      NST=NLINE(NUM)
      MFST=MF(NUM)
      MLST=ML(NUM)
      DO 696 NST=MFST,MLST
      IF(C(NST,MST) .LT. CMAX2) GO TO 696
      CMAX2=C(NST,MST)
      NSTSV=NST
      MSTSV=MST
  696 CONTINUE
      IF(CMAX2 .LE. 1.E-30) GO TO 698
      VOLUME=THICK(NSTSV,MSTSV)*DX**2
      VM=CMAX2*VOLUME
      CTRACE=(CINIT*VM+(VOLUME-VM)*CBACK)/VOLUME
      DR=CTRACE/CINIT
      IF(DR .GT. OC(ITD)) GO TO 698
      TD(ITD)=ETS
      ITD=ITD+1
  698 CONTINUE
C CHECK FOR MASS CONSERVATION
  699 TNORM=0.
      TACCUM=0.
      DO 704 NUM=1,NIND
      NST=NLINE(NUM)
      MFST=MF(NUM)
      MLST=ML(NUM)
      DO 704 NST=MFST,MLST
      TACCUM=TACCUM+ACCUM(NST,MST)
  704 TNORM=TNORM+C(NST,MST)*THICK(NST,MST)*AREA
      TRANS=0.
      IF(NTCLD .LT. 1) GO TO 710
      DO 708 I=1,NTCLD
  708 TRANS=TRANS+TMASS(I)
  710 TOTAL=TNORM+TRANS
      WRITE(6,712) PARAM(K),ETS,TOTAL,TNORM,TRANS,TACCUM
  712 FORMAT(///,5X,14HSUMMARY OF ,A10,21H DISTRIBUTIONS AFTER ,
     1 F10.2,6H SEC. //5X,34HTOTAL SUSPENDED MATERIAL (CUFT) = ,G14.5
     2/5X,46HSUSPENDED MATERIAL IN LONG TERM GRID (CUFT) = ,G14.5
     3/5X,48HSUSPENDED MATERIAL IN SMALL CLOUDS (CUFT) = ,G14.5
     4/5X,42HTOTAL MATERIAL SETTLED TO BOTTOM (CUFT) = ,G14.5
     5//5X,55HOUTPUT SUPPRESSED IN LOCATIONS WITH NO MATERIAL PRESENT )
      IF(ABS(GONE) .GT. 1.) WRITE(6,715) GONE
  715 FORMAT(10X,G12.4,22H CUFT OF MATERIAL (CUMULATIVE) LOST BY PASSIN
     1G THROUGH GRID BOUNDARIES   )
      IF(.NOT.PRT) RETURN
C
C PRINT RESULTS IF REQUESTED BY INPUT DATA
C
      IF(TNORM .LT. 1.0E-06) GO TO 725
  719 CONTINUE
      DO 720 N=1,NMAX
      DO 720 M=1,MMAX
  720 COUT(N,M)=C(N,M)
      CALL PRINTC(COUT,NMAX,MMAX ,PARAM(K),ETS,1,ICODE)
      DO 770 N=1,NMAX
      DO 770 M=1,MMAX
  770 COUT(N,M)=ACCUM(N,M)
      CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,5,ICODE)
      DO 780 N=1,NMAX
      DO 780 M=1,MMAX
  780 COUT(N,M)=THICK(N,M)
CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,4,ICODE)
  725 IF(K .EQ. NSP1) GO TO 760
      IF(TACCUM .LT. 1.0E-06) GO TO 760
      DO 730 N=1,NMAX
      DO 730 M=1,MMAX
  730 COUT(N,M)=ACCUM(N,M)
      CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,2,ICODE)
  760 CONTINUE
      IF(NTCLD .EQ. 0) RETURN
      WRITE(6,805) ETS
  805 FORMAT(18H1 SMALL CLOUDS AT ,F10.2,21H SECONDS ELAPSED TIME //
     1 2X,1HN,7X,1HX,13X,1HZ,11X,5HTMASS,9X,5HTSIDE,10X,4HTTHK,9X,4HTTOP
     2 )
      WRITE(6,815)(N,TX(N),TZ(N),TMASS(N),TSIDE(N),TTHK(N),TTOP(N),N=1,
     1 NTCLD)
  815 FORMAT(1X,I2,1X,6G14.4)
  890 RETURN
      END

      SUBROUTINE TRNSPT (ZZ,XX,YY,U,W,DEPTH,ICODE,NMAX,MMAX)
      DIMENSION ICODE(NMAX,1)
      COMMON/DXY/ DX,DIL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/POINT/ NST,MST
      N=ZZ*DXR+.5
      M=XX*DXR+.5
C DETERMINE VELOCITIES
      CALL VEL(XX,YY,ZZ,UA,WA,U,W,DEPTH,NMAX,MMAX)
      XX=XX+UA*DTL
      ZZ=ZZ+WA*DTL
      NE=ZZ*DXR+.5
      ME=XX*DXR+.5
C CHECK THAT MARKER PARTICLE DOES NOT COME FROM OUT OF BOUNDS
      IF(NE .GT. 0) GO TO 1
      NE=1
      ZZ=FLOAT(NE)*DX
    1 IF(NE .LE. NMAX) GO TO 2
      NE=NMAX
      ZZ=FLOAT(NE)*DX
    2 IF(ME .GT. 0) GO TO 3
      ME=1
      XX=FLOAT(ME)*DX
    3 IF(ME .LE. MMAX) GO TO 4
      ME=MMAX
      XX=FLOAT(ME)*DX
    4 CONTINUE
      IF(ICODE(NE,ME) .NE. 2) GO TO 50
      ZZ=FLOAT(N)*DX
      XX=FLOAT(M)*DX
   50 RETURN
      END
       SUBROUTINE AVESPT(N,M,CONC,THK,XTOP,ISUM,J,C,THICK,TOP,ICODE,NMAX,
     1 DCENT)
C ROUTINE TO AVERAGE CONCENTRATIONS IN A 5 POINT STAR PATTERN
C DIFFUSION LIMITED FROM THOSE POINTS WITH CONCENTRATIONS LESS
C THAN EPSLN. MASS LOST IN CONSEQUENCE IS ADDED IN ROUTINE
C MAD TO POINT OF MAXIMUM CONCENTRATION.
      DIMENSION C(NMAX,1),THICK(NMAX,1),TOP(NMAX,1),ICODE(NMAX,1)
      COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/COMP/ CM,CMAX
      COMMON/LICOF/ ALAMDA,DIF,AKYO
      EPSLN=2.0E-05*CMAX
      COCEAN=0.
      IF(ICODE(N,M)-2)1,2,3
    2 CONC=0.
      XTOP=0.
      THK=0.
      RETURN
    3 CONC=COCEAN
      XTOP=0.
      THK=0.
      GO TO 200
C
    1 C1=C(N,M)
      T1=TOP(N,M)
      TH1=THICK(N,M)
      IF(C1 .LT. EPSLN) GO TO 7
      CM=CM+C1*TH1*AREA
      C1=0.
      C(N,M)=0.
      TOP(N,M)=0.
      THICK(N,M)=0.
    7 CONTINUE
C
      C2=C(N-1,M)
      T2=TOP(N-1,M)
      TH2=DCENT-T2
      IF(TH2 .LT. 0.) TH2=0.
      IF(TH2 .GT. THICK(N-1,M)) TH2=THICK(N-1,M)
      IF(C2 .GT. EPSLN) GO TO 9
      CM=CM+C2*THICK(N-1,M)*AREA
      C2=0.
      C(N-1,M)=0.
      TOP(N-1,M)=0.
      THICK(N-1,M)=0.
    9 CONTINUE
      IF(ICODE(N-1,M) .NE. 2) GO TO 10
      C2=C1
      T2=T1
      TH2=TH1
   10 IF(ICODE(N-1,M) .NE. 3) GO TO 20
      C2=COCEAN
      T2=T1
      TH2=TH1
C
   20 C3=C(N+1,M)
      T3=TOP(N+1,M)
      TH3=DCENT-T3
      IF(TH3 .LT. 0.) TH3=0.
      IF(TH3 .GT. THICK(N+1,M)) TH3=THICK(N+1,M)
      IF(C3 .GT. EPSLN) GO TO 27
      TOPSUM=0.
      IF(TH1.EQ. 0.) GO TO 83
      INUM=INUM+1
      TOPSUM=TOPSUM+T1
   83 IF(TH2.EQ. 0.) GO TO 84
      INUM=INUM+1
      TOPSUM=TOPSUM+T2
   84 IF(TH3.EQ. 0.) GO TO 86
      INUM=INUM+1
      TOPSUM=TOPSUM+T3
   86 IF(TH4.EQ. 0.) GO TO 88
      INUM=INUM+1
      TOPSUM=TOPSUM+T4
   88 IF(TH5.EQ. 0.) GO TO 92
      INUM=INUM+1
      TOPSUM=TOPSUM+T5
   92 IF(INUM .EQ. 0) GO TO 190
      THK=AMAX1(TH1,TH2,TH3,TH4,TH5)
      XTOP=TOPSUM/FLOAT(INUM)
      IF(XTOP+THK .GT. DCENT) XTOP=DCENT-THK
C
C 5 POINT AVERAGING FOLLOWS
      CEF1=C1*TH1/THK
      CEF2=C2*TH2/THK
      CEF3=C3*TH3/THK
      CEF4=C4*TH4/THK
      CEF5=C5*TH5/THK
      CONC=CEF1-DIF*(4.*CEF1-(CEF2+CEF3+CEF4+CEF5))
      GO TO 200
  190 CONTINUE
      CONC=0.
      THK=0.
      XTOP=0.
  200 ISUM=ISUM+ 2**J
      RETURN
      END
      SUBROUTINE PRINTC(COUT,NMX,MMX,PARAM,ET,LBL,ICODE)
      DIMENSION COUT(NMX,MMX),ICODE(NMX,MMX)
      DIMENSION PR(128),NUM(10)
      DATA TBL,ND,1SEA,1PLUS,1DOT /1H ,1HL,1H0,1H+,1H./
      DATA NUM(1),NUM(2),NUM(3),NUM(4),NUM(5),NUM(6),NUM(7),NUM(8),
     1 NUM(9),NUM(10) /1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9/
C
C SCALE ARRAY FOR OPTIMUM PRINTOUT
      PMAX=0.
      DO 50 M=1,MMX
      DO 50 N=1,NMX
   50 PMAX=AMAX1(PMAX,COUT(N,M))
      P10=1.
      IP10=1
      IF(PMAX .GT. 0.) P10=ALOG10(PMAX)
      IP10=P10
      IF(IP10 .GE. 3) P10=P10-(IP10-2)
      IF(P10 .LT. 0) P10=10.**(IP10-1)
      DO 60 N=1,NMX
      DO 60 M=1,MMX
   60 COUT(N,M)=COUT(N,M)/P10
C
      GO TO (150,200,250,300,350,400,450),LBL
  150 WRITE(6,155) PARAM,ET
  155 FORMAT(20H1CONCENTRATIONS OF ,A10,29H (VOLUME RATIO) IN THE CLOUD
     1 ,F10.2,19H SECONDS AFTER DUMP )
      GO TO 500
  200 WRITE(6,215) PARAM,ET
  215 FORMAT(24H1BOTTOM ACCUMULATION OF ,A10,20H (CUFT/GRID SQUARE) ,
     1 ,F10.2,19H SECONDS AFTER DUMP )
      GO TO 500
  250 WRITE(6,255)PARAM,ET
  255 FORMAT(20H1POSITION OF TOP OF ,A10,28H CLOUD (FEET BELOW SURFACE)
     1, F10.2,19H SECONDS AFTER DUMP )
      GO TO 500
  300 WRITE(6,305) PARAM,ET
  305 FORMAT(21H1THICKNESS OF ,A10,14H CLOUD (FEET)
     1, F10.2,19H SECONDS AFTER DUMP )
      GO TO 500
  350 WRITE(6,355) PARAM,ET
  355 FORMAT(19H1THICKNESS (FT) OF ,A10,24H ACCUMULATED ON BOTTOM,
     1 ,F10.2,19H SECONDS AFTER DUMP )
      GO TO 500
  400 WRITE(6,405) ET
  405 FORMAT(59H1TOTAL ACCUMULATED SOLID VOLUME ON BOTTOM (CUFT/GRID SQR
     1),F10.2,19H SECONDS AFTER DUMP )
      GO TO 500
  450 WRITE(6,455)ET
  455 FORMAT(28H1TOTAL THICKNESS (FT) OF NEW MATERIAL ON BOTTOM, ,
     1 F10.2,19H SECONDS AFTER DUMP )
  500 CONTINUE
      WRITE(6,505) P10
  505 FORMAT(33H ...MULTIPLY DISPLAYED VALUES BY ,G11.4,5X,6H(LEGEND...
     1 = +,LT. .01  = .,LT. .0001 = 0 ,LT. .000001))
C
C SET UP PAGE DIVISIONS FOR PRINTING OF ARRAY
      NCP=MMX/32+1
      IF((NCP-1)*32 .EQ. MMAX) NCP=NCP-1
      IN2=0
      DO 1000 IP=1,NCP
      IN1=IN2+1
      IN2=IN2+32
      IF(MMX .LT. IN2)IN2=MMX
      WRITE(6,605) (N,N=IN1,IN2)
  605 FORMAT(2X,5HM NE,12,31I4)
C
      DO 100 M=1,MMX
      DO 10 I=1,128
   10 PR(I)=IB
      DO 1 N=IN1,IN2
      J=0
      L=COUT(N,M)+.5
      IF(ICODE(N,M) .EQ. 2) GO TO 2
      IF(ICODE(N,M) .EQ. 6) GO TO 7
      IF (L.GE. 1000) GO TO 6
      IF (L .GE. 100) GO TO 3
      IF (L .GE. 10) GO TO 4
      IF(COUT(N,M) .GE. 1.) GO TO 30
      IF(COUT(N,M) .LT. 1.0E-06) GO TO 25
      IF(COUT(N,M) .LT. .0001) GO TO 18
      IF(COUT(N,M) .LT. .01) GO TO 8
      IF(COUT(N,M) .LT. .1) GO TO 20
      IPR(J-2)=IDOT
      N1=10.*COUT(N,M)
      IPR(J-1)=NUM(N1+1)
      N2=(10.*COUT(N,M)-10.*FLOAT(N1)
      IPR(J)=NUM(N2+1)
      GO TO 1
   30 L1=COUT(N,M)
      LL=10.*COUT(N,M)-FLOAT(L1))
      IPR(J)=NUM(L1+1)
      IPR(J+1)=IDOT
      IPR(J+2)=NUM(LL+1)
      GO TO 1
   25 IPR(J)=NUM(1+1)
      GO TO 1
   20 IPR(J-2)=IDOT
      IPR(J-1)=NUM(1)
      N2=100.*COUT(N,M)
      IPR(J)=NUM(N2+1)
      GO TO 1
    2 IPR(J-1)=LND
      IPR(J-2)=LND
      IPR(J-3)=LND
      GO TO 1
    7 IPR(J-1)=SEA
      IPR(J-2)=ISEA
      IPR(J-3)=ISEA
      GO TO 1
    6 N1=L/1000
      IPR(J-3)=NUM(N1+1)
      N1=L-1000*N1
      N2=N1/100
      IPR(J-2)=NUM(N2+1)
      N2=N1-100*N2
      N3=N2/10
      IPR(J-1)=NUM(N3+1)
      N3=N2-10*N3
      IPR(J)=NUM(N1+1)
      GO TO 1
    3 N1=L/100
      IPR(J-2)=NUM(N1+1)
      N1=L-100*N1
      N2=N1/10
      IPR(J-1)=NUM(N2+1)
      N2=N1-10*N2
      IPR(J)=NUM(N1+1)
      GO TO 1
    4 N1=L/10
      IPR(J-1)=NUM(N1+1)
      N1=L-10*N1
      IPR(J)=NUM(N1+1)
      GO TO 1
    8 IPR(J)=IPLUS
      GO TO 1
   18 IPR(J)=IDOT
    1 CONTINUE
      WRITE(6,205) M,IPR
  205 FORMAT(/ 1X ,I3,1X,128A1)
  100 CONTINUE
      IF(IP .LT. NCP) WRITE(6,705)
  705 FORMAT(1H1///)
 1000 CONTINUE
      RETURN
      END

      SUBROUTINE DINT(XD,ZD,DEP,DEPTH,NMAX)
C ROUTINE TO INTERPOLATE ON DEPTH GRID FOR DEPTH AT AN ARBITRARY
C POINT IN THE ESTUARY
C GIVEN POSITION (XD,ZD) IN ESTUARY COORDINATES, RETURNS DEPTH (DEP)
      DIMENSION DEPTH(NMAX,1)
      COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
      ZN=ZD*DXR
      XM=XD*DXR
      N=ZN+.0001
      M=XM+.0001
      EN=ZN-FLOAT(N)
      EM=XM-FLOAT(M)
      IF(EN .LT. .0001) EN=0.
      IF(EM .LT. .0001) EM=0.
      D1=DEPTH(N,M)+EN*(DEPTH(N+1,M)-DEPTH(N,M))
      D2=DEPTH(N,M+1)+EN*(DEPTH(N+1,M+1)-DEPTH(N,M+1))
      DEP=D1+EM*(D2-D1)
      RETURN
      END

      SUBROUTINE VDIFCO(N,M,YY,AKY,U,W,DEPTH,NMAX,MMAX)
C ROUTINE TO COMPUTE VERTICAL DIFFUSION COEFFICIENTS
      DIMENSION DEPTH(NMAX,MMAX)
      COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
      COMMON/GP/G,PI
      COMMON/LICOF/ ALAMDA,DIF,AKYO
      COMMON/AMB/ NROA,IY,Y(10),ROA(10),H
C DETERMINE DENSITY AND VELOCITY GRADIENTS
      IY=0
   10 IY=IY+1
      IF(YY .GE. Y(IY) .AND. YY .LE. Y(IY+1)) GO TO 20
      GO TO 10
   20 RHO=ROA(IY)+(ROA(IY+1)-ROA(IY))*(YY-Y(IY))/(Y(IY+1)-Y(IY))
      DRHDZ=(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
      Y1=YY-1.
      Y2=YY+1.
      XX=FLOAT(M)*DX
      ZZ=FLOAT(N)*DX
      CALL VEL(XX,Y1,ZZ,UA1,WA1,U,W,DEPTH,NMAX,MMAX)
      CALL VEL(XX,Y2,ZZ,UA2,WA2,U,W,DEPTH,NMAX,MMAX)
      VELGRA=SQRT((UA2-UA1)**2 + (WA2-WA1)**2)/2.
      IF(VELGRA .NE. 0.) GO TO 40
C USE PRITCHARD DEFINITION OF RICHARDSON NO.
      CALL VEL(XX,0.,ZZ,UA1,WA1,U,W,DEPTH,NMAX,MMAX)
      VELGRA=1.7*SQRT(UA1**2 + WA1**2)/DEPTH(N,M)
C DETERMINE RICHARDSON NO.
      IF(VELGRA .NE. 0.) GO TO 40
      AKY=0.
      RETURN
   40 RI=G*DRHDZ/(RHO*VELGRA**2)
C CHECK BOUNDS
      IF(RI .LT. 0.) RI=0.
      IF(RI .GT. 3.999999) RI=3.999999
C COMPUTE DIFFUSION COEFFICIENT
      AKY=AKYO*(1.-.25*RI)
      RETURN
      END