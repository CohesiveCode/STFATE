!! taking the code out of here to modularize it.

      SUBROUTINE DRAW(X1,X2,X3,X4,Y1,Y2,Y3,Y4,N,IG,NCURV)
C
C     GRAPHING ROUTINE
C     X1,X2,X3,X4 -- INDEPENDENT VARIABLES
C     Y1,Y2,Y3,Y4 -- DEPENDENT VARIABLES
C     N -- NUMBER OF POINTS AVAILABLE FOR PLOTTING
C
         DIMENSION X1(1),X2(1),X3(1),X4(1),Y1(1),Y2(1),Y3(1),Y4(1),X(800),
     *    Y(800),YY(800),SYM(4),SIM(20),P(2400)
         DATA SIM /1HY,1HB,1HC,1HS,1HA,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,
     *    1HT,1HX,1HZ,1H,1H,1H,1H0/
         IF(NCURV.LT.1) RETURN
C     NX IS NUMBER OF LINES FOR INDEPENDENT VARIABLE
C     NY IS NUMBER OF COLUMNS FOR DEPENDENT VARIABLE
         NX=50
         NY=101
         NSCALE=60
         IN=N/NSCALE
         IF(IN.LT.1) IN=1
C     PLACE VARIABLES IN PLOT ARRAYS
         J=0
         DO 1 I=1,N,IN
            J=J+1
            X(J)=X1(I)
    1    Y(J)=Y1(I)
         J=J+1
         X(J)=X1(N)
         Y(J)=Y1(N)
         NN=J
         IF(NCURV.EQ.1) GOTO 5
         DO 2 I=1,N,IN
            J=J+1
            X(J)=X2(I)
    2    Y(J)=Y2(I)
         J=J+1
         X(J)=X2(N)
         Y(J)=Y2(N)
         IF(NCURV.EQ.2) GOTO 5
         DO 3 I=1,N,IN
            J=J+1
            X(J)=X3(I)
    3    Y(J)=Y3(I)
         J=J+1
         X(J)=X3(N)
         Y(J)=Y3(N)
         IF(NCURV.EQ.3) GOTO 5
         DO 4 I=1,N,IN
            J=J+1
            X(J)=X4(I)
    4    Y(J)=Y4(I)
         J=J+1
         X(J)=X4(N)
         Y(J)=Y4(N)
    5    CONTINUE
         GOTO (10,20,50,60,2000,1000,3000),IG
   10    SYM(1)=SIM(1)
         SYM(2)=SIM(2)
         SYM(3)=SIM(15)
         SYM(4)=SIM(16)
         CALL NORM(Y,YY,NN,1.0,0.,AMXY,AMNY)
         NN1=NN+1
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.,AMXB,AMNB)
         NN1=NN1+NN
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.,AMXC,AMNC)
         NN1=NN1+NN
C     NON-ANSI
C
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.,AMXS,AMNS)
         WRITE(6,15) X(1),X(NN),AMXY,AMXB,AMXC,AMXS,AMNY,AMNB,AMNC,AMNS
   15    FORMAT(1H1/////10X,59HPLOT OF CLOUD PATH AND RADIUS AS SEEN FROM
     1    POINT OF RELEASE///10X,45HINDEPENDENT VARIABLE IS TIME (SEC)
     2    OVER RANGE,2X,2G13.5///10X,61HDEPENDENT VARIABLES, ALL
     3    NORMALIZED FOR PLOTTING ON UNIT AXIS//10X,6HSYMBOL,13X,1HY,
     4    17X,1HB,15X,1HX,15X,1HZ//10X,11HMAX PLOTTED,3X,G12.5,
     5    3(6X,G12.5)/10X,11HMIN PLOTTED,3X,G12.5,3(6X,G12.5)/10X,
     6    7HREMARKS,8X,5HDEPTH,13X,6HRADIUS,12X,12HHOR DIST(CX),6X,
     7    12HHOR DIST(CZ))
         CALL SPLOT(YY,X,P,J,NY,NX,NN,4,SYM)
         RETURN
   20    SYM(1)=SIM(5)
         SYM(2)=SIM(2)
         SYM(3)=SIM(3)
         SYM(4)=SIM(1)
         CALL NORM(Y,YY,NN,1.,0.,AMXA,AMNA)
C
C
C
C
C
         NN1=NN+1
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.,AMXB,AMNB)
         NN1=NN1+NN
         CALL NORM(Y(NN1),YY(NN1),NN,1.,0.,AMXC,AMNC)
         NN1=NN1+NN
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.,AMXY,AMNY)
         WRITE(6,25) X(1),X(NN),AMXA,AMXB,AMXC,AMXY,AMNA,AMNB,AMNC,AMNY
   25    FORMAT(1H1/////10X,40HPLOT OF COLLAPSING CLOUD CHARACTERISTICS//
     1    /10X,39HINDEPENDENT VARIABLE IS TIME OVER RANGE,2X,2G13.5///
     2    10X,60HDEPENDENT VARIABLE, ALL NORMALIZED FOR PLOTTING ON
     3    UNIT AXIS//10X,6HSYMBOL,13X,1HA,17X,1HB,13X,1HC,13X,1HY/10X,
     4    11HMAX PLOTTED,3X,G12.5,4X,3(2X,G12.5)/10X,11HMIN PLOTTED,3X,
     5    G12.5,4X,3(2X,G12.5)/10X,7HREMARKS,8X,9HVERT SIZE,9X,
     6    8HHOR SIZE,4X,12HHOR DIST(CX),4X,12HHOR DIST(CZ))
         CALL SPLOT(YY,X,P,J,NY,NX,NN,4,SYM)
         RETURN
   50    DO 51 I=1,4
   51    SYM(I)=SIM(I+5)
   52    CALL RANGE(Y,J,AMXS,AMNS,JMX,JMN)
         WRITE(6,500) X(1),X(NN),AMNS,AMXS
         CALL SPLOT(Y,X,P,J,NY,NX,NN,NCURV,SYM)
  500    FORMAT(1H1,/////,2X,31HGRAPH OF WASTE CONCENTRATIONS .//,2X,
     1    12HRANGE OF X,20X,2G20.8,2X,32HRANGE OF CONCENTRATIONS
     2    PLOTTED,2G20.8,8(/))
         RETURN
   60    DO 61 I=1,4
   61    SYM(I)=SIM(I+9)
         GOTO 52
 1000    DO 1001 I=2,4
 1001    SYM(I)=SIM(I+4)
         SYM(1)=SIM(3)
         GOTO 52
 3000    CONTINUE
         DO 3001 I=1,4
 3001    SYM(I)=SIM(I+16)
         GOTO 52
 2000    SYM(1)=SIM(15)
         CALL RANGE(Y,J,AMX,AMN,JMX,JMN)
         IF(AMN.EQ.0..AND.AMX.EQ.0.) RETURN
         WRITE(6,2001) X(1),X(NN),AMN,AMX
 2001    FORMAT(1H1,11(/),20X,15HGRAPH OF X VS Z,//,2X,10HRANGE OF X,
     1    2G20.8,/,2X,10HRANGE OF Z,2G20.8)
         CALL SPLOT(Y,X,P,J,NY,NX,NN,NCURV,SYM)
         RETURN
      END
      SUBROUTINE SPLOT(B,A,P,N,L,M,NREP,NSYM,SYM)
C
C     PRINTER PLOT ROUTINE
C     NSYM -- NUMBER OF GRAPHS PLOTTED ON THIS FRAME
C     M -- NUMBER OF SPACES DOWN THE PAGE
C     L -- NUMBER OF SPACES ACROSS THE PAGE
C
         DIMENSION A(1),B(1),SYM(1),P(1),Q(20),H(10)
         DATA Q/20*5H     /
C     NON-ANSI
         DATA BL5/5H     /
         DATA EYE/1HI/
C
C     SET GRAPH FIELD TO BLANKS
         LOLD=L
         L5=L/5
         L=5*L5
         LO=L5-1
C
C
C
         ML=(M+1)*(L5+1)
         DO 10 J=1,ML
   10    P(J)=BL5
C     DETERMINE MAX AND MIN OF INDEPENDENT VARIABLE A AND DEPENDENT
C     VARIABLE B AND THE INCREMENT OF EACH CORRESPONDING TO ONE PRINTER
C     PRINT POSITION IN EACH DIRECTION
         CALL RANGE(A,N,AMX,AMN,JMX,JMN)
         CALL RANGE(B,N,BMX,BMN,JMX,JMN)
         DIV=5.
         IF(AMX.GT.100.) DIV=10.
         IAMX=AMX/DIV
         AMX=DIV*FLOAT(IAMX)+DIV
         DA=(AMX-AMN)/FLOAT(M)
         DB=(BMX-BMN)/FLOAT(L)
         WRITE(6,2000) AMX,AMN,DA
 2000    FORMAT(/////1X,26HMAX, MIN, INC, OF IND. VAR.,1X,6G20.8)
         WRITE(6,2001) BMX,BMN,DB
 2001    FORMAT(//,1X,26HMAX, MIN, INC, OF DEP. VAR.,/1X,6G20.8)
         WRITE(6,2002)
 2002    FORMAT(1H1)
C     DETERMINE AND PRINT TOP (DEPENDENT AXIS) LABEL AND LINE
   50    JZA=0
         ZRO=0.
         TESTA=AMX*AMN
         TESTB=BMX*BMN
         IF(TESTA) 50,60,60
         JZA=-AMN/DA
   60    IF(TESTB) 70,90,90
   70    IB=-BMN/DB
         LIA=0
         DO 80 J=1,10
            LIA=LIA+L5
   80    CALL PFIX(P,IB,LIA,EYE)
   90    CONTINUE
         L10=LOLD/20+1
         DB20=20.*DB
         DO 100 J=1,L10
  100    H(J)=BMN+FLOAT(J-1)*DB20
         HMAX=ALOG10(ABS(H(L10)))+.0001
         IF(HMAX.LT.0.) GOTO 106
         IF(HMAX.GE.1.) GOTO 109
         WRITE(6,105) (H(J),J=1,L10)
  105    FORMAT(14X,F3.1,5(17X,F3.1))
         GOTO 114
  106    WRITE(6,108) (H(J),J=1,L10)
  108    FORMAT(14X,F6.4,5(14X,F6.4))
         GOTO 114
  109    WRITE(6,110) (H(J),J=1,L10)
  110    FORMAT(12X,F6.2,5(14X,F6.2))
  114    WRITE(6,115) (Q(J),J=1,20)
  115    FORMAT(15X,1HI,20A5)
C
C
C     ENCODE PLOT POINTS
         DO 200 J=1,N
            IA=(A(J)-AMN)/DA
            LIA=L5*IA
            IB=(B(J)-BMN)/DB
            JZZ=(J-1)/NREP
            ISYM = MOD(JZZ,NSYM)+1
            CALL PFIX(P,IB,LIA,SYM(ISYM))
  200    CONTINUE
C     PRINT GRAPH
         DO 300 J=1,M
            JQ=(J/10)*10
            JLO=J*L5-L5+1
            JHI=JLO+LO
            WRITE(6,255) (P(K),K=JLO,JHI)
  255       FORMAT(15X,1HI,20A5)
            IF(J.EQ.JZA) WRITE(6,265) ZRO,(Q(K),K=1,20)
  265       FORMAT(1H+,G13.5,2X,20A5)
            IF(JQ.NE.J) GOTO 300
            DAJ=AMN+DA*FLOAT(J)
            WRITE(6,265) DAJ,(Q(K),K=1,20)
  300    CONTINUE
         RETURN
      END
      SUBROUTINE RANGE(A,N,AMX,AMN,JMX,JMN)
C
C     GIVEN ARRAY A WITH N ELEMENTS, FIND MAX AND MIN VALUES AND
C     CORRESPONDING INDICES
C
         DIMENSION A(1)
         AMX=A(1)
         AMN=A(1)
         JMX=1
         JMN=1
         DO 100 J=2,N
            IF(A(J).LT.AMX) GOTO 50
            JMX=J
            AMX=A(J)
   50       CONTINUE
            IF(A(J).GT.AMN) GOTO 100
            JMN=J
            AMN=A(J)
  100    CONTINUE
         RETURN
      END
      SUBROUTINE NORM(A,B,N,C1,C2,AMX,AMN)
C
C     NORMALIZES ARRAY A WITH ARBITRARY MAX VALUE AMX, AND ARBITRARY
C     MIN VALUE AMN, INTO ARRAY B WITH MAX VALUE C1 AND MIN VALUE C2
C
         DIMENSION A(1),B(1)
         CALL RANGE(A,N,AMX,AMN,JMX,JMN)
         CC=C1-C2
         X=(AMX-AMN)/CC
         IF(X.EQ.0.) X=1.
         Y=(C1*AMN-C2*AMX)/CC
         Z=1./X
         DO 100 J=1,N
            B(J)=(A(J)-Y)*Z
  100    CONTINUE
         RETURN
      END
      SUBROUTINE PFIX(P,IB,LIA,SYM)
C
C     ROUTINE TO PLACE ALPHAMERIC CHARACTER INTO PROPER PRINT
C     POSITION IN ARRAY P
C
         DIMENSION BUF(5),P(1)
C     NON-ANSI
         IB5=IB/5
         LIB=LIA+IB5+1
         DECODE(5,1000,P(LIB)) BUF
 1000    FORMAT(5A1)
         IRES=IB-5*IB5+1
         BUF(IRES)=SYM
         ENCODE(5,1000,P(LIB)) BUF
C     NON-ANSI
         RETURN
      END
      SUBROUTINE BOOKS(K,SS,TSIDE,TTHK,TTOP,TMASS,TX,TZ,NS,DEPTH,ACCUM,
     1 U,W,NMAX,MMAX,NSC)
C
C     DUMP MODEL
C     BOOKKEEPING ROUTINE FOR MASS TRANSFER FROM SHORT TO LONG TERM
C     TAKEN ONE COMPONENT (INDEX K) AT A TIME.
C
         DIMENSION SS(600,NS),ACCUM(NMAX,1),DEPTH(NMAX,1),TSIDE(1),TTHK(1)
     1    ,TTOP(1),TMASS(1),TX(1),TZ(1),U(1),W(1)
         COMMON/NC/ NTCLD
         COMMON/CLOUD/ T(600),CX(600),CY(600),CZ(600),CU(600),CV(600),
     1    CW(600),DENDIF(600),BC(600),AA(600),FC(600),VF
         COMMON/PIECES/ PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),
     1    BVOID
         COMMON/GUIDE1/ TDUMP,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/COL/ AO,IBED,FBED
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         COMMON/SWITCH/ ITF
         COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
         NSP1=NS+1
         NTCLD=0
         C1=2.*3.14159/3.
         NEWT=1
C     INCT IS INCREMENT OF STEPS TO CHECK SHORT TERM
         INCT=ISTEP/10
         IF(K.EQ.NSP1) GOTO 300
  100    CONTINUE
         LAST=NEWT
  102    NEWT=NEWT+INCT
C     AT LAST STEP IN SHORT TERM SET TO CREATE FINAL CLOUD OF THIS
C     MATERIAL
         IF(NEWT.GT.ISTEP) NEWT=ISTEP
C     ...HERE TO CHECK IF SOLIDS HAVE LEFT CLOUD IN LATEST TIME INTERVAL
C     L IS INDICATOR OF CHANGE OF COMPUTATION PHASE DURING SHORT TERM
C     VLOSS IS SOLID VOLUME LOSS FROM CLOUD
         IF(T(NEWT).LE.T(ITF)) GOTO 120
         IF(T(LAST).GT.T(ITF)) GOTO 140
C     BETWEEN CONVECTIVE DESCENT AND DYNAMIC COLLAPSE
         VV = C1*SS(LAST,K)*AA(LAST)**3
         VLOSS = VV - .25*C1*SS(NEWT,K)*AA(NEWT)*BC(NEWT)**2
         L=2
         GOTO 200
C     IN CONVECTIVE DESCENT PHASE
  120    CONTINUE
         VV = C1*SS(LAST,K)*AA(LAST)**3
         VLOSS = VV - C1*SS(NEWT,K)*AA(NEWT)**3
         L=1
         GOTO 200
C     IN DYNAMIC COLLAPSE PHASE
  140    CONTINUE
         VV = .25*C1*SS(LAST,K)*AA(LAST)*BC(LAST)**2
         VLOSS = VV - .25*C1*SS(NEWT,K)*AA(NEWT)*BC(NEWT)**2
         L=3
  200    CONTINUE
C     AT FINAL SHORT TERM TIME STEP, VOLUME OF NEW CLOUD IS ALL
C     REMAINING MATERIAL IN CLOUD
         IF(NEWT.EQ.ISTEP) VLOSS=VV
C
C
C     IF VOLUME LOSS FOR THIS TIME INTERVAL IS ZERO, INCREMENT TO NEXT
C     TIME STEP
         IF(NEWT.EQ.ISTEP) GOTO 210
         IF(VLOSS.EQ.0.) GOTO 100
         IF((VLOSS/VV).LT.1.0E-03) GOTO 102
C
C
C     ...HERE TO CREATE SOLIDS CLOUDS...
  210    NTCLD=NTCLD+1
         IF(NTCLD.LE.NSC) GOTO 219
         WRITE(6,205)
  205    FORMAT(//10X,38HSMALL CLOUDS ARRAYS FILLED... CALL EXIT /10X,
     1    39HUSER SHOULD INCREASE INPUT VARIABLE NSC)
         CALL EXIT
  219    CONTINUE
         TMASS(NTCLD)=VLOSS
         TTHK(NTCLD)=VFALL(K)*(T(NEWT)-T(LAST))
         IF(NEWT.EQ.ISTEP) TTHK(NTCLD)=TTHK(NTCLD)+AA(ISTEP)
C
C
C     HORIZONTAL POSITION MEASUREMENT NOW TRANSLATED SO THAT IT IS W/R
C     TO ESTUARY COORDINATES
         TX(NTCLD)=CX(NEWT)+XBARGE
C
C
         TZ(NTCLD)=CZ(NEWT)+ZBARGE
         CALL DINT(TX(NTCLD),TZ(NTCLD),D3,DEPTH,NMAX)
         GOTO (220,240,240),L
  220    TTOP(NTCLD)=CY(NEWT)+3.*AA(NEWT)/8.
         IF(NEWT.EQ.ISTEP) TTOP(NTCLD)=TTOP(NTCLD)-3.*AA(NEWT)/4.
         GOTO 250
  240    TTOP(NTCLD)=CY(NEWT)+AA(NEWT)*.5
         IF(IBED.NE.0.AND.NEWT.GT.IBED.AND.NEWT.LT.ILEAVE)
     1    TTOP(NTCLD)=D3
         IF(NEWT.EQ.ISTEP) TTOP(NTCLD)=TTOP(NTCLD)-AA(NEWT)
  250    CONTINUE
         IF((TTOP(NTCLD)+TTHK(NTCLD)).GT.D3) TTOP(NTCLD)=D3-TTHK(NTCLD)
C     TSIDE IS SIDE OF SQUARE WITH AREA EQUAL TO AREA OF CIRCULAR
C     SHORT TERM CLOUD
         TSIDE(NTCLD)=.886226*BC(ISTEP)
  253    WRITE(6,255) NTCLD,T(NEWT),TX(NTCLD),TZ(NTCLD),TSIDE(NTCLD),
     1    TTOP(NTCLD),TTHK(NTCLD),TMASS(NTCLD),NEWT,LAST
  255    FORMAT(//1X,27HNEW CLOUD CREATED, NTCLD =,I5/3X,6HT(SEC),8X,2HTX
     1   ,10X,2HTZ,9X,5HTSIDE,8X,3HTOP,8X,4HTTHK,8X,5HTMASS,8X,4HNEWT,
     2    7X,4HLAST/1X,7G12.4,4X,I4,6X,I4)
         GOTO 400
C
C
C     ...HERE TO CREATE FINAL FLUID CLOUD...
  300    NTCLD=NTCLD+1
         NEWT=ISTEP
         TX(NTCLD)=CX(ISTEP)+XBARGE
         TZ(NTCLD)=CZ(ISTEP)+ZBARGE
         CALL DINT(TX(NTCLD),TZ(NTCLD),D3,DEPTH,NMAX)
         TSIDE(NTCLD)=.886226*BC(ISTEP)
         IF(ISTEP.GT.ITF) GOTO 340
         TTOP(NTCLD)=CY(ISTEP)-3.*AA(ISTEP)/8.
         TMASS(NTCLD)=FC(ISTEP)*C1*AA(ISTEP)**3
         GOTO 350
  340    TTOP(NTCLD)=CY(ISTEP)-AA(ISTEP)*.5
         IF(IBED.NE.0.AND.NEWT.GT.IBED.AND.NEWT.LT.ILEAVE)
     1    TTOP(NTCLD)=D3-AA(ISTEP)
         TMASS(NTCLD)=FC(ISTEP)*2.*C1*AA(ISTEP)*BC(ISTEP)**2/8.
  350    CONTINUE
C
         TTHK(NTCLD)=TMASS(NTCLD)/(FC(ISTEP)*TSIDE(NTCLD)**2)
         IF((TTOP(NTCLD)+TTHK(NTCLD)).GT.D3) TTOP(NTCLD)=D3-TTHK(NTCLD)
         GOTO 253
C
C     ...UPDATE LATEST CLOUD TO 1/2 HOUR AFTER DUMP
  400    DELT=DTL-T(NEWT)
C
C
C
         DTOP=0.
         CALL DINT(TX(NTCLD),TZ(NTCLD),D1,DEPTH,NMAX)
         IF(TTOP(NTCLD).EQ.D1) GOTO 410
C     ...CONVECT...
C     DETERMINE HORIZONTAL VELOCITIES
         YY=TTOP(NTCLD)+.5*TTHK(NTCLD)
         CALL VEL(TX(NTCLD),YY,TZ(NTCLD),UA,WA,U,W,DEPTH,NMAX,MMAX)
         TX(NTCLD)=TX(NTCLD)+UA*DELT
         TZ(NTCLD)=TZ(NTCLD)+WA*DELT
C     CHECK FOR SMALL CLOUD PASSING OUT OF GRID BOUNDARY
         NCHK=TZ(NTCLD)*DXR
         MCHK=TX(NTCLD)*DXR
         IF(NCHK.LT.1.OR.NCHK.GT.NMAX.OR.MCHK.LT.1.OR.MCHK.GT.MMAX)
     1    WRITE(6,405)
  405    FORMAT(/5X,101H---WARNING---A SMALL CLOUD HAS PASSED OUT OF GRID
     1    BOUNDARY IN SUBROUTINE BOOKS... ERRORS WILL OCCUR---)
         CALL DINT(TX(NTCLD),TZ(NTCLD),D2,DEPTH,NMAX)
C
C
C     DTOP ESTIMATES VARIATION OF CLOUD DEPTH DUE TO CONVECTION OVER
C     VARYING DEPTHS
         DTOP=(D1-D2)*TTOP(NTCLD)/D1.
C
C     ...DIFFUSE HORIZONTALLY...
         TSIDE(NTCLD)=TSIDE(NTCLD)*(1.+(1.333333*ALAMDA/TSIDE(NTCLD)**
     1    .666666)*DELT)**1.5
C     ...DIFFUSE VERTICALLY...
C
         OTOP=TTOP(NTCLD)
         MX=TX(NTCLD)*DXR+.5
         NZ=TZ(NTCLD)*DXR+.5
C
         CALL VDIFCO(NZ,MX,OTOP,DCO,U,W,DEPTH,NMAX,MMAX)
         DINK=2.*SQRT(DCO*DELT)
         TTOP(NTCLD)=TTOP(NTCLD)-DINK
         IF(TTOP(NTCLD).LT.0.) TTOP(NTCLD)=0.
         OBOT=OTOP+TTHK(NTCLD)
         IF(OBOT.GT.D2) OBOT=D2
         CALL VDIFCO(NZ,MX,OBOT,DCO,U,W,DEPTH,NMAX,MMAX)
         DONK=2.*SQRT(DCO*DELT)
         TTHK(NTCLD)=TTHK(NTCLD)+DINK+DONK
         IF((OTOP+TTHK(NTCLD)).GT.D2) TTHK(NTCLD)=D2-TTOP(NTCLD)
C     ...SETTLE...
  410    IF(K.EQ.NSP1) GOTO 440
         DIST=VFALL(K)*DELT
         MX=TX(NTCLD)*DXR+.5
         NZ=TZ(NTCLD)*DXR+.5
  411    XS=D2-TTOP(NTCLD)-TTHK(NTCLD)-DTOP
         IF(XS.GE.DIST) GOTO 430
         IF(XS.GE.0.) GOTO 412
         IF(TTHK(NTCLD).GT.0.) THEN
            FALOUT=ABS(XS)/TTHK(NTCLD)*TMASS(NTCLD)
            ACCUM(NZ,MX)=ACCUM(NZ,MX)+FALOUT
            TMASS(NTCLD)=TMASS(NTCLD)-FALOUT
            TTHK(NTCLD)=TTHK(NTCLD)-ABS(XS)
            GOTO 411
         ELSE
            GOTO 420
         ENDIF
  412    IF(TTHK(NTCLD).LT.(DIST-XS)) GOTO 420
         FALOUT=(DIST-XS)/TTHK(NTCLD)*TMASS(NTCLD)
         ACCUM(NZ,MX)=ACCUM(NZ,MX)+FALOUT
         TMASS(NTCLD)=TMASS(NTCLD)-FALOUT
         TTHK(NTCLD)=TTHK(NTCLD)-(DIST-XS)
         TTOP(NTCLD)=TTOP(NTCLD)+DIST-DTOP
         GOTO 440
C
  420    ACCUM(NZ,MX)=ACCUM(NZ,MX)+TMASS(NTCLD)
C     ERASE CLOUD
         TMASS(NTCLD)=0.
         TX(NTCLD)=0.
         TZ(NTCLD)=0.
         TSIDE(NTCLD)=0.
         TTHK(NTCLD)=0.
         TTOP(NTCLD)=0.
C
         NTCLD=NTCLD-1
         GOTO 440
  430    TTOP(NTCLD)=TTOP(NTCLD)+DIST-DTOP
  440    CONTINUE
         IF(K.NE.NSP1) GOTO 700
         IF(TMASS(NTCLD).LT.1.0E-10) GOTO 700
         VOLUME=TTHK(NTCLD)*TSIDE(NTCLD)**2
         CTRACE=(CINIT*VF+(VOLUME-VF)*CBACK)/VOLUME
         DR=CTRACE/CINIT
         IF(DR.GT.DC(ITD)) GOTO 700
         TD(ITD)=DTL
         ITD=ITD+1
  700    IF(NEWT.EQ.ISTEP) RETURN
         GOTO 100
      END
      SUBROUTINE ACAD(K,C,THICK,TOP,ACCUM,DEPTH,U,W,TSIDE,TTHK,TTOP,
     1 TMASS,TX,TZ,NMAX,MMAX,ETS)
C
C     DUMP MODEL
C     ROUTINE TO ANALYTICALLY CONVECT AND DIFFUSE DREDGED MATERIAL
C     CLOUDS THAT ARE TOO SMALL TO BE DEFINED BY THE NORMAL GRID.
C     IF A CLOUD GROWS BIGGER THAN STEPSIZE DX, THEN IT IS INSERTED INTO
C     NORMAL GRID.
C
         DIMENSION C(NMAX,1),THICK(NMAX,1),TOP(NMAX,1),ACCUM(NMAX,1),
     1    DEPTH(NMAX,1),TSIDE(1),TTHK(1),TTOP(1),TMASS(1),TX(1),TZ(1),
     2    U(1),W(1)
         COMMON/NC/ NTCLD
         COMMON/DIMEN/ NS,NSP1,NVL,NSC
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/PIECES/ PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),
     1    BVOID
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         COMMON/LOST/ GONE
         COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
         COMMON/CLOUD/ T(600),CX(600),CY(600),CZ(600),CU(600),CV(600),
     1    CW(600),DENDIF(600),BC(600),AA(600),FC(600),VF
C     CHECK CLOUD FOR INJECTION TO LONG TERM GRID
         N=1
         NTEMP=NTCLD
   60    CONTINUE
C
C     CHECK CLOUD SIZE...IF LARGE ENOUGH, INJECT INTO NORMAL GRID
         IERASE=0
         IF(TMASS(N).EQ.0.) GOTO 70
C     CHECK FOR SMALL CLOUDS ON OR OUTSIDE OF GRID BOUNDARIES
         MXC=TX(N)*DXR+.0001
         NZC=TZ(N)*DXR+.0001
         IF(MXC.GT.MMAX.OR.MXC.LT.1.OR.NZC.GT.NMAX.OR.NZC.LT.1) GOTO 250
         IF(TSIDE(N).GE.2.*DX) GOTO 200
         IF(TSIDE(N).LT.DX) GOTO 100
C     ....HERE TO INJECT A SMALL CLOUD INTO THE NORMAL GRID
C     ASSIGN CLOUD MATERIAL TO FOUR NEAREST GRID POINTS
         MX=TX(N)/DX+.0001
         NZ=TZ(N)/DX+.0001
         PROPX=(TX(N)-FLOAT(MX)*DX)/DX
         IF(PROPX.LT..0001) PROPX=0.
         XMASS2=PROPX*TMASS(N)
         XMASS1=TMASS(N)-XMASS2
         PROPZ=(TZ(N)-FLOAT(NZ)*DX)/DX
         IF(PROPZ.LT..0001) PROPZ=0.
         TMASS2=PROPZ*XMASS1
         TMASS1=XMASS1-TMASS2
         TMASS4=PROPZ*XMASS2
         TMASS3=XMASS2-TMASS4
         VOL=AREA*TTHK(N)
         IF(TMASS1.EQ.0.) GOTO 61
         IF(C(NZ,MX).NE.0.) GOTO 610
C     HERE TO ADD MATL TO EMPTY GRID
         C(NZ,MX)=TMASS1/VOL
         THICK(NZ,MX)=TTHK(N)
         TOP(NZ,MX)=TTOP(N)
         GOTO 61
  610    CONTINUE
C     HERE ADD MATL TO NON-EMPTY GRID
         OM=C(NZ,MX)*THICK(NZ,MX)*AREA
C
C
C
C
C
         B1=TOP(NZ,MX)+THICK(NZ,MX)
         B2=TTOP(N)+TTHK(N)
         BOT=AMAX1(B1,B2)
         TOP(NZ,MX)=AMIN1(TOP(NZ,MX),TTOP(N))
         THICK(NZ,MX)=BOT-TOP(NZ,MX)
         C(NZ,MX)=(OM+TMASS1)/(THICK(NZ,MX)*AREA)
   61    IF(TMASS2.EQ.0.) GOTO 62
         IF(C(NZ+1,MX).NE.0.) GOTO 620
C     HERE TO ADD MATL TO EMPTY GRID
         C(NZ+1,MX)=TMASS2/VOL
         THICK(NZ+1,MX)=TTHK(N)
         TOP(NZ+1,MX)=TTOP(N)
         GOTO 62
  620    CONTINUE
C     HERE TO ADD MATL TO NON-EMPTY GRID
         OM=C(NZ+1,MX)*THICK(NZ+1,MX)*AREA
         B1=TOP(NZ+1,MX)+THICK(NZ+1,MX)
         B2=TTOP(N)+TTHK(N)
         BOT=AMAX1(B1,B2)
         TOP(NZ+1,MX)=AMIN1(TOP(NZ+1,MX),TTOP(N))
         THICK(NZ+1,MX)=BOT-TOP(NZ+1,MX)
         C(NZ+1,MX)=(OM+TMASS2)/(THICK(NZ+1,MX)*AREA)
   62    IF(TMASS3.EQ.0.) GOTO 63
         IF(C(NZ,MX+1).NE.0.) GOTO 630
C     HERE ADD MATL TO EMPTY GRID
         C(NZ,MX+1)=TMASS3/VOL
         THICK(NZ,MX+1)=TTHK(N)
         TOP(NZ,MX+1)=TTOP(N)
         GOTO 63
  630    CONTINUE
C     HERE ADD MATL TO NON-EMPTY GRID
         OM=C(NZ,MX+1)*THICK(NZ,MX+1)*AREA
         B1=TOP(NZ,MX+1)+THICK(NZ,MX+1)
         B2=TTOP(N)+TTHK(N)
         BOT=AMAX1(B1,B2)
         TOP(NZ,MX+1)=AMIN1(TOP(NZ,MX+1),TTOP(N))
         THICK(NZ,MX+1)=BOT-TOP(NZ,MX+1)
         C(NZ,MX+1)=(OM+TMASS3)/(THICK(NZ,MX+1)*AREA)
   63    IF(TMASS4.EQ.0.) GOTO 64
         IF(C(NZ+1,MX+1).NE.0.) GOTO 640
C
C     HERE ADD MATL TO EMPTY GRID
         C(NZ+1,MX+1)=TMASS4/VOL
C
         THICK(NZ+1,MX+1)=TTHK(N)
         TOP(NZ+1,MX+1)=TTOP(N)
         GOTO 64
  640    CONTINUE
C     HERE ADD MATL TO NON-EMPTY GRID
         OM=C(NZ+1,MX+1)*THICK(NZ+1,MX+1)*AREA
         B1=TOP(NZ+1,MX+1)+THICK(NZ+1,MX+1)
         B2=TTOP(N)+TTHK(N)
         BOT=AMAX1(B1,B2)
         TOP(NZ+1,MX+1)=AMIN1(TOP(NZ+1,MX+1),TTOP(N))
         THICK(NZ+1,MX+1)=BOT-TOP(NZ+1,MX+1)
         C(NZ+1,MX+1)=(OM+TMASS4)/(THICK(NZ+1,MX+1)*AREA)
   64    CONTINUE
         GOTO 70
C
C     ...HERE TO INJECT CLOUDS WITH SIDE GREATER THAN 2 DX
  200    CONTINUE
C
C     DETERMINE COORDINATES OF CORNERS
         HS=.5*TSIDE(N)
         XU=TX(N)-HS
         XD=TX(N)+HS
         ZL=TZ(N)-HS
         ZR=TZ(N)+HS
C     DETERMINE GRID SQUARES TO GET CLOUD MASS
         NL=ZL/DX+1.
         MU=XU/DX+1.
         NR=ZR/DX
         MD=XD/DX
         IF(NL.LT.1) NL=1
         IF(NR.GT.NMAX) NR=NMAX
         IF(MU.LT.1) MU=1
         IF(MD.GT.MMAX) MD=MMAX
         SIDE2=TSIDE(N)**2
         TMC=0.
         DO 220 MM=MU,MD
            DO 220 NN=NL,NR
               X1=FLOAT(MM)*DX-DXH
               IF(MM.EQ.MU) X1=XU
               X2=FLOAT(MM)*DX+DXH
               IF(MM.EQ.MD) X2=XD
               Z1=FLOAT(NN)*DX-DXH
               IF(NN.EQ.NL) Z1=ZL
               Z2=FLOAT(NN)*DX+DXH
               IF(NN.EQ.NR) Z2=ZR
               IF(C(NN,MM).NE.0.) GOTO 210
C
C     ADD MATL TO EMPTY GRID
               TOP(NN,MM)=TTOP(N)
C
C
C
C
C
               THICK(NN,MM)=TTHK(N)
               C(NN,MM)=(X2-X1)*(Z2-Z1)*TMASS(N)/(SIDE2*THICK(NN,MM)*AREA)
               GOTO 215
  210          CONTINUE
C     HERE ADD MATL TO NON-EMPTY GRID
               OM=C(NN,MM)*THICK(NN,MM)*AREA
               B1=TOP(NN,MM)+THICK(NN,MM)
               B2=TTOP(N)+TTHK(N)
               BOT=AMAX1(B1,B2)
               TOP(NN,MM)=AMIN1(TOP(NN,MM),TTOP(N))
               THICK(NN,MM)=BOT-TOP(NN,MM)
               C(NN,MM)=(OM+(X2-X1)*(Z2-Z1)/SIDE2*TMASS(N))/(THICK(NN,MM)*AREA)
  215          TMC=TMC+C(NN,MM)*THICK(NN,MM)*AREA
  220    CONTINUE
C     HERE COLLECT MASS SPILLED OUT OF BOUNDARY FROM LARGE CLOUD
         GONE=GONE+TMASS(N)-TMC
         GOTO 70
  250    CONTINUE
C     HERE COLLECT MASS PASSING THROUGH GRID BOUNDARY
         GONE=GONE+TMASS(N)
C     ERASE TRANSITION CLOUD AND MOVE CLOUDS BEHIND IT UP ONE SLOT
   70    NTEMP=NTEMP-1
         IERASE=1
         DO 80 I=N,NTEMP
            TSIDE(I)=TSIDE(I+1)
            TTHK(I)=TTHK(I+1)
            TTOP(I)=TTOP(I+1)
            TMASS(I)=TMASS(I+1)
            TX(I)=TX(I+1)
            TZ(I)=TZ(I+1)
   80    CONTINUE
C
C
C
C
         TSIDE(NTEMP+1)=0.
         TTHK(NTEMP+1)=0.
         TTOP(NTEMP+1)=0.
         TMASS(NTEMP+1)=0.
         TX(NTEMP+1)=0.
         TZ(NTEMP+1)=0.
  100    CONTINUE
         IF(IERASE.EQ.0) N=N+1
         IF(N.LE.NTEMP) GOTO 60
         NTCLD=NTEMP
         IF(NTCLD.EQ.0) RETURN
C     LOOP ONCE FOR EACH CLOUD
         DO 530 N=1,NTCLD
C     CONVECT....
C     DETERMINE HORIZONTAL VELOCITIES
            YY=TTOP(N)+.5*TTHK(N)
            CALL VEL(TX(N),YY,TZ(N),UA,WA,U,W,DEPTH,NMAX,MMAX)
            CALL DINT(TX(N),TZ(N),D1,DEPTH,NMAX)
            TX(N)=TX(N)+UA*DTL
            TZ(N)=TZ(N)+WA*DTL
C     CHECK FOR SMALL CLOUD PASSING OUT OF GRID BOUNDARY
            NCHK=TZ(N)*DXR
            MCHK=TX(N)*DXR
            IF(NCHK.LT.1.OR.NCHK.GT.NMAX.OR.MCHK.LT.1.OR.MCHK.GT.MMAX)
     1       WRITE(6,405)
  405       FORMAT(/5X,101H--WARNING-A SMALL CLOUD HAS PASSED OUT OF GRID
     1       BOUNDARY IN SUBROUTINE BOOKS...ERRORS WILL OCCUR---)
            CALL DINT(TX(N),TZ(N),D2,DEPTH,NMAX)
C
C     DTOP ESTIMATES VARIATION OF CLOUD DEPTH DUE TO CONVECTION OVER
C     VARIABLE DEPTHS
            DTOP=(D1-D2)*TTOP(N)/D1
C
C     ...DIFFUSE HORIZONTALLY...
            TSIDE(N)=TSIDE(N)*(1.+(1.333333*ALAMDA/TSIDE(N)**.666666)*DTL)
     1       **1.5
C
C     SETTLE....
            IF(K.EQ.NSP1) GOTO 500
            DIST=VFALL(K)*DTL
            MX=TX(N)*DXR+.5
            NZ=TZ(N)*DXR+.5
  411       XS=DEPTH(NZ,MX)-TTOP(N)-TTHK(N)-DTOP
            IF(XS.GE.DIST) GOTO 40
            IF(XS.GE.0.) GOTO 412
            FALOUT=ABS(XS)/TTHK(N)*TMASS(N)
            ACCUM(NZ,MX)=ACCUM(NZ,MX)+FALOUT
            TMASS(N)=TMASS(N)-FALOUT
            TTHK(N)=TTHK(N)-ABS(XS)
            GOTO 411
  412       IF(TTHK(N).LT.(DIST-XS)) GOTO 30
            FALOUT=(DIST-XS)/TTHK(N)*TMASS(N)
            ACCUM(NZ,MX)=ACCUM(NZ,MX)+FALOUT
            TMASS(N)=TMASS(N)-FALOUT
            TTHK(N)=TTHK(N)-(DIST-XS)
            TTOP(N)=TTOP(N)+DIST-DTOP
            GOTO 500
   30       ACCUM(NZ,MX)=ACCUM(NZ,MX)+TMASS(N)
            TMASS(N)=0.
            GOTO 500
   40       TTOP(N)=TTOP(N)+DIST-DTOP
  500       CONTINUE
C
C     ...DIFFUSE VERTICALLY...
            OTOP=TTOP(N)
            MX=TX(N)*DXR+.5
            NZ=TZ(N)*DXR+.5
            CALL VDIFCO(NZ,MX,OTOP,DCO,U,W,DEPTH,NMAX,MMAX)
            DINK=2.*SQRT(DCO*DTL)
            TTOP(N)=TTOP(N)-DINK
            IF(TTOP(N).LT.0.) TTOP(N)=0.
            OBOT=OTOP+TTHK(N)
            IF(OBOT.GT.DEPTH(NZ,MX)) OBOT=DEPTH(NZ,MX)
            CALL VDIFCO(NZ,MX,OBOT,DCO,U,W,DEPTH,NMAX,MMAX)
            DONK=2.*SQRT(DCO*DTL)
            TTHK(N)=TTHK(N)+DINK+DONK
            IF((OTOP+TTHK(N)).GT.DEPTH(NZ,MX)) TTHK(N)=DEPTH(NZ,MX)-TTOP(N)
  530    CONTINUE
         NTEMP=NTCLD
         L=1
  560    IF(TMASS(L).NE.0.) GOTO 570
         NTEMP=NTEMP-1
         DO 520 I=L,NTEMP
            TMASS(I)=TMASS(I+1)
            TSIDE(I)=TSIDE(I+1)
            TTHK(I)=TTHK(I+1)
            TTOP(I)=TTOP(I+1)
            TX(I)=TX(I+1)
  520    TZ(I)=TZ(I+1)
  570    IF(L.GE.NTEMP) GOTO 580
         L=L+1
         GOTO 560
  580    NTCLD=NTEMP
         IF(K.NE.NSP1) RETURN
C     CHECK FLUID DILUTION
C
         CMAX=0.
         NSAVE=1
         DO 700 N=1,NTCLD
            IF(TTHK(N).EQ.0.) GOTO 700
            CF=TMASS(N)/(TTHK(N)*TSIDE(N)**2)
            CMAX=AMAX1(CMAX,CF)
            IF(ABS(CMAX-CF).LT..0001) NSAVE=N
  700    CONTINUE
         IF(CMAX.LT.1.E-30) GOTO 460
         VOLUME=TTHK(NSAVE)*TSIDE(NSAVE)**2
         CTRACE=(CINIT*VF+(VOLUME-VF)*CBACK)/VOLUME
         DR=CTRACE/CINIT
         IF(DR.GT.DC(ITD)) GOTO 460
         TD(ITD)=ETS
         ITD=ITD+1
  460    CONTINUE
         RETURN
      END
      SUBROUTINE MAD(K,ETS,X,Z,U,W,C,THICK,TOP,DEPTH,ACCUM,CP,THICKP,
     1 TOPP,COUT,ICODE,TSIDE,TTHK,TTOP,TMASS,TX,TZ,NMAX,MMAX)
C
C     ROUTINE TO COMPUTE MOVEMENT AND DIFFUSION
C
         COMMON/DIMEN/ NS,NSP1,NVL,NSC
         DIMENSION X(NMAX,1),Z(NMAX,1),C(NMAX,1),THICK(NMAX,1),TOP(NMAX,1)
     1    ,DEPTH(NMAX,1),ACCUM(NMAX,1),CP(NMAX,1),THICKP(NMAX,1),U(1),W(1)
     2    ,TOPP(NMAX,1),COUT(NMAX,1),ICODE(NMAX,1),TMASS(1),TSIDE(1),TX(1)
     3    ,TZ(1),TTOP(1),TTHK(1)
         COMMON/GUIDE2/ NIND,NLINE(150),MF(150),ML(150)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/PIECES/ PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),
     1    BVOID
         COMMON/POINT/ MST,NST
         COMMON/CHECK/ TOTAL
         COMMON/CUR/ CM,CMAX
         COMMON/NC/ NTCLD
         COMMON/LOST/ GONE
         COMMON/P/ PRT
         COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
         LOGICAL PRT
         Q=1.0E-06
C
C
C     MOVE AND DIFFUSE SMALL CLOUDS, IF ANY
         IF(ABS(ETS-DTL).LT.0.0001) GOTO 10
         IF(NTCLD.GT.0)
     1    CALL ACAD(K,C,THICK,TOP,ACCUM,DEPTH,U,W,TSIDE,
     2    TTHK,TTOP,TMASS,TX,TZ,NMAX,MMAX,ETS)
   10    CHKM=0.
         CMAX=0.
         DO 20 M=1,MMAX
            DO 20 N=1,NMAX
               CMAX=AMAX1(CMAX,C(N,M))
   20    CHKM=CHKM+C(N,M)*THICK(N,M)*AREA
         IF(CHKM.LT.1.0E-06) GOTO 699
C
C
C     BEGIN COMPUTATIONS OVER LARGE GRID
C
         DO 100 N=1,NMAX
            DO 100 M=1,MMAX
               Z(N,M)=FLOAT(N)*DX
  100    X(N,M)=FLOAT(M)*DX
C
C
C     MOVE LOCATIONS OF POINTS WHICH TERMINATE IN THE BAY
         DO 200 NUM=1,NIND
            NST=NLINE(NUM)
            MFST=MF(NUM)
            MLST=ML(NUM)
C
C
            DO 200 MST=MFST,MLST
               IF(ICODE(NST,MST).GT.1) GOTO 200
C     NST AND MST ARE INDEX OF GRID POINT X(NST,MST) AND Z(NST,MST)
C     ARE COORDINATES OF LOCATION OF THIS PARTICLE AT START OF
C     CONVECTIVE STEP
               YY=TOP(NST,MST)+.5*THICK(NST,MST)
               CALL TRNSPT(Z(NST,MST),X(NST,MST),YY,U,W,DEPTH,ICODE,NMAX,MMAX)
  200    CONTINUE
C
C     CLEAR ARRAYS
         DO 320 M=1,MMAX
            DO 320 N=1,NMAX
               CP(N,M)=0.
               THICKP(N,M)=0.
  320    TOPP(N,M)=0.
C
C
C     COMPUTE NEW CONCENTRATIONS FOR ALL POINTS IN BAY
         CM=0.
         DO 510 NUM=1,NIND
            NST=NLINE(NUM)
            MFST=MF(NUM)
            MLST=ML(NUM)
            DO 510 MST=MFST,MLST
               ZN=Z(NST,MST)*DXR
               XM=X(NST,MST)*DXR
               N=ZN+.0001
               M=XM+.0001
               EN=ZN-FLOAT(N)
               EM=XM-FLOAT(M)
               IF(EN.LT.0.0001) EN=0.
               IF(EM.LT.0.0001) EM=0.
               EN1=1.-EN
               EM1=1.-EM
               ISUM=0
               CALL AVESPT(N,M,C1,TH1,T1,ISUM,0,C,THICK,TOP,ICODE,NMAX,
     1          DEPTH(N,M))
               CALL AVESPT(N+1,M,C2,TH2,T2,ISUM,1,C,THICK,TOP,ICODE,NMAX,
     1          DEPTH(N+1,M))
               CALL AVESPT(N+1,M+1,C3,TH3,T3,ISUM,2,C,THICK,TOP,ICODE,NMAX,
     1          DEPTH(N+1,M+1))
               CALL AVESPT(N,M+1,C4,TH4,T4,ISUM,3,C,THICK,TOP,ICODE,NMAX,
     1          DEPTH(N,M+1))
               CP(NST,MST)=0.
               THICKP(NST,MST)=0.
               TOPP(NST,MST)=0.
               TN = AMAX1(TH1,TH2,TH3,TH4)
               IF(TN.EQ.0.) GOTO 500
               C1=C1*TH1/TN
               C2=C2*TH2/TN
               C3=C3*TH3/TN
               C4=C4*TH4/TN
               THICKP(NST,MST)=TN
               GOTO (401,402,403,404,405,406,407,408,409,410,411,412,413,414,
     1          415),ISUM
  401          CP(NST,MST)=C1
               TOPP(NST,MST)=T1
               GOTO 500
  402          CP(NST,MST)=C2
               TOPP(NST,MST)=T2
               GOTO 500
  404          CP(NST,MST)=C3
               TOPP(NST,MST)=T3
               GOTO 500
  408          CP(NST,MST)=C4
               TOPP(NST,MST)=T4
               GOTO 500
  403          CP(NST,MST)=(C2-C1)*EN+C1
               TOPP(NST,MST)=(T2-T1)*EN+T1
               IF(T1.LT.0..OR.T2.LT.0.) TOPP(NST,MST)=AMAX1(T1,T2)
               GOTO 500
  412          CP(NST,MST)=(C3-C4)*EN+C4
               TOPP(NST,MST)=(T3-T4)*EN+T4
               IF(T3.LT.0..OR.T4.LT.0.) TOPP(NST,MST)=AMAX1(T3,T4)
               GOTO 500
  406          CP(NST,MST)=(C3-C2)*EM+C2
               TOPP(NST,MST)=(T3-T2)*EM+T2
               IF(T2.LT.0..OR.T3.LT.0.) TOPP(NST,MST)=AMAX1(T2,T3)
               GOTO 500
  409          CP(NST,MST)=(C4-C1)*EM+C1
               TOPP(NST,MST)=(T4-T1)*EM+T1
               IF(T1.LT.0..OR.T4.LT.0.) TOPP(NST,MST)=AMAX1(T1,T4)
               GOTO 500
  405          IF(EN*EM-.25) 401,421,404
  421          CP(NST,MST)=.5*(C1+C3)
               TOPP(NST,MST)=.5*(T1+T3)
               IF(T1.LT.0..OR.T3.LT.0.) TOPP(NST,MST)=AMAX1(T1,T3)
               GOTO 500
  410          IF(EN-EM) 408,422,402
  422          CP(NST,MST)=.5*(C2+C4)
               TOPP(NST,MST)=.5*(T2+T4)
               IF(T2.LT.0..OR.T4.LT.0.) TOPP(NST,MST)=AMAX1(T2,T4)
               GOTO 500
  407          AD=EN1+EM
               IF(AD.EQ.0.0) GOTO 402
               CP(NST,MST)=(EN1*((C2-C1)*EN+C1)+EM*((C3-C2)*EM+C2))/AD
               TOP1=(T2-T1)*EN+T1
               IF(T1.LT.0..OR.T2.LT.0.) TOP1=AMAX1(T1,T2)
               TOP2=(T3-T2)*EM+T2
               IF(T2.LT.0..OR.T3.LT.0.) TOP2=AMAX1(T2,T3)
               TOPP(NST,MST)=(EN1*TOP1+EM*TOP2)/AD
               IF(TOP1.LT.0..OR.TOP2.LT.0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
               GOTO 500
  411          AD=EN+EM
               IF(AD.EQ.0.0) GOTO 401
               CP(NST,MST)=(EN*((C2-C1)*EN+C1)+EM*((C4-C1)*EM+C1))/AD
               TOP1=(T2-T1)*EN+T1
               IF(T1.LT.0..OR.T2.LT.0.) TOP1=AMAX1(T1,T2)
               TOP2=(T4-T1)*EM+T1
               IF(T1.LT.0..OR.T4.LT.0.) TOP2=AMAX1(T1,T4)
               TOPP(NST,MST)=(EN*TOP1+EM*TOP2)/AD
               IF(TOP1.LT.0..OR.TOP2.LT.0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
               GOTO 500
  413          AD=EN+EM1
               IF(AD.EQ.0.0) GOTO 408
               CP(NST,MST)=(EN*((C3-C4)*EN+C4)+EM1*((C4-C1)*EM+C1))/AD
               TOP1=(T3-T4)*EN+T4
               IF(T3.LT.0..OR.T4.LT.0.) TOP1=AMAX1(T3,T4)
               TOP2=(T4-T1)*EM+T1
               IF(T1.LT.0..OR.T4.LT.0.) TOP2=AMAX1(T1,T4)
               TOPP(NST,MST)=(EN*TOP1+EM1*TOP2)/AD
               IF(TOP1.LT.0..OR.TOP2.LT.0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
               GOTO 500
  414          AD=EN1+EM1
               IF(AD.EQ.0.0) GOTO 404
               CP(NST,MST)=(EN1*((C3-C4)*EN+C4)+EM1*((C3-C2)*EM+C2))/AD
               TOP1=(T3-T4)*EN+T4
               IF(T3.LT.0..OR.T4.LT.0.) TOP1=AMAX1(T3,T4)
               TOP2=(T3-T2)*EM+T2
               IF(T2.LT.0..OR.T3.LT.0.) TOP2=AMAX1(T2,T3)
               TOPP(NST,MST)=(EN1*TOP1+EM1*TOP2)/AD
               IF(TOP1.LT.0..OR.TOP2.LT.0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
               GOTO 500
  415          CONE=(C2-C1)*EN+C1
               CTWO=(C3-C4)*EN+C4
               CP(NST,MST)=(CTWO-CONE)*EM+CONE
               TOP1=(T2-T1)*EN+T1
               IF(T1.LT.0..OR.T2.LT.0.) TOP1=AMAX1(T1,T2)
               TOP2=(T3-T4)*EN+T4
               IF(T3.LT.0..OR.T4.LT.0.) TOP2=AMAX1(T3,T4)
               TOPP(NST,MST)=(TOP2-TOP1)*EM+TOP1
               IF(EM.LT.0.0001) GOTO 500
               IF(TOP1.LT.0..OR.TOP2.LT.0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
  500          IF(CP(NST,MST).GT.1.E-20) GOTO 510
               CP(NST,MST)=0.
               THICKP(NST,MST)=0.
               TOPP(NST,MST)=0.
  510    CONTINUE
         DO 2000 NUM=1,NIND
            NST=NLINE(NUM)
C
C
C
C
            MFST=MF(NUM)
            MLST=ML(NUM)
            DO 2000 MST=MFST,MLST
               DDTHK=TOPP(NST,MST)+THICKP(NST,MST)-DEPTH(NST,MST)
               IF(DDTHK.LE.0.) GOTO 2000
               OTHK=THICKP(NST,MST)
               THICKP(NST,MST)=THICKP(NST,MST)-DDTHK
               CP(NST,MST)=CP(NST,MST)*OTHK/THICKP(NST,MST)
 2000    CONTINUE
C     SHIFT ARRAYS AND ADD MASS LOST BY DIFFUSION LIMITING IN AVESPT
C     TO POINT OF MAXIMUM CONCENTRATION
         CMAX=0.
         C1=0.
         C2=0.
         NCOR=1
         MCOR=1
         DO 550 NUM=1,NIND
            NST=NLINE(NUM)
            MFST=MF(NUM)
            MLST=ML(NUM)
            DO 550 MST=MFST,MLST
               CMAX=AMAX1(CMAX,CP(NST,MST))
               IF(CMAX.NE.CP(NST,MST)) GOTO 520
               NCOR=NST
               MCOR=MST
  520          CONTINUE
               C1=C1+C(NST,MST)*THICK(NST,MST)*AREA
               C(NST,MST)=CP(NST,MST)
               THICK(NST,MST)=THICKP(NST,MST)
               C2=C2+C(NST,MST)*THICK(NST,MST)*AREA
C     DTOP ESTIMATES VARIATION OF CLOUD DEPTH DUE TO CONVECTION OVER
C     VARIABLE DEPTHS
               CALL DINT(X(NST,MST),Z(NST,MST),DD1,DEPTH,NMAX)
               DTOP=(DD1-DEPTH(NST,MST))*TOPP(NST,MST)/DD1
  550    TOP(NST,MST)=TOPP(NST,MST)-DTOP
         GONE=GONE+C1-C2
         IF(CMAX.LT.1.E-20) GOTO 560
C
C     ADD MASS LOST BY DIFFUSION LIMITING
         C(NCOR,MCOR)=C(NCOR,MCOR)+CM/(THICK(NCOR,MCOR)*AREA)
C
C
         GONE=GONE-CM
  560    CONTINUE
C     SETTLE SOLIDS....
         IF(VFALL(K).EQ.0.) GOTO 690
C
C
         DIST=VFALL(K)*DTL
         DO 680 NUM=1,NIND
            NST=NLINE(NUM)
            MFST=MF(NUM)
            MLST=ML(NUM)
            DO 680 MST=MFST,MLST
               IF(C(NST,MST).EQ.0..OR.ICODE(NST,MST).GT.1) GOTO 680
  611          XS=DEPTH(NST,MST)-TOP(NST,MST)-THICK(NST,MST)
               IF(XS.GE.DIST) GOTO 640
               IF(XS.GE.0.) GOTO 612
               FALOUT=ABS(XS)*C(NST,MST)*AREA
               ACCUM(NST,MST)=ACCUM(NST,MST)+FALOUT
               THICK(NST,MST)=THICK(NST,MST)-ABS(XS)
               GOTO 611
  612          IF(THICK(NST,MST).LT.(DIST-XS)) GOTO 630
               FALOUT=(DIST-XS)*C(NST,MST)*AREA
               ACCUM(NST,MST)=ACCUM(NST,MST)+FALOUT
               THICK(NST,MST)=THICK(NST,MST)-(DIST-XS)
               TOP(NST,MST)=TOP(NST,MST)+DIST
               GOTO 680
  630          CONTINUE
               ACCUM(NST,MST)=ACCUM(NST,MST)+THICK(NST,MST)*AREA*C(NST,MST)
               C(NST,MST)=0.
               TOP(NST,MST)=DEPTH(NST,MST)
               THICK(NST,MST)=0.
               GOTO 680
  640          CONTINUE
               TOP(NST,MST)=TOP(NST,MST)+DIST
  680    CONTINUE
  690    CONTINUE
C     VERTICAL DIFFUSION...
         DO 600 NUM=1,NIND
            NST=NLINE(NUM)
            MFST=MF(NUM)
            MLST=ML(NUM)
            DO 600 MST=MFST,MLST
               IF(C(NST,MST).LT.1.0E-20) GOTO 600
               IF(THICK(NST,MST).EQ.0.) GOTO 600
               OTHICK=THICK(NST,MST)
               OTOP=TOP(NST,MST)
               CALL VDIFCO(NST,MST,OTOP,DCO,U,W,DEPTH,NMAX,MMAX)
               DINK=2.*SQRT(DCO*DTL)
               IF(TOP(NST,MST).GT.0.) TOP(NST,MST)=TOP(NST,MST)-DINK
               IF(TOP(NST,MST).LT.0.) TOP(NST,MST)=0.
C
               OBOT=OTOP+THICK(NST,MST)
               IF(OBOT.GT.DEPTH(NST,MST)) OBOT=DEPTH(NST,MST)
               CALL VDIFCO(NST,MST,OBOT,DCO,U,W,DEPTH,NMAX,MMAX)
               DONK=2.*SQRT(DCO*DTL)
               OBOT=OBOT+DONK
               IF(OBOT.GT.DEPTH(NST,MST)) OBOT=DEPTH(NST,MST)
               THICK(NST,MST)=OBOT-TOP(NST,MST)
               C(NST,MST)=C(NST,MST)*OTHICK/THICK(NST,MST)
  600    CONTINUE
C     CHECK FLUID DILUTION
         IF(K.NE.NSP1) GOTO 698
         CMAX2=0.
         DO 696 NUM=1,NIND
C
C
C
            NST=NLINE(NUM)
            MFST=MF(NUM)
            MLST=ML(NUM)
            DO 696 MST=MFST,MLST
               IF(C(NST,MST).LT.CMAX2) GOTO 696
               CMAX2=C(NST,MST)
               NSTSV=NST
               MSTSV=MST
  696    CONTINUE
         IF(CMAX2.LT.1.E-30) GOTO 698
         VOLUME=THICK(NSTSV,MSTSV)*DX**2
         VN=CMAX2*VOLUME
         CTRACE=(CINIT*VN+(VOLUME-VN)*CBACK)/VOLUME
         DR=CTRACE/CINIT
         IF(DR.GT.DC(ITD)) GOTO 698
         TD(ITD)=ETS
         ITD=ITD+1
  698    CONTINUE
C     CHECK FOR MASS CONSERVATION
  699    TNORM=0.
         TACCUM=0.
         DO 704 NUM=1,NIND
            NST=NLINE(NUM)
            MFST=MF(NUM)
            MLST=ML(NUM)
            DO 704 MST=MFST,MLST
               TACCUM=TACCUM+ACCUM(NST,MST)
  704    TNORM=TNORM+C(NST,MST)*THICK(NST,MST)*AREA
         TRANS=0.
         IF(NTCLD.LT.1) GOTO 710
         DO 708 I=1,NTCLD
  708    TRANS=TRANS+TMASS(I)
  710    TOTAL=TNORM+TRANS
         WRITE(6,712) PARAM(K),ETS,TOTAL,TNORM,TRANS,TACCUM
  712    FORMAT(/////5X,11HSUMMARY OF,A10,21H DISTRIBUTIONS AFTER,
     1    F10.2,6H SEC. /5X,34HTOTAL SUSPENDED MATERIAL (CUFT) =,G14.5/
     2    5X,46HSUSPENDED MATERIAL IN LONG TERM GRID (CUFT) =,G14.5/
     3    5X,44HSUSPENDED MATERIAL IN SMALL CLOUDS (CUFT) =,G14.5/
     4    5X,42HTOTAL MATERIAL SETTLED TO BOTTOM (CUFT) =,G14.5//
     5    5X,55HOUTPUT SUPPRESSED IN LOCATIONS WITH NO MATERIAL PRESENT)
         IF(ABS(GONE).GT.1.) WRITE(6,715) GONE
  715    FORMAT(/10X,G12.5,72H CUFT OF MATERIAL (CUMULATIVE) LOST BY
     1    PASSING THROUGH GRID BOUNDARIES)
         IF(.NOT.PRT) RETURN
C
C     PRINT RESULTS IF REQUESTED BY INPUT DATA
         IF(TNORM.LT.1.0E-06) GOTO 725
  719    CONTINUE
         DO 720 M=1,MMAX
            DO 720 N=1,NMAX
  720    COUT(N,M)=C(N,M)
         CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,1,ICODE)
         DO 770 M=1,MMAX
            DO 770 N=1,NMAX
  770    COUT(N,M)=TOP(N,M)
         CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,3,ICODE)
         DO 780 M=1,MMAX
            DO 780 N=1,NMAX
  780    COUT(N,M)=THICK(N,M)
         CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,4,ICODE)
  725    IF(K.EQ.NSP1) GOTO 760
         IF(TACCUM.LT.1.0E-06) GOTO 760
         DO 730 M=1,MMAX
            DO 730 N=1,NMAX
  730    COUT(N,M)=ACCUM(N,M)
         CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETS,2,ICODE)
  760    CONTINUE
         IF(NTCLD.EQ.0) RETURN
         WRITE(6,805) ETS
  805    FORMAT(18H1 SMALL CLOUDS AT,F10.2,21H SECONDS ELAPSED TIME //
     1    2X,1HN,7X,1HX,13X,1HZ,11X,5HTMASS,9X,5HTSIDE,10X,4HTTHK,9X,
     2    4HTTOP)
         WRITE(6,815) (N,TX(N),TZ(N),TMASS(N),TSIDE(N),TTHK(N),TTOP(N),
     1    N=1,NTCLD)
  815    FORMAT(1X,I2,1X,6G14.4)
         RETURN
      END
      SUBROUTINE TRNSPT(ZZ,XX,YY,U,W,DEPTH,ICODE,NMAX,MMAX)
         DIMENSION ICODE(NMAX,1),U(1),W(1),DEPTH(1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/POINT/ MST,NST
         N=ZZ*DXR+.5
         M=XX*DXR+.5
C
C     DETERMINE VELOCITIES
         CALL VEL(XX,YY,ZZ,UA,WA,U,W,DEPTH,NMAX,MMAX)
         XX=XX-UA*DTL
         ZZ=ZZ-WA*DTL
         NE=ZZ*DXR+.5
         ME=XX*DXR+.5
C
C     CHECK THAT MARKER PARTICLE DOES NOT COME FROM OUT OF BOUNDS
         IF(NE.GT.0) GOTO 1
         NE=1
         ZZ=FLOAT(NE)*DX
    1    IF(NE.LE.NMAX) GOTO 2
         NE=NMAX
         ZZ=FLOAT(NE)*DX
    2    IF(ME.GT.0) GOTO 3
         ME=1
         XX=FLOAT(ME)*DX
    3    IF(ME.LE.MMAX) GOTO 4
         ME=MMAX
         XX=FLOAT(ME)*DX
    4    CONTINUE
         ITMP=ICODE(NE,ME)
         IF(ITMP.NE.2) GOTO 50
         ZZ=FLOAT(N)*DX
         XX=FLOAT(M)*DX
   50    RETURN
      END
      SUBROUTINE AVESPT(N,M,CONC,THK,XTOP,ISUM,J,C,THICK,TOP,ICODE,NMAX
     1,DCENT)
C
C
C     ROUTINE TO AVERAGE CONCENTRATIONS IN A 5 POINT STAR PATTERN
C     DIFFUSION LIMITED FROM THOSE POINTS WITH CONCENTRATIONS LESS
C     THAN EPSLN.
C     MASS LOST IN CONSEQUENCE IS ADDED IN ROUTINE
C     MAD TO POINT OF MAXIMUM CONCENTRATION.
C
         DIMENSION C(NMAX,1),THICK(NMAX,1),TOP(NMAX,1),ICODE(NMAX,1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/CUR/ CM,CMAX
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         EPSLN=2.0E-05*CMAX
         COCEAN=0.
         IF(ICODE(N,M)-2) 1,2,3
    2    CONC=0.0
         XTOP=0.
         THK=0.
         RETURN
    3    CONC=COCEAN
         XTOP=0.
         THK=0.
         GOTO 200
    1    C1=C(N,M)
         T1=TOP(N,M)
         TH1=THICK(N,M)
         IF(C1.GT.EPSLN) GOTO 7
         CM=CM+C1*TH1*AREA
         C1=0.
         C(N,M)=0.
         TOP(N,M)=0.
         THICK(N,M)=0.
    7    CONTINUE
         C2=C(N-1,M)
         T2=TOP(N-1,M)
         TH2=DCENT-T2
         IF(TH2.LT.0.) TH2=0.
         IF(TH2.GT.THICK(N-1,M)) TH2=THICK(N-1,M)
         IF(C2.GT.EPSLN) GOTO 9
         CM=CM+C2*THICK(N-1,M)*AREA
         C2=0.
         C(N-1,M)=0.
         TOP(N-1,M)=0.
         THICK(N-1,M)=0.
    9    CONTINUE
         IF(ICODE(N-1,M).NE.2) GOTO 10
         C2=C1
         T2=T1
         TH2=TH1
   10    IF(ICODE(N-1,M).NE.3) GOTO 20
         C2=COCEAN
         T2=T1
         TH2=TH1
   20    C3=C(N+1,M)
         T3=TOP(N+1,M)
         TH3=DCENT-T3
         IF(TH3.LT.0.) TH3=0.
         IF(TH3.GT.THICK(N+1,M)) TH3=THICK(N+1,M)
         IF(C3.GT.EPSLN) GOTO 27
C
C
         CM=CM+C3*THICK(N+1,M)*AREA
         C3=0.
         C(N+1,M)=0.
         TOP(N+1,M)=0.
         THICK(N+1,M)=0.
   27    CONTINUE
         IF(ICODE(N+1,M).NE.2) GOTO 30
         C3=C1
         T3=T1
         TH3=TH1
   30    IF(ICODE(N+1,M).NE.3) GOTO 40
         C3=COCEAN
         T3=T1
         TH3=TH1
C
   40    C4=C(N,M+1)
C
C
C
         T4=TOP(N,M+1)
         TH4=DCENT-T4
         IF(TH4.LT.0.) TH4=0.
         IF(TH4.GT.THICK(N,M+1)) TH4=THICK(N,M+1)
         IF(C4.GT.EPSLN) GOTO 47
         CM=CM+C4*THICK(N,M+1)*AREA
         C4=0.
         C(N,M+1)=0.
         TOP(N,M+1)=0.
         THICK(N,M+1)=0.
   47    CONTINUE
         IF(ICODE(N,M+1).NE.2) GOTO 50
         C4=C1
         T4=T1
         TH4=TH1
   50    IF(ICODE(N,M+1).NE.3) GOTO 60
         C4=COCEAN
         T4=T1
         TH4=TH1
   60    C5=C(N,M-1)
         T5=TOP(N,M-1)
         TH5=DCENT-T5
         IF(TH5.LT.0.) TH5=0.
         IF(TH5.GT.THICK(N,M-1)) TH5=THICK(N,M-1)
         IF(C5.GT.EPSLN) GOTO 67
         CM=CM+C5*THICK(N,M-1)*AREA
         C5=0.
         C(N,M-1)=0.
         TOP(N,M-1)=0.
         THICK(N,M-1)=0.
   67    CONTINUE
         IF(ICODE(N,M-1).NE.2) GOTO 70
         C5=C1
         T5=T1
         TH5=TH1
   70    IF(ICODE(N,M-1).NE.3) GOTO 80
         C5=COCEAN
         T5=T1
         TH5=TH1
   80    CONTINUE
C     SET THICKNESS AND TOP OF NEW ELEMENT TO AVERAGE OF CONTRIBUTING ELEMENTS
         INUM=0
C
         TOPSUM=0.
         IF(TH1.EQ.0.) GOTO 83
         INUM=INUM+1
         TOPSUM=TOPSUM+T1
   83    IF(TH2.EQ.0.) GOTO 84
         INUM=INUM+1
         TOPSUM=TOPSUM+T2
   84    IF(TH3.EQ.0.) GOTO 86
         INUM=INUM+1
         TOPSUM=TOPSUM+T3
   86    IF(TH4.EQ.0.) GOTO 88
         INUM=INUM+1
         TOPSUM=TOPSUM+T4
   88    IF(TH5.EQ.0.) GOTO 92
         INUM=INUM+1
         TOPSUM=TOPSUM+T5
   92    IF(INUM.EQ.0) GOTO 190
         THK=AMAX1(TH1,TH2,TH3,TH4,TH5)
         XTOP=TOPSUM/FLOAT(INUM)
         IF(XTOP+THK.GT.DCENT) XTOP=DCENT-THK
C     5 POINT AVERAGING FOLLOWS
         CEF1=C1*TH1/THK
         CEF2=C2*TH2/THK
         CEF3=C3*TH3/THK
         CEF4=C4*TH4/THK
         CEF5=C5*TH5/THK
         CONC=CEF1 - DIF*(4.*CEF1 - (CEF2+CEF3+CEF4+CEF5))
         GOTO 200
  190    CONTINUE
         CONC=0.
         THK=0.
         XTOP=0.
  200    ISUM = ISUM + 2**J
         RETURN
      END
      SUBROUTINE PRINTC(OUT,NMX,MMX,PARAM,ET,LBL,ICODE)
         DIMENSION OUT(NMX,MMX),ICODE(NMX,MMX)
         DIMENSION IPR(128),NUM(10)
         DATA IB,LND,ISEA,IPLUS,IDOT /1H ,1HL,1HO,1H+,1H./
         DATA NUM(1),NUM(2),NUM(3),NUM(4),NUM(5),NUM(6),NUM(7),NUM(8),
     1    NUM(9),NUM(10) /1H0,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1H9/
C     SCALE ARRAY FOR OPTIMUM PRINTOUT
         PMAX=0.
         DO 50 M=1,MMX
            DO 50 N=1,NMX
   50    PMAX=AMAX1(PMAX,OUT(N,M))
         P10=1.
         IP10=1
         IF(PMAX.GT.0.) IP10=ALOG10(PMAX)
         IF(IP10.GE.3) P10=10.**(IP10-2)
         IF(IP10.LT.0) P10=10.**(IP10-1)
         DO 60 M=1,MMX
            DO 60 N=1,NMX
   60    OUT(N,M)=OUT(N,M)/P10
         GOTO (150,200,250,300,350,400,450),LBL
  150    WRITE(6,155) PARAM,ET
  155    FORMAT(19H1CONCENTRATIONS OF,A10,29H (VOLUME RATIO) IN THE CLOUD,
     1    F10.2,19H SECONDS AFTER DUMP)
         GOTO 500
  200    WRITE(6,215) PARAM,ET
  215    FORMAT(24H1BOTTOM ACCUMULATION OF,A10,
     1    20H (CUFT/GRID SQUARE),F10.2,19H SECONDS AFTER DUMP)
         GOTO 500
  250    WRITE(6,255) PARAM,ET
  255    FORMAT(20H1POSITION OF TOP OF,A10,
     1    28H CLOUD (FEET BELOW SURFACE),F10.2,19H SECONDS AFTER DUMP)
         GOTO 500
  300    WRITE(6,305) PARAM,ET
  305    FORMAT(14H1THICKNESS OF,A10,14H CLOUD (FEET),F10.2,
     1    19H SECONDS AFTER DUMP)
         GOTO 500
  350    WRITE(6,355) PARAM,ET
  355    FORMAT(19H1THICKNESS (FT) OF,A10,24H ACCUMULATED ON BOTTOM,
     1    F10.2,19H SECONDS AFTER DUMP)
         GOTO 500
  400    WRITE(6,405) ET
  405    FORMAT(59H1TOTAL ACCUMULATED SOLID VOLUME ON BOTTOM (CUFT/GRID
     1    SQR),F10.2,19H SECONDS AFTER DUMP)
         GOTO 500
  450    WRITE(6,455) ET
  455    FORMAT(48H1TOTAL THICKNESS (FT) OF NEW MATERIAL ON BOTTOM,
     1    F10.2,19H SECONDS AFTER DUMP)
  500    CONTINUE
         WRITE(6,505) P10
  505    FORMAT(33H... MULTIPLY DISPLAYED VALUES BY,G11.4,5X,
     1    60H(LEGEND... .LT. .01, +.LT. .0001, O.LT. .000001))
C
C
C     SET UP PAGE DIVISIONS FOR PRINTING OF ARRAY
         NCP=NMX/32+1
C
         IF(((NCP-1)*32).EQ.NMX) NCP=NCP-1
         IN2=0
         DO 1000 IP=1,NCP
            IN1=IN2+1
            IN2=IN2+32
            IF(NMX.LT.IN2) IN2=NMX
            WRITE(6,605) (N,N=IN1,IN2,4)
  605       FORMAT(2X,5HM(N=),31I4)
            DO 100 M=1,MMX
               DO 10 I=1,128
   10          IPR(I)=IB
               DO 1 N=IN1,IN2
                  J=4*(N-IN1+1)
                  L=OUT(N,M)+.5
                  IF(ICODE(N,M).EQ.2) GOTO 2
                  IF(ICODE(N,M).EQ.3) GOTO 7
                  IF(L.GE.1000) GOTO 6
                  IF(L.GE.100) GOTO 3
                  IF(L.GE.10) GOTO 4
                  IF(OUT(N,M).GE.1.) GOTO 30
                  IF(OUT(N,M).LT.1.0E-06) GOTO 25
                  IF(OUT(N,M).LT..0001) GOTO 18
                  IF(OUT(N,M).LT..01) GOTO 8
                  IF(OUT(N,M).LT..1) GOTO 20
                  IPR(J-2)=NUM(1)
                  N1=10.*OUT(N,M)
                  IPR(J-1)=NUM(N1+1)
                  N2=100.*OUT(N,M)-10.*FLOAT(N1)
                  IPR(J)=NUM(N2+1)
                  GOTO 1
   30             LF=OUT(N,M)
                  LL=10.*(OUT(N,M)-FLOAT(LF))
                  IPR(J)=NUM(LL+1)
                  IPR(J-1)=IDOT
                  IPR(J-2)=NUM(LF+1)
                  GOTO 1
   25             IPR(J)=NUM(1)
                  GOTO 1
   20             IPR(J-2)=IDOT
                  IPR(J-1)=NUM(1)
                  N2=100.*OUT(N,M)
                  IPR(J)=NUM(N2+1)
                  GOTO 1
    2             IPR(J)=LND
                  IPR(J-1)=LND
                  IPR(J-2)=LND
                  IPR(J-3)=LND
                  GOTO 1
    7             IPR(J)=ISEA
                  IPR(J-1)=ISEA
                  IPR(J-2)=ISEA
                  IPR(J-3)=ISEA
                  GOTO 1
    6             N1=L/1000
                  IPR(J-3)=NUM(N1+1)
                  N1=L-1000*N1
                  N2=N1/100
                  IPR(J-2)=NUM(N2+1)
                  N2=N1-100*N2
                  N3=N2/10
                  IPR(J-1)=NUM(N3+1)
                  N1=N2-10*N3
                  IPR(J)=NUM(N1+1)
                  GOTO 1
    3             N1=L/100
                  IPR(J-2)=NUM(N1+1)
                  N1=L-100*N1
                  N2=N1/10
                  IPR(J-1)=NUM(N2+1)
                  N1=N1-10*N2
                  IPR(J)=NUM(N1+1)
                  GOTO 1
    4             N1=L/10
                  IPR(J-1)=NUM(N1+1)
                  N1=L-10*N1
                  IPR(J)=NUM(N1+1)
                  GOTO 1
    8             IPR(J)=IPLUS
                  GOTO 1
   18             IPR(J)=IDOT
    1          CONTINUE
               WRITE(6,205) M,IPR
  205          FORMAT(/1X,I3,1X,128A1)
  100       CONTINUE
            IF(IP.LT.NCP) WRITE(6,705)
  705       FORMAT(1H1//)
 1000    CONTINUE
         RETURN
      END
      SUBROUTINE DINT(XD,ZD,DEP,DEPTH,NMAX)
C
C     ROUTINE TO INTERPOLATE ON DEPTH GRID FOR DEPTH AT AN ARBITRARY
C     POINT IN THE ESTUARY
C     GIVEN POSITION (XD,ZD) IN ESTUARY COORDINATES, RETURNS DEPTH (DEP)
C
         DIMENSION DEPTH(NMAX,1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         ZN=ZD*DXR
         XM=XD*DXR
         N=ZN+0.0001
         M=XM+0.0001
         EN=ZN-FLOAT(N)
         EM=XM-FLOAT(M)
         IF(EN.LT.0.0001) EN=0.
         IF(EM.LT.0.0001) EM=0.
         D1=DEPTH(N,M)+EN*(DEPTH(N+1,M)-DEPTH(N,M))
         D2=DEPTH(N,M+1)+EN*(DEPTH(N+1,M+1)-DEPTH(N,M+1))
         DEP=D1+EM*(D2-D1)
         RETURN
      END
      SUBROUTINE VDIFCO(N,M,YY,AKY,U,W,DEPTH,NMAX,MMAX)
C
C     ROUTINE TO COMPUTE VERTICAL DIFFUSION COEFFICIENTS
C
         DIMENSION DEPTH(NMAX,1),U(NMAX,MMAX,1),W(NMAX,MMAX,1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/GPI/ G,PI
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         COMMON/AMB/ NROA,IY,Y(10),ROA(10),H
C     DETERMINE DENSITY AND VELOCITY GRADIENTS
         IY=0
   10    IY=IY+1
         IF(IY+1 .GT. NROA) GOTO 20
         IF(YY.GE.Y(IY).AND.YY.LE.Y(IY+1)) GOTO 20
         GOTO 10
   20    RHO=ROA(IY)+(ROA(IY+1)-ROA(IY))*(YY-Y(IY))/(Y(IY+1)-Y(IY))
         DENGRA=(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         Y1=YY+1.
         Y2=YY-1.
         XX=FLOAT(M)*DX
         ZZ=FLOAT(N)*DX
         CALL VEL(XX,Y1,ZZ,UA1,WA1,U,W,DEPTH,NMAX,MMAX)
         CALL VEL(XX,Y2,ZZ,UA2,WA2,U,W,DEPTH,NMAX,MMAX)
         VELGRA=SQRT((UA2-UA1)**2+(WA2-WA1)**2)/2.
         IF(VELGRA.NE.0.) GOTO 40
C
C
C
C
C     USE PRITCHARD DEFINITION OF RICHARDSON NO.
         CALL VEL(XX,0.,ZZ,UA1,WA1,U,W,DEPTH,NMAX,MMAX)
         VELGRA=0.7*SQRT(UA1**2+WA1**2)/DEPTH(N,M)
C     DETERMINE RICHARDSON NO.
         IF(VELGRA.NE.0.) GOTO 40
         AKY=0.
         RETURN
   40    RI=G*DENGRA/(RHO*VELGRA**2)
C     CHECK BOUNDS
         IF(RI.LT.0.) RI=0.
         IF(RI.GT.3.999999) RI=3.999999
C     COMPUTE DIFFUSION COEFFICIENT
         AKY=AKYO*(1.-0.25*RI)
         RETURN
      END
