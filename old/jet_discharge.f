C=======================================================================
C   FORTRAN CODE EXTRACTED FROM Hi_Extracted_F77.pdf
C   SOURCE: APPENDIX D, Listing of Fortran Program for Modeling Fixed or
C           Moving Jet Discharge of Dredged Material
C=======================================================================

      PROGRAM DMFJ(INPUT, OUTPUT, TAPE5, TAPE6, TAPE7)
C
C     THIS IS DUMMY MAIN PROGRAM TO SET BLANK COMMON STORAGE POINTERS
C     FOR LONG TERM ARRAYS, SOLIDS ARRAY AND SMALL CLOUDS ARRAYS
C
         COMMON/DIMEN/NS,NSP1, NVL
         COMMON A(1)
C OTHERS
C     COMMON A(NEED)
         REWIND 7
         READ (5,15) NMAX, MMAX,NS,NVL,NSC
   15    FORMAT(16I5)
C NMAX-LONG TERM ARRAY DIMENSION IN Z-DIRECTION
C MMAX-LONG TERM ARRAY DIMENSION IN X-DIRECTION
C NS-NUMBER OF SOLID FRACTIONS
C NVL-NUMBER OF VELOCITY PLANES
C NSC-MAXIMUM NUMBER OF SMALL CLOUDS OF ONE COMPONENT ALLOWED
C
C SET ARRAY POINTERS
C
         NSP1 = NS+1
         LDIM = NMAX * MMAX
         N1=1                ! X
         N2=N1+ LDIM         ! Z
         N3=N2 + LDIM        ! DEPTH
         N4=N3+ LDIM         ! ICODE
         N5=N4 + LDIM        ! CP
         N6=N5+ LDIM         ! THICKP
         N7=N6 + LDIM        ! TOPP
         N8=N7+ LDIM         ! C
         N9=N8 + LDIM*NSP1   ! THICK
         N10=N9+ LDIM*NSP1   ! TOP
         N11=N10+ LDIM*NSP1  ! ACCUM
         N12=N11 + LDIM*NS   ! U
         N13=N12+ LDIM*NVL   ! W
         N14=N13 + LDIM*NVL  ! SS
         N15=N14 + 600*NS    ! TSIDE
         N16=N15 + NSC*NSP1  ! TTHK
         N17=N16 + NSC*NSP1  ! TTOP
         N18=N17+ NSC*NSP1   ! TMASS
         N19=N18 + NSC*NSP1  ! TX
         N20=N19 + NSC*NSP1  ! TZ
         NEED = N20 + NSC*NSP1
C
C FIND PRESENT FIELD LENGTH, ADD LENGTH OF ARRAYS (NEED) AND
C REQUEST NEW FIELD LENGTH
C CDC ONLY
C     LENF = MEMGET(65B)+1
C     NEWLEN = LENF + NEED
         WRITE (6,25) NMAX, MMAX,NS,NVL,NSC, NEED
   25    FORMAT(/////10X,39HSTORAGE ALLOCATION PARAMETERS FOLLOW.../10X,
     +    'NMAX',1X,'MMAX',3X,'NS',2X,'NVL',2X,'NSC',4X,'NEED'/10X,I3,2X
     +    ,I3,4X,I2,1X,I3,2X,I3,2X,I6)
C CDC ONLY
C     CALL XRFL (NEWLEN)
C
C NOTE: There are typos in the following CALL statement as printed in the source.
C       A(NS) should probably be A(N5). A(NB) should probably be A(N8).
C       The argument list does not match the SUBROUTINE MAIN definition.
         CALL MAIN(A(N1),A(N2),A(N3),A(N4),A(N5),A(N6),A(N7),A(N8),
     +    A(N9),A(N10),A(N11),A(N12),A(N13),A(N14),A(N15),A(N16),
     +    A(N17),A(N18),A(N19),A(N20), NMAX, MMAX, NSC)
         CALL EXIT
      END
C
C=======================================================================
C
C     JET MODEL
C
      SUBROUTINE MAIN(X,Z, DEPTH, ICODE, CP, COUT, THICKP, TOPP,C,THICK
     1, TOP, ACCUM,U,W,SS,TSIDE, TTHK,TTOP, TMASS, TX,TZ,NMAX, MMAX,NSC)
         DIMENSION C(NMAX,MMAX,1), THICK(NMAX,MMAX,1), TOP(NMAX,MMAX,1)
     1   , ACCUM(NMAX,MMAX,1),CP(NMAX,1), THICKP(NMAX,1),TOPP(NMAX,1)
     2   , COUT(NMAX,MMAX)
         DIMENSION TSIDE(NSC,1), TTHK(NSC,1),TTOP(NSC,1),TMASS(NSC,1),
     1    TX(NSC,1),TZ(NSC,1)
         COMMON/BAY/ DX,DTL, XBARGE, ZBARGE, DXH,DXR,AREA
         COMMON/AMB/ NROA,IY,Y(8), ROA(8), H
         COMMON/GUIDE1/TJET,TSTOP, ISTEP, IPLUNG, NUTRL, NTRIAL,ILEAVE,
     +    KEY1,KEY2,KEY3
         COMMON/P/ PRT
         COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600), AA(600),FC(600),VF
         COMMON/JET1/ DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET, ROI, ROO, VDOT
         COMMON/PIECES/ PARAM(13),RDAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         COMMON/GP/IGCN,IGCL,IGLT,IPCN,IPCL,IPLT
         COMMON/LOST/ GONE
         COMMON/BPOS/ XBO, ZBO
         COMMON/SWITCH/ ITF
         COMMON/DPASS/ NPASS, MPASS
         COMMON/DIMEN/NS,NSP1, NVL
         COMMON/FLEE/ ITD, TD(6),DC(6), TRACER, CINIT,CBACK
         DIMENSION ID(8), TPRT(12)
         LOGICAL PRT
         DATA (TPRT(I), I=1,12)/12*0.0/
C NON-ANSI
         DATA ITD/1/,(DC(I),I=1,6)/1.0,0.1,0.01,0.001,0.0001,1.E-30/
C NON-ANSI
         NPASS = NMAX
         MPASS = MMAX
         CALL SECND(T1)
         WRITE (6,5)
    5    FORMAT (1H1///10X,97HFATE OF DREDGED MATERIAL DEPOSITED IN AN EST
     +   UARY BY TIME LIMITED DISCHARGE FROM A MOVING BARGE OR/10X,
     +   42HCONTINUOUS DISCHARGE FROM A FIXED PIPELINE)
C
C     READ EXECUTION MANAGEMENT PARAMETERS
C
         READ (5,15) KEY1,KEY2, KEY3
         READ (5,15) IGCN,IGCL, IPCN,IPCL, IPLT
   15    FORMAT (16I5)
         WRITE (6,25) KEY1, KEY2, KEY3,IGCN, IGCL,IPCN, IPCL, IPLT
   25    FORMAT(//10X,30HEXECUTION PARAMETERS FOLLOW... / 10X,
     +    'KEY1 KEY2 KEY3 IGCN IGCL IPCN IPCL IPLT'/7X,8I6)
C
C     READ ALPHAMERIC IDENTIFICATION FOR THIS RUN
C
         READ (5,35)ID
   35    FORMAT (8A10)
         WRITE (6,45) ID
   45    FORMAT(8(/),10X,8A10///)
C
C     DEFINE ESTUARY GEOMETRY AND ARRAYS GOVERNING LONG TERM COMPUTATION
C
         CALL ESTGEO(DEPTH, ICODE, NMAX, MMAX)
C
C     READ TIME TO START JET DISCHARGE (W/R TO START OF TIDAL CYCLE),
C     DURATION OF SIMULATION, LONG TERM TIME STEP, DURATION OF JET DISCHARGE
C
         READ (5,55) TSJ,TSTOP,DTL,TJET
   55    FORMAT(8E10.0)
         WRITE (6,65) TSJ,TSTOP, TJET, DTL
   65    FORMAT(///10X,25HTIME PARAMETERS FOLLOW.../10X,
     +    20HTIME OF JET START,F10.2,
     +    35H SECONDS AFTER START OF TIDAL CYCLE/10X,
     +    25HDURATION OF SIMULATION,F10.2,
     +    24H SECONDS AFTER JET START/10X,
     +    27HDURATION OF JET DISCHARGE,F10.2,
     +    8H SECONDS/10X,28HLONG TERM TIME STEP (DTL),F10.2,8H SECONDS)
C
C     SET COEFFICIENTS AND INITIAL CONDITIONS
C
         CALL INIT
C
C     SET PRINTING TIMES ACCORDING TO IPLT
C
         IF (IPLT) 80,80,100
C
C     HERE TO SET DEFAULT PRINTING TIMES
C
   80    DTP=TSTOP/4.
         INC=DTP/DTL + .0001
         IF(DTP .LT. DTL) INC=1
         DTP=FLOAT(INC)*DTL
         DO 90 I=1,4
   90    TPRT(I)=FLOAT(I)*DTP
         IF (TPRT(4) .GT. TSTOP) TPRT(4)=TSTOP
         GO TO 110
C
C     HERE TO SET USER SPECIFIED PRINTING TIMES
C
  100    CONTINUE
         READ (5,55) (TPRT(I),I=1,IPLT)
C
C     DETERMINE NUMBER OF COMPLETE TIDAL CYCLES AND FRACTION OF LAST
C     TIDAL CYCLE TO RUN
C
  110    TSUM = (TSJ+TSTOP)/3600.
         NCYCLE = TSUM/25.+.0001
         HOURS = TSUM-FLOAT(25*NCYCLE)
         IF (NCYCLE .EQ. 0) NCYCLE=1
C
C     CLEAR ARRAYS
C
         DO 130 K=1,NSP1
            DO 130 M=1,MMAX
               DO 130 N=1,NMAX
                  C(N,M,K)=0.
                  THICK(N,M,K)=0.
                  TOP(N,M,K)=0.
  130    ACCUM(N,M,K)=0.
         DO 140 K=1,NSP1
            DO 140 I=1,NSC
               TSIDE(I,K)=0.
               TTHK(I,K)=0.
               TTOP(I,K)=0.
               TMASS(I,K)=0.
               TX(I,K)=0.
  140    TZ(I,K)=0.
         INDPRT=1
         NSS=NSP1
         IF(KEY3 .EQ. 0) NSS=NS
         ETJ=0.
         GONE=0.
         XBO = XBARGE
         ZBO = ZBARGE
C
C     BEGIN LOOP ON TIDAL DAYS
C
         DO 200 ICYCLE=1,NCYCLE
            IFST=1
            ILST = 25.*3600./DTL + .0001
            IF(ICYCLE .EQ. 1) IFST=TSJ/DTL+ .0001
            IF(IFST .LT. 1) IFST=1
            IF(ICYCLE .EQ. NCYCLE) ILST = HOURS*3600./DTL + .0001
C
C     BEGIN LOOP ON LONG TERM TIME STEPS
C
            DO 200 IDTL=IFST, ILST
C
C     ET IS ELAPSED TIME (SECONDS) FROM START OF TIDAL CYCLE IN WHICH
C     JET DISCHARGE BEGINS. ET IS USED AS TIME LABEL FOR SETS OF TIDAL
C     VELOCITIES. ETJ IS ELAPSED TIME (SEC) FROM START OF JET
C
               ET = FLOAT(ICYCLE-1)*90000. + FLOAT(IDTL)*DTL
               ETJ = ETJ+DTL
C
C     UPDATE VELOCITIES
C
               CALL UW(ET, TSJ,U,W,NMAX,MMAX)
C
C     CONVECTIVE DESCENT...
C
               IF(ETJ-DTL .GT. TJET+.0001) GO TO 180
               ETJP = ETJ-DTL
               WRITE (6,145) ETJP
  145          FORMAT (1H1,10X, 32HCOMPUTE NEW JET-PLUME BEGINNING,F10.2,
     +         33H SECONDS AFTER START OF DISCHARGE )
               WRITE (6,155) ET,XBO,ZBO
  155          FORMAT(//10X,66HAMBIENT VELOCITY DISTRIBUTION CORRESPONDS TO DTL
     +          ENDING AT SECOND,F10.2,36H OF 90000 SECOND (25 HR) TIDAL CYCLE
     +         /10X,56HCOORDINATES OF BARGE AT START OF THIS TIME STEP... XBO=
     +         ,G14.6,9H, ZBO=,G14.6)
               CALL AMBC(ETJ, DEPTH, NMAX, MMAX)
               CALL VEL(XBO,0.,ZBO, UAS, WAS,U,W, DEPTH,NMAX, MMAX)
               WRITE(6,158) UAS, WAS
  158          FORMAT(///10X,74HSURFACE VELOCITIES AT BARGE AT START OF THIS COM
     +         PUTATION.....UA (FT/SEC)=,G11.4,16H, WA (FT/SEC)=,G11.4)
               CALL JET(SS,U,W, DEPTH,NS)
C
C     ITF IS LAST TIME STEP OF DESCENT PHASE
C
               ITF=ISTEP
               IND = NUTRL+IPLUNG
               IF(NTRIAL.EQ.5 .AND. IND.EQ.0) GO TO 700
               IF(IPLUNG.EQ.1) GO TO 170
C
C     CHECK DENSITY GRADIENT AT CLOUD LOCATION
C
               NN = NROA-1
               DO 160 I=1,NN
                  IF (CY(ISTEP).GE.Y(I) .AND. CY(ISTEP).LE.Y(I+1)) DENGRA =
     +             (ROA(I+1)-ROA(I))/(Y(I+1)-Y(I))
  160          CONTINUE
               IF (DENGRA .GT. 1.0E-10) GO TO 170
               WRITE (6,165)
  165          FORMAT (1H1,10X, 61HDENSITY GRADIENT IS ZERO, GO DIRECTLY TO LONG
     +          TERM DIFFUSION)
               GO TO 180
C
C     DYNAMIC COLLAPSE...
C
  170          CALL COLAPS(SS,U,W, DEPTH,NS)
               IF(NTRIAL.EQ.5 .AND. NUTRL.NE.3) GO TO 700
C
C     CALL BOOKS IF ELAPSED TIME LESS THAN TIME LAST MATERIAL PASSES
C     THROUGH END OF PLUME
C
  180          IF((ETJ-DTL) .LT. (TJET+T(ISTEP)+.0001)) CALL BOOKS(ETJ,NSS,SS,
     +          NS, DEPTH, ACCUM,U,W,NMAX,MMAX)
C
C     SET PRINT INDICATOR PRT
C
               PRT = .FALSE.
               IF(ABS(ETJ-TPRT(INDPRT)) .GT. .01) GO TO 190
               PRT = .TRUE.
               INDPRT = INDPRT+1
  190          CONTINUE
C
C     CALL ROUTINE TO MOVE AND DIFFUSE CLOUDS
C
               CALL MAD(ETJ,NSS,X,Z,U,W,C,THICK,TOP,DEPTH,ACCUM,CP,THICKP,TOPP
     1         , COUT,ICODE,TSIDE,TTHK,TTOP,TMASS,TX,TZ,NMAX,MMAX,NSC)
               IF((ETJ-DTL) .GT. (TJET+T(ISTEP)+.0001)) GO TO 200
               IF (KEY2 .EQ. 1) GO TO 200
               CALL VEL(XBO,0.,ZBO,UAS,WAS,U,W,DEPTH,NMAX,MMAX)
               XBO = XBO+(UBX+UAS)*DTL
               ZBO = ZBO+(WBZ+WAS)*DTL
  200    CONTINUE
C
C     PRINT ACCUMULATED THICKNESS DISTRIBUTION
C
         DO 400 K=1,NS
            DO 250 M=1,MMAX
               DO 250 N=1,NMAX
  250       COUT(N,M)=(1.+VOIDS(K))*ACCUM(N,M,K)/AREA
  400    CALL PRINTC(COUT,NMAX,MMAX, PARAM(K), ETJ,5,ICODE)
C
C     ...HERE FIND TOTAL SOLID VOLUME (ALL COMPONENTS) ACCUMULATED
C
         DO 410 M=1,MMAX
            DO 410 N=1,NMAX
  410    COUT(N,M)=0.
         DO 420 K=1,NS
            DO 420 M=1,MMAX
               DO 420 N=1,NMAX
  420    COUT(N,M)=COUT(N,M)+ACCUM(N,M,K)
         CALL PRINTC(COUT, NMAX, MMAX, PARAM(NS+1), ETJ,6,ICODE)
         DO 440 M=1,MMAX
            DO 440 N=1,NMAX
  440    COUT(N,M)=COUT(N,M)*(1.+BVOID)/AREA
         CALL PRINTC(COUT,NMAX, MMAX, PARAM(NS+1), ETJ,7,ICODE)
         IF(KEY3 .EQ. 0) GO TO 800
C
C     PRINT FINAL FLUID CONCENTRATIONS
C
         DO 450 M=1,MMAX
            DO 450 N=1,NMAX
  450    COUT(N,M)=C(N,M,NSP1)
         CALL PRINTC(COUT, NMAX, MMAX, PARAM(NSP1), ETJ,1,ICODE)
         DO 460 M=1,MMAX
            DO 460 N=1,NMAX
  460    COUT(N,M)=TOP(N,M,NSP1)
         CALL PRINTC(COUT, NMAX, MMAX, PARAM(NSP1), ETJ,3,ICODE)
         DO 470 M=1,MMAX
            DO 470 N=1,NMAX
  470    COUT(N,M)=THICK(N,M,NSP1)
         CALL PRINTC(COUT,NMAX, MMAX, PARAM(NSP1),ETJ,4,ICODE)
         WRITE (6,505) TRACER, CINIT, CBACK
  505    FORMAT(1H1/////10X, 74HDILUTION TIMES FOR CONSERVATIVE TRACER IN
     +    INITIAL FLUID FRACTION FOLLOW...//10X,10HTRACER IS,A10,
     +    28H INITIAL CONCENTRATION IS,G15.7,36H GM/L BACKGROUND CONCENT
     +   RATION IS,G15.7,5H GM/L)
         ITD=ITD-1
         DO 530 I=1,ITD
            IDL=1./DC(I)+.001
            WRITE (6,515) IDL, TD(I)
  515       FORMAT (10X,12HDILUTION IS,I6,13H TO 1 WITHIN,F10.3,
     +       38H SECONDS AFTER FLUID LEAVES JET NOZZLE )
  530    CONTINUE
         WRITE (6,535)
  535    FORMAT(//10X,54HDILUTION TIMES ARE FOR POINT OF MAXIMUM CONCENTRA
     +   TION. )
         GO TO 800
  700    WRITE (6,705)
  705    FORMAT(//49H FIFTH SOLUTION TRIAL NOT SATISFACTORY, CALL EXIT)
  800    CALL SECND(T2)
         T3=T2-T1
         WRITE (6,805)T3
  805    FORMAT (27H1RUN COMPLETED, CPU TIME=,F7.3,5H SEC.)
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE ESTGEO(DEPTH,ICODE, NMAX,MMAX)
C
C     ROUTINE TO DEFINE ESTUARY GEOMETRY AND CODED ARRAY FOR JET MODEL
C
         DIMENSION DEPTH(NMAX,MMAX), ICODE(NMAX,MMAX)
         COMMON/BAY/ DX, DTL, XBARGE, ZBARGE,DXH, DXR, AREA
         COMMON/GUIDE2/NIND, NLINE(150), MF(150),ML(150)
C
C     READ GRID SPACE STEP
C
         READ (5,45) DX
   45    FORMAT(8E10.0)
         WRITE (6,65) NMAX,MMAX,DX
   65    FORMAT(10X, 56HNUMBER OF LONG TERM GRID POINTS IN Z-DIRECTION (N
     +   MAX) = ,I3//10X,56HNUMBER OF LONG TERM GRID POINTS IN X-DIRECTIO
     +   N (MMAX) = ,I3//10X,20HGRID SPACING (DX) =,F12.5)
C
C     SET CONSTANTS
C
         DXH=0.5*DX
         DXR=1./DX
         AREA=DX**2
C
C     READ DEPTHS
C
         DO 10 M=1,MMAX
   10    READ (5,15) (DEPTH(N,M), N=1,NMAX)
   15    FORMAT(16F5.0)
C
C     GENERATE CODED ARRAY
C
         IWPT=0
         DO 20 M=1,MMAX
            DO 20 N=1,NMAX
               ICODE(N,M) = 1
               IF (DEPTH(N,M) .EQ. 0.) ICODE(N,M)=2
               IF(ICODE(N,M) .EQ. 2) GO TO 19
               IF(N.EQ.1 .OR. N.EQ.NMAX .OR. M.EQ.1 .OR. M.EQ.MMAX)
     +          ICODE(N,M)=3
   19          IF(ICODE(N,M).EQ. 1) IWPT=IWPT+1
   20    CONTINUE
C
C     GENERATE ARRAYS GOVERNING CALCULATIONS
C
         NIND=0
         DO 100 N=1,NMAX
            DO 100 M=1,MMAX
               IF(ICODE(N,M) .NE. 1) GO TO 100
               IF(ICODE(N,M-1) .EQ. 1) GO TO 50
C
C     HERE TO START A LINE OF COMPUTATION
C
               NIND = NIND+1
               IF (NIND .LT. 151) GO TO 40
               WRITE(6,28)
   28          FORMAT (//2X,111HARRAYS IN COMMON BLOCK/GUIDE2/ FILLED...CALL EX
     +         IT...USER SHOULD INCREASE DIMENSIONS AND CHANGE CHECK STATEMENT)
               CALL EXIT
   40          CONTINUE
               NLINE(NIND)=N
               MF(NIND)=M
               GO TO 100
   50          IF(ICODE(N,M+1) .EQ. 1) GO TO 100
C
C     HERE TO END A LINE OF COMPUTATION
C
               ML(NIND)=M
  100    CONTINUE
C
C     PRINT ARRAYS
C
         WRITE(6,115)
  115    FORMAT (1H1,10X,31HDEPTH GRID (IN FEET) FOLLOWS.../)
         NCP = NMAX/24+1
         IF(((NCP-1)*24) .EQ. NMAX) NCP = NCP-1
         IN2=0
         DO 130 IP=1,NCP
            IN1 = IN2+1
            IN2=IN2+24
            IF(NMAX .LT. IN2) IN2=NMAX
            WRITE (6,117) (N,N=IN1,IN2)
  117       FORMAT (2X,4H M, N=, 24I5/)
            DO 120 M=1,MMAX
               WRITE (6,119) M, (DEPTH(N,M), N=IN1,IN2)
  119          FORMAT(1X,I2,1X,24F5.0)
  120       CONTINUE
            IF(IP .LT. NCP) WRITE(6,122)
  122       FORMAT (1H1//)
  130    CONTINUE
         WRITE (6,135)
  135    FORMAT(1H1,10X,65HCODED ARRAY FOLLOWS... (1=WATER, 2=LAND, 3=OPE
     +   N WATER BOUNDARY)/)
         NCP = NMAX/60
         IF(NCP .LT. 1) NCP=1
         IN2=0
         DO 150 IP=1,NCP
            IN1=IN2+1
            IN2=IN2+60
            IF (NMAX .LT. IN2) IN2=NMAX
            WRITE (6,137) IN1, IN2
  137       FORMAT(10X,14HRANGE OF N IS, I3,4H TO,I3/)
            DO 140 M=1,MMAX
               WRITE (6,139) (ICODE(N,M), N=IN1,IN2)
  139          FORMAT (1X,60I2)
  140       CONTINUE
            IF(IP .LT. NCP) WRITE (6,122)
  150    CONTINUE
         WRITE (6,155) IWPT
  155    FORMAT(//10X,39HNUMBER OF GRID POINTS WITHIN ESTUARY=,I5/1H1)
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE INIT
C
C     ROUTINE TO SET INITIAL CONDITIONS FOR JET DISCHARGE
C
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/AMB/ NROA,IY,Y(8),ROA(8),H
         COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600),AA(600),FC(600),VF
         COMMON/JET1/DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET,ROI,ROO,VDOT
         COMMON/STCOEF/ ALPHA,ALPHAC,ALPHAO,ALPHA1,ALPHA2,ALPHA3,ALPHA4,
     1    F1,BETA,CDRAG,CFRIC,CD,CD1,CD2,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,
     2    GAMA
         COMMON/LTCOEF/ ALAMDA,DIF,AKYO
         COMMON/GPI/ G,PI
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/VSPECS/ IFORM,DU1,DU2,UU1,UU2,DW1,DW2,WW1,WW2,DL1,DL2
         COMMON/INITE/ SAVE(22),CF
         COMMON/DIMEN/NS,NSP1,NVL
         COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         COMMON/PROFIL/ NPROF,DTROA,YROA(8,50),RHOA(8,50)
         COMMON/NCSTOR/ NTCLD(13)
         COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
         DATA G,PI /32.2,3.14159/
C
C     ...SET DISCHARGE PARAMETERS....
C
         READ (5,45) VDOT,BC(1),DJET,ANGLE,ROI,BVOID
         THETA2(1)=90.-ANGLE
         READ (5,45) XBARGE,ZBARGE,SAI,UB
   45    FORMAT (8E10.0)
         WRITE (6,55) VDOT,BC(1),DJET,ANGLE,XBARGE,ZBARGE,SAI,UB,ROI,BVOID
   55    FORMAT(///10X,23HDISCHARGE PARAMETERS.../10X
     1   ,38HVOLUME RATE OF DISCHARGE (CUFT/SEC) =,G15.7/10X
     2   ,29HINITIAL RADIUS OF JET (FT) =,G15.7/10X
     3   ,33HDEPTH OF DISCHARGE NOZZLE (FT) =,G12.4/10X
     4   ,52HANGLE OF DISCHARGE (DEGREES BELOW THE HORIZONTAL)=,G12.4
     +   /10X,30HBARGE POSITION, XBARGE (FT)=,G11.4/10X,
     +   30HBARGE POSITION, ZBARGE (FT)=,G11.4/10X,
     +   55HCOURSE (MEASURED ANTI-CLOCKWISE FROM POSITIVE X-AXIS)=,G11.4,
     +   8H DEGREES/10X,26HBARGE VELOCITY (FT/SEC)=,G11.4
     5   ,//10X,18HBULK PARAMETERS.../10X,15HDENSITY, ROI=,G15.7/10X,
     6   ,31HAGGREGATE VOIDS RATIO, BVOID=,G12.4)
         NSP1=NS+1
         WRITE (6,85) NS
   85    FORMAT (1H1,10X,10HTHERE ARE,I2,30H SOLIDS... PARAMETERS FOLLOW...
     +   /10X,11HDESCRIPTION,2X,14HDENSITY(GM/CC),2X,
     +   24HCONCENTRATION(CUFT/CUFT),2X,21HFALL VELOCITY(FT/SEC),3X,
     +   11HVOIDS RATIO/)
         DO 200 K=1,NS
            READ (5,105) PARAM(K),ROAS(K),CS(K),VFALL(K),VOIDS(K)
  105       FORMAT(A10,7E10.0)
            WRITE (6,135) PARAM(K),ROAS(K),CS(K),VFALL(K),VOIDS(K)
  135       FORMAT(11X,A10,2X,G12.4,9X,G12.4,15X,G12.4,5X,G12.4)
  200    CONTINUE
C NON-ANSI
         PARAM(NSP1) = 'FLUID'
C NON-ANSI
         VFALL(NSP1)=0.
C
C     CHECK CONSISTENCY OF PARAMETERS WITH NECESSARY MINIMUM FLUID DENSITY OF 1
C
         CS(NSP1)=1.
         CIV = VDOT*DTL
         CIVS = CIV
         CIM = ROI*CIV
         DO 210 K=1,NS
            SV=CS(K)*CIVS
            SM=SV*ROAS(K)
            CS(NSP1)=CS(NSP1)-CS(K)
            CIV=CIV-SV
  210    CIM=CIM-SM
         FD=CIM/CIV
         WRITE (6,135) PARAM(NSP1),FD,CS(NSP1),VFALL(NSP1)
         IF (FD.GE.0.97) GO TO 250
         WRITE(6,235)
  235    FORMAT(//10X,44HFLUID DENSITY LESS THAN 0.97 GM/CC, CALL EXIT )
         CALL EXIT
  250    CONTINUE
C
C     READ INFO FOR DILUTION OF CONSERVATIVE TRACER
C
         READ (5,192) TRACER, CINIT,CBACK
  192    FORMAT(A10,2E10.0)
C
C     ....CONVERT DENSITY UNITS FROM GM/CC TO SLUGS/CUFT AND SET
C     CONSTANTS FOR MOVING BARGE.....
C
         DO 270 K=1,NS
  270    ROAS(K)=ROAS(K)*1.94
         ROI = ROI*1.94
         SAI = SAI*PI/180.
         UBX = UB*COS(SAI)
         WBZ = UB*SIN(SAI)
         IF(ABS(UBX) .LT. .0001) UBX=0.
         IF(ABS(WBZ) .LT. .0001) WBZ=0.
         SAI = SAI-PI
         IF (KEY1 .EQ. 2) GO TO 300
         WRITE (6,285)
  285    FORMAT (6(/),10X, 37HUSE TETRA TECH SUGGESTED COEFFICIENTS )
         DINCR1=1.
         DINCR2=1.
         ALPHA1=0.0806
         ALPHA2=.3536
         BETA=0.
         CD=1.3
         GAMA=.25
         CDRAG=1.
         CFRIC=.01
         CD3=.2
         CD4=2.
         ALPHA3=.3536
         ALPHA4=.001
         FRICTN=.01
         F1=.1
         CM=1.
         ALAMDA=.005
         AKYO=.05
         GO TO 360
  300    WRITE(6,335)
  335    FORMAT(6(/),10X, 24HUSE READ IN COEFFICIENTS )
         READ (5,45) DINCR1,DINCR2
         READ (5,45) ALPHA1,ALPHA2,BETA,CD
         READ (5,45) GAMA,CDRAG,CFRIC,CD3,CD4,ALPHA3,ALPHA4,FRICTN,F1,CM
         READ (5,45) ALAMDA,AKYO
C
C     ....HERE TO WRITE COEFFICIENTS....
C
  360    WRITE (6,365) DINCR1, DINCR2
  365    FORMAT(/10X,6HDINCR1,F10.4,5X,6HDINCR2,F10.4)
         WRITE(6,375) ALPHA1, ALPHA2, BETA,CD
  375    FORMAT(10X,6HALPHA1,F10.4,5X,6HALPHA2,F10.4,5X,4HBETA,F10.4,6X,
     +    2HCD,F10.4)
         WRITE (6,385) GAMA,CDRAG,CFRIC,CD3,CD4,ALPHA3,ALPHA4,FRICTN,F1,CM
  385    FORMAT(10X,4HGAMA,2X,F10.4,5X,5HCDRAG,1X,F10.4,5X,5HCFRIC,F9.4,6X
     +    ,3HCD3,F10.4,7X,3HCD4,F10.4/10X,6HALPHA3,F10.4,5X,6HALPHA4,F10.4
     +    ,5X,6HFRICTN,F10.4,4X,2HF1,F10.4,8X,2HCM,F10.4)
         WRITE (6,395) ALAMDA, AKYO
  395    FORMAT (10X, 6HALAMDA,F10.4,5X, 4HAKYO,F10.4//)
         DIF = ALAMDA*DX**1.333333*DTL/AREA
         IF(DIF .GT. .2) DIF=.2
C
C     READ DENSITY PROFILE DATA AS OBTAINED ALONG BARGE PATH
C     READ NUMBER OF PROFILES, NUMBER OF POINTS (UP TO 8) IN EACH
C     PROFILE, TIME INCREMENT BETWEEN PROFILES, DEPTHS AND DENSITIES
C
         READ (5,405) NPROF, NROA, DTROA
  405    FORMAT(2I5, E10.0)
         DO 410 N=1,NPROF
            READ (5,45) (YROA(I,N),I=1,NROA)
            READ (5,45) (RHOA(I,N),I=1,NROA)
  410    CONTINUE
         READ (5,510) IFORM
  510    FORMAT (16I5)
         IF(IFORM .EQ. 4) READ (5,45) DU1,DU2,UU1,UU2,DW1,DW2,WW1,WW2
         GO TO (430,440,450,460), IFORM
  430    WRITE (6,435)
  435    FORMAT(///10X,68HSINGLE VELOCITY PLANE USED WITH VELOCITIES CONS
     +   TANT IN THE VERTICAL )
         GO TO 480
  440    WRITE (6,445)
  445    FORMAT(///10X,53HSINGLE VELOCITY PLANE USED WITH LOGARITHMIC VEL
     +   OCITY/10X,65HDISTRIBUTION SUCH THAT VERTICAL AVERAGE EQUALS SPE
     +   CIFIED VELOCITY)
         GO TO 480
  450    WRITE (6,455)
  455    FORMAT (///10X,92HTWO VELOCITY PLANES USED WITH STRAIGHT LINE IN
     +   TERPOLATION (SEE FIGURE FOR INTERPRETATION))
         GO TO 480
  460    WRITE (6,465) DU1, DU2, UU1,UU2,DW1,DW2,WW1,WW2
  465    FORMAT(///10X, 73HTWO VELOCITY PROFILES SPECIFIED IN X AND Z DIR
     +   ECTIONS FOR --QUICK LOOKS--/10X, 63HDEPTH ASSUMED CONSTANT AND V
     +   ELOCITIES CONSIDERED STEADY IN TIME/10X,
     +   37HVELOCITY PROFILE PARAMETERS FOLLOW... /10X,6HDU1 =,G11.3,
     +   1X,6HDU2 =,G11.3,1X,6HUU1 =,G11.3,1X,6HUU2 =,G11.3/10X,
     +   6HDW1 =,G11.3,1X,6HDW2 =,G11.3,1X,6HWW1 =,G11.3,1X,6HWW2 =,G11.3)
  480    CONTINUE
C
C     INITIALIZE SMALL CLOUD ARRAY
C
         DO 550 K=1,NSP1
  550    NTCLD(K) = 0
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE AMBC(ETJ, DEPTH,NMAX, MMAX)
C
C     ROUTINE TO DETERMINE APPROPRIATE DEPTH AT LATEST BARGE LOCATION
C     ALSO DENSITY STRUCTURE AT LATEST BARGE LOCATION FOR JET MODEL
C
         DIMENSION DEPTH(NMAX,MMAX)
         COMMON/AMB/ NROA,IY,Y(8), ROA(8),H
         COMMON/BAY/ DX,DTL, XBARGE, ZBARGE, DXH, DXR, AREA
         COMMON/BPOS/ XBO, ZBO
         COMMON/PROFIL/ NPROF, DTROA, YROA(8,50), RHOA(8,50)
C
C     INTERPOLATE FOR DEPTH AT DISCHARGE LOCATION
C
         CALL DINT(XBO,ZBO,H, DEPTH, NMAX, MMAX)
         WRITE (6,25) H
   25    FORMAT(//10X,25HINTERPOLATED DEPTH, H =,G12.4)
C
C     DETERMINE NEW DENSITY PROFILE
C
         ID=ETJ/(25.*DTL)+.0001
         IP=(ETJ-FLOAT(ID)*25.*DTL)/DTROA + 1
         IF(IP .LT. 1) IP=1
         IF(IP .GT. NPROF) IP=NPROF
         DO 50 J=1,NROA
            Y(J)=YROA(J,IP)
   50    ROA(J)=RHOA(J,IP)
C
C     CHECK CONSISTENCY OF LAST DENSITY PROFILE DEPTH WITH WATER DEPTH
C
         IF(H .GT. Y(NROA)) Y(NROA)=H
C
C     WRITE DENSITY PROFILE
C
         WRITE (6,65)
   65    FORMAT(////29X,29H---AMBIENT DENSITY PROFILE---)
         WRITE (6,85) (Y(J),J=1,NROA)
   85    FORMAT(//10X,10HDEPTH (FT),3X,8G12.4)
         WRITE (6,95) (ROA(J),J=1,NROA)
   95    FORMAT(/5X,15HDENSITY (GM/CC),3X,8G12.4)
         WRITE (6,105)
  105    FORMAT(/10X,10(8H--------))
C
C     CONVERT AMBIENT DENSITY FROM UNITS OF GM/CC TO SLUGS/CUFT
C
         DO 150 J=1,NROA
  150    ROA(J) = ROA(J)*1.94
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE JET(SS,U,W, DEPTH,NS)
C
C     TIME LIMITED CONTINUOUS DISCHARGE THROUGH A NOZZLE UNDER A
C     MOVING BARGE
C
         EXTERNAL DERIVJ
         DIMENSION SS(600,NS), U(1), W(1), DEPTH(1)
         COMMON/AMB/ NROA, IY,Y(8), ROA(8), H
         COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600),AA(600), FC(600),VF
         COMMON/JET1/DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET, ROI, ROO, VDOT
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/COMP1/E(22)
         COMMON/STCOEF/ ALPHA,ALPHAC,ALPHAO,ALPHA1,ALPHA2,ALPHA3,ALPHA4,
     1    F1,BETA,CDRAG,CFRIC,CD,CD1,CD2,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,
     2    GAMA
         COMMON/LTCOF/ ALAMDA, DIF,AKYO
         COMMON/GPI/ G,PI
         COMMON/SWITCH/ ITF
         COMMON/DSS/ DS
         COMMON/GP/IGCN,IGCL,IGLT,IPCN,IPCL,IPLT
         COMMON/FLEE/ ITD, TD(6), DC(6), TRACER,CINIT,CBACK
         COMMON/COLL/ AO,IBED, FBED
         COMMON/INITE/ SAVE(22),CF
         COMMON/PIECES/ PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         DIMENSION ACONC(12)
         LOGICAL FIRST
         DATA FIRST/.TRUE./
         NTRIAL=0
         IBED=0
         ILEAVE=999
         DINCR=DINCR1
         NE = 8+NS
         IF (FIRST) THETA2(1) = THETA2(1)*PI/180.
         FIRST = .FALSE.
C
C     INITIAL POSITION W/R TO BARGE COORDINATES AT START OF LONG TERM
C     TIME STEP
C
         E(1)=0.
         E(2)=DJET
         E(3)=0.
C
C     ....INITIAL ANGLE....
C
         DUM = SIN(THETA2(1))*COS(SAI)
         IF(ABS(DUM) .LT. 1.E-06) DUM=0.
         IF(ABS(DUM) .GE. 1.0) DUM = ABS(DUM)/DUM
         THETA1 = ACOS(DUM)
         DUM = SIN(THETA2(1))*SIN(SAI)
         IF(ABS(DUM) .LT. 1.E-06) DUM=0.
         IF(ABS(DUM) .GE. 1.0) DUM = ABS(DUM)/DUM
         THETA3 = ACOS(DUM)
C
C     ....INITIAL MASS FLUX....
C
         E(4)=ROI*VDOT
C
C     ....INITIAL MOMENTUM FLUX....
C
         CU(1)=VDOT/(PI*BC(1)**2)
         E4U = E(4)*CU(1)
         E(5) = E4U*COS(THETA1)
         IF(ABS(E(5)) .LT. 1.E-06) E(5)=0.
         E(6)=E4U*COS(THETA2(1))
         E(7)=E4U*COS(THETA3)
         IF(ABS(E(7)) .LT. 1.E-06) E(7)=0.
C
C     ....INITIAL BUOYANCY....
C
         E(8)=(ROA(1)-ROI)*VDOT
C
C     ....COMPUTE INITIAL FLUID CONCENTRATION AND SOLIDS CONCENTRATIONS....
C
         CF=1.
         DO 180 K=1,NS
            E(K+8)=VDOT*CS(K)
  180    CF = CF-CS(K)
         CREF=CF
         DO 190 I=1,NE
  190    SAVE(I)=E(I)
         WRITE (6,295)
  295    FORMAT(//// 10X,27HCOMPUTATIONAL INDICATORS.../5X,
     +    'NTRIAL',3X,'DINCR',4X,'IPLUNG',2X,'NUTRL',2X,'ISTEP')
C
C     ....HERE TO BEGIN A SOLUTION TRIAL....
C
  400    DS = DINCR*BC(1)
         DSAVE = 20.*DS
         NTRIAL = NTRIAL+1
         T(1)=0.
         S(1)=0.
         IY=1
         ISTEP=1
         IPLUNG=0
         NUTRL=0
         DO 410 I=1,NE
  410    E(I)=SAVE(I)
C
C     ...HERE TO BEGIN COMPUTATIONAL LOOP.....
C     STORE RESULTS FROM PREVIOUS COMPUTATION IN APPROPRIATE ARRAYS
C
  420    CX(ISTEP)=E(1)
         CY(ISTEP)=E(2)
         CZ(ISTEP)=E(3)
         CU(ISTEP)=SQRT(E(5)**2+E(6)**2+E(7)**2)/E(4)
         BC(ISTEP)=SQRT((E(4)+E(8))/(ROA(1)*CU(ISTEP)*PI))
         AA(ISTEP)=BC(ISTEP)
         FLUX = CU(ISTEP)*PI*BC(ISTEP)**2
         ROO = E(4)/FLUX
         DUM = E(6)/(E(4)*CU(ISTEP))
         IF (ABS(DUM) .GE. 1.0) DUM=ABS(DUM)/DUM
         THETA2(ISTEP) = ACOS(DUM)
         DUM=E(5)/(E(4)*CU(ISTEP))
         IF(ABS(DUM) .GE. 1.0) DUM=ABS(DUM)/DUM
         DL(ISTEP)=DS*SIN(THETA2(ISTEP))
         DO 430 K=1,NS
  430    SS(ISTEP,K)=E(K+8)/FLUX
         FC(ISTEP)=CF*BC(1)**2*CU(1)/(BC(ISTEP)**2*CU(ISTEP))
         VN=BC(1)**2*CU(1)
         VL=BC(ISTEP)**2*CU(ISTEP)
         CTRACE = (CINIT*VN+(VL-VN)*CBACK)/VL
         DR=CTRACE/CINIT
         IF(DR .GT. DC(ITD)) GO TO 460
         TD(ITD)=T(ISTEP)
         ITD=ITD+1
  460    CONTINUE
         ROAA = ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         DENDIF(ISTEP) = (ROO-ROAA)*.51545
         IF((CY(ISTEP)+.85*BC(ISTEP)*SIN(THETA2(ISTEP))) .GE. H) IPLUNG=1
         IF(ISTEP .EQ. 1) GO TO 440
         IF((CY(ISTEP)+DS*COS(THETA2(ISTEP))) .GE. H) IPLUNG=1
         IF(ABS(THETA2(ISTEP)).LT.PI/6. .AND. CY(ISTEP)+.75*BC(ISTEP)
     +    .GE. H) IPLUNG=1
C
C     ....TESTS FOR LOOP EXIT....
C
         IF(CY(ISTEP) .LE. CY(ISTEP-1)) NUTRL=1
         IF (NUTRL .EQ. 1) GO TO 500
         IF (IPLUNG .EQ. 1) GO TO 500
         IF(ISTEP .GE. 600) GO TO 500
  440    CALL RUNGS(DERIVJ,NE,E,U,W,DEPTH)
         DS = DS*1.1
         IF(DS .GT. DSAVE) DS=DSAVE
         IF (CY(ISTEP) .GT. (.9*H)) DS=DS/1.1
         DT=DS/CU(ISTEP)
         ISTEP = ISTEP+1
         T(ISTEP)=T(ISTEP-1)+DT
         S(ISTEP)=S(ISTEP-1)+DS
         GO TO 420
C
C     ....END OF LOOP IN TIME....
C     PRINT OUT VARIABLES GUIDING JUST COMPLETED SOLUTION TRIAL
C
  500    WRITE (6,505) NTRIAL, DINCR, IPLUNG, NUTRL,ISTEP
  505    FORMAT(5X,I4,G12.4,I6,I7,I8)
C
C     ITF SAVES LAST TIME STEP OF DESCENT PHASE
C
         ITF = ISTEP
         IF(NTRIAL .EQ. 5) GO TO 520
         IF((ISTEP.LT.100) .OR. (ISTEP.GT.190)) GO TO 510
         GO TO 520
  510    DINCR = DINCR*FLOAT(ISTEP)/140.
C
C     RETURN FOR ANOTHER TRIAL
C
         GO TO 400
C
C     ....HERE FOR PRINTED AND/OR GRAPHICAL OUTPUT
C
  520    WRITE (6,515)
  515    FORMAT (1H1,10X,17HJET CONVECTION...//)
         IF(IPCN .EQ. 0) GO TO 600
C
C     ....HERE FOR PRINTOUT....
C
         NGRID = ISTEP/60
         IF(NGRID .LT. 1) NGRID=1
         WRITE (6,525)
  525    FORMAT (13X,1HT,8X,1HS,8X,1HX,8X,1HY,8X,1HZ,8X,1HU,3X,6HRADIUS,
     +    4X,7HDEN-DIF,2X,12HFLUID CONC.,13HFLUX OF SOLID,2X,
     +    13HCONCENTRATION)
         DO 560 J=1,ISTEP,NGRID
            DO 530 K=1,NS
  530       ACONC(K)=PI*BC(J)**2*SS(J,K)*CU(J)
            WRITE (6,535) T(J),S(J),CX(J),CY(J),CZ(J),CU(J),BC(J),DENDIF(J)
     1      , FC(J), ACONC(1),SS(J,1)
  535       FORMAT (8X,5F9.2,2F8.3,4E12.4)
            IF(NS .EQ. 1) GO TO 560
            DO 540 K=2,NS
  540       WRITE (6,545) ACONC(K), SS(J,K)
  545       FORMAT(93X,2E12.4)
  560    CONTINUE
C
C     ....HERE FOR GRAPHING....
C
  600    IF(IGCN .EQ. 0) GO TO 700
         ISTEP1 = ISTEP+1
         T(ISTEP1)=2.*T(ISTEP)-T(ISTEP-1)
         CX(ISTEP1)=2.*CX(ISTEP)-CX(ISTEP-1)
         CZ(ISTEP1)=2.*CZ(ISTEP)-CZ(ISTEP-1)
         CY(ISTEP1)=0.
         BC(ISTEP1)=0.
         FC(ISTEP1)=0.
         S(ISTEP1)=0.
         CALL DRAW(T,T,T,T,CX,CY,CZ,FC,ISTEP1,2,3)
         CALL DRAW(T,T,T,T,S,BC,FC,CZ,ISTEP1,1,3)
         IF(IGCN .EQ. 1) GO TO 700
         DO 610 I=1,NS
  610    SS(ISTEP1,I)=0.
         NG=4
         IF (NS .LT. 4) NG=NS
         CALL DRAW(T,T,T,T,SS(1,1),SS(1,2),SS(1,3),SS(1,4),ISTEP1,3,NG)
         IF(NS .LE. 4) GO TO 700
         NG=4
         IF (NS .LT. 8) NG=NS-4
         CALL DRAW(T,T,T,T,SS(1,5),SS(1,6),SS(1,7),SS(1,8),ISTEP1,4,NG)
         IF(NS .LE. 8) GO TO 700
         NG=4
         IF(NS .LT. 12) NG=NS-8
         CALL DRAW(T,T,T,T,SS(1,9),SS(1,10),SS(1,11),SS(1,12),ISTEP1,6,NG)
  700    CONTINUE
         DO 720 K=1,NS
            KK=NS-K+1
  720    E(KK+10)=E(KK+8)
         V2 = CU(ISTEP)*COS(THETA2(ISTEP))
         E(9) = AA(ISTEP)
C
C     FLUID CONCENTRATION AT THE END OF JET
C
         VF=CF*BC(1)**2*CU(1)/(BC(ISTEP)**2*CU(ISTEP))
         A0=BC(ISTEP)
         IF(IPLUNG .EQ. 1) GO TO 750
         E(10)=0.
         RETURN
  750    E(10)=.25*ROO*PI*BC(ISTEP)**2*V2
         IBED=ISTEP
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE DERIVJ(E,U,W,DEPTH)
C
C     ....CALLED FROM JET VIA RUNGS....
C
         DIMENSION E(22), U(1), W(1), DEPTH(1)
         COMMON /A/ EP(22)
         COMMON/AMB/ NROA,IY,Y(8), ROA(8), H
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600),AA(600),FC(600),VF
         COMMON/JET1/DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET,ROI,ROO,VDOT
         COMMON/GPI/ G,PI
         COMMON/STCOEF/ ALPHA,ALPHAC,ALPHAO,ALPHA1,ALPHA2,ALPHA3,ALPHA4,
     1    F1,BETA,CDRAG,CFRIC,CD,CD1,CD2,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,
     2    GAMA
         COMMON/BPOS/ XBO,ZBO
         COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         COMMON/DPASS/ NPASS, MPASS
         COMMON/DIMEN/NS,NSP1,NVL
         IF(E(2) .GE. 0.) GO TO 888
         WRITE (6,999)
  999    FORMAT(47H Y LT 0)
         CALL EXIT
  888    CONTINUE
C
C     CHANGE INPUT DATA TO ENSURE DESCENT
C
  100    IF(E(2) .LE. Y(IY+1)) GO TO 101
         IY=IY+1
         GO TO 100
  101    IF(E(2)-Y(IY))102,200,200
  102    IY=IY-1
         GO TO 100
  200    ROAA = ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         UU=SQRT(E(5)**2+E(6)**2+E(7)**2)/E(4)
         BB=SQRT((E(4)+E(8))/(ROA(1)*UU*PI))
         FLUX = PI*BB**2*UU
         ROO = E(4)/FLUX
         DENO = E(4)*UU
         DCOS1 = E(5)/DENO
         DCOS2 = E(6)/DENO
         DCOS3 = E(7)/DENO
         IF (KEY2 .EQ. 1) GO TO 110
C
C     DETERMINE VELOCITIES ACTING ON CLOUD W/R TO BARGE
C
         CALL VEL(XBO,0.,ZBO,UAS,WAS,U,W,DEPTH,NPASS,MPASS)
         XX = XBO+(UAS+UBX)*T(ISTEP)+CX(ISTEP)
         ZZ = ZBO+(WAS+WBZ)*T(ISTEP)+CZ(ISTEP)
         CALL VEL(XX,0.,ZZ,UAS,WAS,U,W,DEPTH,NPASS,MPASS)
         CALL VEL(XX,E(2),ZZ,UAD,WAD,U,W,DEPTH,NPASS,MPASS)
         UA = UAD-UAS-UBX
         WA = WAD-WAS-WBZ
         GO TO 120
C
C     FIXED DISCHARGE
C
  110    XX = XBO+CX(ISTEP)
         ZZ = ZBO+CZ(ISTEP)
         CALL VEL(XX,E(2),ZZ,UA,WA,U,W,DEPTH,NPASS,MPASS)
  120    DEN1 = SQRT(UA**2+WA**2)
         IF (DEN1 .LT. 1.E-08) GO TO 130
         COSD1 = UA/DEN1
         COSD3 = WA/DEN1
         COSGAM = COSD1*DCOS1+COSD3*DCOS3
         AGAMA = ACOS(COSGAM)
         SINGAM = SIN(AGAMA)
         FD = CD*ROAA*(UA**2+WA**2)*SINGAM**2*BB
         FDX=(COSD1-COSGAM*DCOS1)*FD/SINGAM
         FDY=-COSGAM*DCOS2*FD/SINGAM
         FDZ=(COSD3-COSGAM*DCOS3)*FD/SINGAM
         GO TO 140
C
C     ...HERE FOR BARGE AND AMBIENT VELOCITY ZERO...
C
  130    FDX=0.
         FDY=0.
         FDZ=0.
         SINGAM=1.
         COSGAM=0.
  140    IF(ABS(DCOS2) .GE. 1.0) DCOS2 = ABS(DCOS2)/DCOS2
         TETA2 = ACOS(DCOS2)
         ENTR = 2.*PI*BB*(ALPHA1*(UU-DEN1*COSGAM)
     1    + ALPHA2*DEN1*SINGAM*ABS(SIN(TETA2)))
C
C     MAIN COMPUTATIONS
C
         EP(1) = DCOS1
         EP(2) = DCOS2
         EP(3) = DCOS3
         EP(4) = ENTR*ROAA
         EP(5) = ENTR*ROAA*UA+FDX
         EP(6) = G*(ROO-ROAA)*PI*BB**2+FDY
         EP(7) = ENTR*ROAA*WA+FDZ
         EP(8) = ENTR*(ROA(1)-ROAA)
         DO 150 K=1,NS
            ABSWS = ABS(VFALL(K))
            IF(ABSWS-ABS(UU*DCOS2)) 151,151,152
  151       BETAA=1.
            GO TO 153
  152       BETAA = BETA
  153       SETL = 2.*BB*ABSWS*(1.-BETAA)*E(K+8)*SIN(TETA2)/FLUX
            EP(4)=EP(4)-SETL*ROAS(K)
            RUU = ROAS(K)*UU
            EP(5)=EP(5)-SETL*RUU*DCOS1
            EP(6)=EP(6)-SETL*RUU*DCOS2
            EP(7)=EP(7)-SETL*RUU*DCOS3
            EP(8)=EP(8)-SETL*(ROA(1)-ROAS(K))
            EP(K+8)=-SETL
  150    CONTINUE
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE COLAPS(SS,U,W,DEPTH,NS)
C
C     JET MODEL
C
         EXTERNAL DERIVC
         DIMENSION SS(600,NS), U(1), W(1), DEPTH(1)
         COMMON /A/ EP(22)
         COMMON/AMB/ NROA,IY,Y(8),ROA(8),H
         COMMON/CLOUD/ T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600),AA(600),FC(600),VF
         COMMON/JET1/DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET,ROI,ROO,VDOT
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/CENTRN/ NOTRN
         COMMON/COLL/AO,IBED,FBED
         COMMON/COMP1/E(22)
         COMMON/GPI/ G,PI
         COMMON/STCOEF/ ALPHA,ALPHAC,ALPHAO,ALPHA1,ALPHA2,ALPHA3,ALPHA4,
     1    F1,BETA,CDRAG,CFRIC,CD,CD1,CD2,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,
     2    GAMA
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
         COMMON/DSS/ DS
         COMMON/DLFAC/ DLF
         COMMON/GP/IGCN,IGCL,IGLT,IPCN,IPCL,IPLT
         COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         DIMENSION SAVE(22),ACONC(12)
         FV = VF
         NTRIAL=0
         DINCR=DINCR2
         ISAV = ISTEP
         V5=V2
         DLF=1.005
         WRITE (6,25)
   25    FORMAT(1H1,///10X,27HCOLLAPSE PHASE OF THE PLUME ///10X,
     +    27HCOMPUTATIONAL INDICATORS.../5X,'NTRIAL',3X,'DINCR',4X,
     +    'IPLUNG',2X,'NUTRL',2X,'ISTEP',2X,'IBED',3X,'ILEAVE')
         NE = 10+NS
         UOLD = CU(ISTEP)*SIN(THETA2(ISTEP))*DL(ISTEP)/DS
         DO 50 K=4,8
   50    E(K)=E(K)/CU(ISTEP)
         DO 60 K=10,NE
   60    E(K)=E(K)/CU(ISTEP)
         DO 100 K=1,NE
  100    SAVE(K)=E(K)
C
C     ....HERE TO BEGIN A TRIAL....
C
  400    DO 410 K=1,NE
  410    E(K)=SAVE(K)
         NTRIAL = NTRIAL+1
         ISTEP = ISAV
         DS = DINCR*BC(ISAV)
         IF(ISTEP .EQ. IBED) DS=DINCR*DL(ISTEP)
         UUU = UOLD
         V2 = V5
         DO 413 K=4,8
  413    E(K)=E(K)*DS
         DO 414 K=10,NE
  414    E(K)=E(K)*DS
         DLDT = 0.
         DL(ISTEP)=DS
         VF=FV*PI*BC(ISTEP)**2*DS
C
C     NOTRN INDICATE ENTRAINMENT EITHER BY CONVECTION OR BY COLLAPSE
C
         NOTRN = 0
         NUTRL = 0
         IPLUNG= 0
         IF(ISTEP .EQ. IBED) IPLUNG=1
         IF(IPLUNG .EQ. 1) GO TO 520
         IF(ISTEP .EQ. ISAV) GO TO 460
C
C     ....HERE TO BEGIN MAIN COMPUTATIONAL LOOP....
C
  420    CX(ISTEP)=E(1)
         CY(ISTEP)=E(2)
         CZ(ISTEP)=E(3)
         CMMASS = 1./(CM*E(4))
         V1=E(5)*CMMASS
         V3=E(7)*CMMASS
         UU = SQRT(V1**2+V3**2)
         DL(ISTEP)=UU*DL(ISTEP-1)/UUU
         IF(ABS((UU-UUU)/DL(ISTEP-1)) .LT. .01) DL(ISTEP)=DLF*DL(ISTEP-1)
         DLDT = UU-UUU
         UOLD = UUU
         VOLUME = (E(4)+E(8))/ROA(1)
         ROO = E(4)/VOLUME
         AREA = VOLUME/DL(ISTEP)
         BC(ISTEP)=E(9)
         AA(ISTEP)=AREA/(PI*E(9))
         V2 = E(6)*CMMASS*AA(ISTEP)/BC(ISTEP)
         CU(ISTEP)=SQRT(V1**2+V2**2+V3**2)
         THETA2(ISTEP)= .5*PI
         DS=CU(ISTEP)*DL(ISTEP)/UU
         AKX = 2.29*ALAMDA*E(9)**.333333
         DBDT = (BC(ISTEP)-BC(ISTEP-1))*UUU/DL(ISTEP-1)
         IF (AKX .GE. DBDT) NUTRL=3
         ROAA=ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         DENDIF(ISTEP)=(ROO-ROAA)*.51545
         DO 430 K=1,NS
  430    SS(ISTEP,K)=E(K+10)/VOLUME
         FC(ISTEP)=VF/VOLUME
         CTRACE = (CINIT*VF+(VOLUME-VF)*CBACK)/VOLUME
         DR = CTRACE/CINIT
         IF(DR .GT. DC(ITD)) GO TO 432
         TD(ITD)=T(ISTEP)
         ITD=ITD+1
  432    CONTINUE
         IF(IPLUNG .EQ. 4) GO TO 440
         IF((CY(ISTEP)+AA(ISTEP)*.85) .GE. H) IPLUNG=2
  440    IF(NUTRL .EQ. 3) GO TO 550
         IF (IPLUNG .EQ. 2) GO TO 500
         IF(ISTEP .GE. 599) GO TO 550
  460    CALL RUNGS(DERIVC,NE,E,U,W,DEPTH)
         DT=DS/CU(ISTEP)
         ISTEP = ISTEP+1
         T(ISTEP)=T(ISTEP-1)+DT
         S(ISTEP)=S(ISTEP-1)+DS
         GO TO 420
C
C     ....END OF TIME LOOP....
C
  500    DBDT = E(10)*3./(AA(ISTEP)*BC(ISTEP)*ROO*DL(ISTEP))
         E(10) = ROO*AA(ISTEP)*BC(ISTEP)*(DBDT+.375*PI*BC(ISTEP)*V2
     +   /AA(ISTEP))/1.5*DL(ISTEP)
         IAFD = ISTEP
  520    CALL BOTTOM(SS,U,W,DEPTH,NS,NEXT)
         GO TO (550,540,550), NEXT
  530    E(6) = CM*E(4)*V2
         E(2)=CY(ISTEP)
         ROO=E(4)*ROA(1)/(E(4)+E(8))
         DBDT=E(10)*1.5/(AA(ISTEP)*BC(ISTEP)*ROO*DL(ISTEP))
         E(10)=ROO*AA(ISTEP)*BC(ISTEP)*DBDT/3.*DL(ISTEP)
         UUU = CU(ISTEP)*SIN(THETA2(ISTEP))*DL(ISTEP)/DS
         ILEAVE = ISTEP
C
C     SWITCH BACK TO COLLAPSE
C
         NOTRN=1
         GO TO 460
  540    ISTEP=ISTEP-1
  550    WRITE (6,555) NTRIAL,DINCR,IPLUNG,NUTRL,ISTEP,IBED,ILEAVE
  555    FORMAT (5X,I4,G12.4,I6,4I7)
         IF(NTRIAL .EQ. 5) GO TO 570
         IF(AA(ISAV+1) .GT. 2.*BC(ISAV+1)) GO TO 562
         IDIF = ISTEP-ISAV
         IF((IDIF.LT.100) .OR. (IDIF.GT.400)) GO TO 560
         GO TO 570
  560    IF((IPLUNG.NE.1 .OR. IPLUNG.EQ.4) .AND. IDIF.LT.30)
     +    IDIF=ISTEP
         COR = FLOAT(IDIF)/200.
         IF (COR .LT. .1) COR=.1
         DINCR=DINCR*COR
         GO TO 400
  562    DINCR=DINCR*1.80*BC(ISAV+1)/AA(ISAV+1)
         IF(ISTEP .GT. 450) DLF=DLF+.005
         GO TO 400
C
C     ....HERE FOR PRINTOUT....
C
  570    IF (IPCL .EQ. 0) GO TO 600
         WRITE (6,565)
  565    FORMAT(///)
         WRITE(6,575)
  575    FORMAT (18X,1HT,7X,1HS,7X,1HX,7X,1HY,7X,1HZ,7X,1HU,7X,1HA,7X,
     +    1HB,5X,7HDEN-DIF,2X,11HFLUID CONC.,13H SOLID VOL,2X,
     +    13HCONCENTRATION)
         NGRID = (ISTEP-ISAV)/60
         IF(NGRID .LE. 0) NGRID=1
         DO 599 J=ISAV+1,ISTEP,NGRID
            DO 580 K=1,NS
  580       ACONC(K)=PI*BC(J)*AA(J)*SS(J,K)*DL(J)
            WRITE (6,585) T(J),S(J),CX(J),CY(J),CZ(J),CU(J),AA(J),BC(J),
     +       DENDIF(J),FC(J),ACONC(1),SS(J,1)
  585       FORMAT(10X,3F9.2,5F8.2,4E12.4)
            IF(NS .EQ. 1) GO TO 599
            DO 590 K=2,NS
  590       WRITE (6,595) ACONC(K), SS(J,K)
  595       FORMAT (101X,2E12.4)
  599    CONTINUE
  600    IF(IGCL .EQ. 0) GO TO 700
         ISTEP1 = ISTEP+1
         CZ(ISTEP1)=2.*CZ(ISTEP)-CZ(ISTEP-1)
         CX(ISTEP1)=2.*CX(ISTEP)-CX(ISTEP-1)
         T(ISTEP1)=2.*T(ISTEP)-T(ISTEP-1)
         AA(ISTEP1)=0.
         CY(ISTEP1)=0.
         BC(ISTEP1)=0.
         S(ISTEP1)=0.
         FC(ISTEP1)=0.
         CALL DRAW(T,T,T,T,CX,CY,CZ,FC,ISTEP1,2,3)
         CALL DRAW(T,T,T,T,S,BC,AA,FC,ISTEP1,3,4)
  700    RETURN
      END
C
C=======================================================================
C
      SUBROUTINE DERIVC(E,U,W,DEPTH)
C
C     JET MODEL
C     ...CALLED FROM COLAPS VIA RUNGS...
C
         DIMENSION E(22), U(1), W(1), DEPTH(1)
         COMMON /A/ EP(22)
         COMMON/AMB/ NROA,IY,Y(8), ROA(8), H
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/CENTRN/ NOTRN
         COMMON/GPI/ G,PI
         COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600),AA(600),FC(600),VF
         COMMON/JET1/DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET,ROI,ROO,VDOT
         COMMON/STCOEF/ ALPHA,ALPHAC,ALPHAO,ALPHA1,ALPHA2,ALPHA3,ALPHA4,
     1    F1,BETA,CDRAG,CFRIC,CD,CD1,CD2,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,
     2    GAMA
         COMMON/COLL/AO,IBED,FBED
         COMMON/BPOS/ XBO,ZBO
         COMMON/DIMEN/NS,NSP1,NVL
         COMMON/DPASS/ NPASS,MPASS
         COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         IF(E(2) .GT. H) E(2) = H
         IF(E(2) .GE. 0.) GO TO 100
         WRITE (6,999)
  999    FORMAT(47H Y LT 0)
         CALL EXIT
C     CHANGE INPUT DATA TO ENSURE DESCENT
  100    IF(E(2) .LE. Y(IY+1)) GO TO 101
         IY=IY+1
         GO TO 100
  101    IF(E(2)-Y(IY))102,200,200
  102    IY=IY-1
         GO TO 100
  200    ROAA = ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         CE = (ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         IF(KEY2 .EQ. 1) GO TO 110
C
C     DETERMINE VELOCITIES ACTING ON CLOUD W/R TO BARGE
C
         CALL VEL(XBO,0.,ZBO,UAS,WAS,U,W,DEPTH,NPASS,MPASS)
         XX = XBO+(UAS+UBX)*T(ISTEP)+CX(ISTEP)
         ZZ = ZBO+(WAS+WBZ)*T(ISTEP)+CZ(ISTEP)
         CALL VEL(XX,0.,ZZ,UAS,WAS,U,W,DEPTH,NPASS,MPASS)
         CALL VEL(XX,E(2),ZZ,UAD,WAD,U,W,DEPTH,NPASS,MPASS)
         UA = UAD-UAS-UBX
         WA = WAD-WAS-WBZ
         GO TO 120
C
C     FIXED DISCHARGE
C
  110    XX = XBO+CX(ISTEP)
         ZZ = ZBO+CZ(ISTEP)
         CALL VEL(XX,E(2),ZZ,UA,WA,U,W,DEPTH,NPASS,MPASS)
  120    VOLUME=(E(4)+E(8))/ROA(1)
         ROO = E(4)/VOLUME
         AREA = VOLUME/DL(ISTEP)
         BB = E(9)
         A1 = AREA/(PI*BB)
         CMMASS = 1./(CM*E(4))
         V1=E(5)*CMMASS
         V2=E(6)*CMMASS*A1/BB
         V3=E(7)*CMMASS
         UU=SQRT(V1**2+V2**2+V3**2)
         PHI = SQRT((V1-UA)**2+V2**2+(V3-WA)**2)
         IF(ROO .GE. ROAA) NOTRN=1
         SF = PI*SQRT(2.*(A1**2+BB**2))
         EP(9)=E(10)*3./(ROO*A1*BB*DL(ISTEP))
         UUU = 1./SQRT(V1**2+V3**2)
         PX = V3*UUU
         PZ = -V1*UUU
         DRAG1=.5*CD3*ROAA*PHI
         DRAG2=.5*CD4*ROAA*PHI
         DRAGL=.5*CFRIC*ROAA*PHI**2*SF*DL(ISTEP)
C
C     ENTR = ENTRAINED VOLUME
C
         IF(NOTRN .NE. 1) GO TO 10
         ENTR = ALPHA3*SF*PHI*DL(ISTEP)
         GO TO 30
   10    ENTR = ALPHA4*SF*EP(9)*DL(ISTEP)
   30    CONTINUE
C
C     MAIN COMPUTATIONS
C
         EP(1)=V1
         EP(2)=V2
         EP(3)=V3
         EP(4)=ENTR*ROAA
         EP(5)=ENTR*ROAA*UA-DRAG1*A1*PX*(V1-UA)*2.*DL(ISTEP)-DRAGL*V1/UU
         EP(6)=G*(ROO-ROAA)*PI*BB*A1*DL(ISTEP)-DRAG2*BB*V2**2*DL(ISTEP)
     1    -DRAGL*V2/UU
         EP(7)=ENTR*ROAA*WA-DRAG1*A1*PZ*(V3-WA)*2.*DL(ISTEP)-DRAGL*V3/UU
         EP(8)=ENTR*(ROA(1)-ROAA)
C
C     CONTRIBUTION TO TIP VELOCITY BY STRETCHING OF ELEMENT
C
         EP(9)=EP(9)-BB*DLDT/DL(ISTEP)
         EP(10)= .1666667*CE*(1.-GAMA*AO/A1)*A1**3*G*DL(ISTEP)
     1    -CDRAG*.5*ROAA*A1*EP(9)*ABS(EP(9))*DL(ISTEP)
     2    -CFRIC*BB*EP(9)*DL(ISTEP)/A1
         DV = ENTR*ROAA
         DO 150 K=1,NS
            ABSWS = ABS(VFALL(K))
            IF(ABSWS-ABS(V2))151,151,152
C     IF FALL VEL. IS SMALLER THAN THE CONVECTIVE VEL. NO SETTLING OCCURS
  151       BETAA=1.
            GO TO 153
  152       BETAA = BETA
  153       SETL = 2.*BB*ABSWS*DL(ISTEP)*(1.-BETAA)*E(K+10)/VOLUME
            EP(4)=EP(4)-SETL*ROAS(K)
            EP(5)=EP(5)-SETL*ROAS(K)*V1
            EP(6)=EP(6)-SETL*ROAS(K)*V2
            EP(7)=EP(7)-SETL*ROAS(K)*V3
            EP(8)=EP(8)-SETL*(ROA(1)-ROAS(K))
            EP(K+10)=-SETL
            DV = DV-SETL*ROAS(K)
  150    CONTINUE
         EP(9)=EP(9)+DV/(PI*A1*ROO*DL(ISTEP))
C
C     DIVIDE TIME DERIVATIVES BY VELOCITY BECAUSE OF INTEGRATION ON DS
C     INSTEAD OF DT
C
         NE=10+NS
         DO 160 K=1,NE
  160    EP(K)=EP(K)/UU
         EP(9)=EP(9)*SQRT(UU/PHI)
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE BOTTOM(SS,U,W,DEPTH,NS,NEXT)
C
C     JET MODEL
C
         EXTERNAL DERIVB
         DIMENSION SS(600,NS), U(1), W(1), DEPTH(1)
         COMMON/AMB/ NROA,IY,Y(8),ROA(8),H
         COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600),AA(600),FC(600),VF
         COMMON/JET1/DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET,ROI,ROO,VDOT
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/GPI/ G,PI
         COMMON/STCOEF/ ALPHA,ALPHAC,ALPHAO,ALPHA1,ALPHA2,ALPHA3,ALPHA4,
     1    F1,BETA,CDRAG,CFRIC,CD,CD1,CD2,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,
     2    GAMA
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         COMMON/COMP1/ E(22)
         COMMON/COLL/AO,IBED,FBED
         COMMON/DSS/ DS
         COMMON/DLFAC/ DLF
         COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
         NE=10+NS
  100    IF(ISTEP .NE. IBED) GO TO 120
         FBED=0.
         UUU = CU(ISTEP)*SIN(THETA2(ISTEP))*DL(ISTEP)/DS
         GO TO 170
  120    CX(ISTEP)=E(1)
         CZ(ISTEP)=E(3)
         CMMASS = 1./(CM*E(4))
         V1=E(5)*CMMASS
         V3=E(7)*CMMASS
         UU= SQRT(V1**2+V3**2)
         DL(ISTEP)=UU*DL(ISTEP-1)/UUU
         IF(ABS((UU-UUU)/DL(ISTEP-1)) .LT. .01) DL(ISTEP)=DLF*DL(ISTEP-1)
         DLDT = UU-UUU
         UOLD = UUU
         VOLUME = (E(4)+E(8))/ROA(1)
         ROO = E(4)/VOLUME
         BC(ISTEP)=E(9)
         AREA = VOLUME/DL(ISTEP)
         AA(ISTEP) = 2.*AREA/(PI*E(9))
C
C     VERTICAL CENTROID VELOCITY DUE TO COLLAPSE
C
         V2 = E(10)*4./(PI*BC(ISTEP)**2*ROO*DL(ISTEP))
         CU(ISTEP)=SQRT(V1**2+V2**2+V3**2)
         CY(ISTEP)=H-1.333333*AA(ISTEP)/PI
         THETA2(ISTEP)=.5*PI
         DS = CU(ISTEP)*DL(ISTEP)/UU
         UUU=UU
         ROAA=ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         DENDIF(ISTEP)=(ROO-ROAA)*.51545
         FBED=0.
         DO 160 K=1,NS
            SS(ISTEP,K)=E(K+10)/VOLUME
            IF(ABS(VFALL(K)) .GT. ABS(V2)) GO TO 140
            BETAA = 1.
            GO TO 150
  140       BETAA = BETA
  150       FBED = FBED-2.*BC(ISTEP)*ABS(VFALL(K))*ROAS(K)*SS(ISTEP,K)
     +       *(1.-BETAA)*V4*DL(ISTEP)
  160    CONTINUE
         FC(ISTEP)=VF/VOLUME
         CTRACE = (CINIT*VF+(VOLUME-VF)*CBACK)/VOLUME
         DR = CTRACE/CINIT
         IF (DR .GT. DC(ITD)) GO TO 432
         TD(ITD)=T(ISTEP)
         ITD=ITD+1
  432    CONTINUE
         FBED = FBED+.5*PI*AA(ISTEP)*BC(ISTEP)*(ROO-ROAA)*G*DL(ISTEP)
     +    -CM*(E(4)*V2-E(6)*V4)*CU(ISTEP)/DL(ISTEP)
         AKX = 2.29*ALAMDA*E(9)**.333333
         DBDT=(BC(ISTEP)-BC(ISTEP-1))*CU(ISTEP)/DL(ISTEP)
         IF(AKX .GE. DBDT) NUTRL=3
C
C     STORE OLD MASS IN E(6)
C
  170    E(6)=E(4)
         V4=V2
         IF(FBED .LT. 0.) IPLUNG=4
         IF(NUTRL .NE. 3) GO TO 210
         NEXT=3
         RETURN
  210    IF(IPLUNG .NE. 4) GO TO 230
         ILEAVE=ISTEP
         NEXT=1
         RETURN
  230    IF(ISTEP .LT. 599) GO TO 250
         NEXT=2
         RETURN
  250    CALL RUNGS(DERIVB,NE,E,U,W,DEPTH)
         DT=DS/CU(ISTEP)
         ISTEP=ISTEP+1
         T(ISTEP)=T(ISTEP-1)+DT
         S(ISTEP)=S(ISTEP-1)+DS
         GO TO 100
      END
C
C=======================================================================
C
      SUBROUTINE DERIVB(E,U,W,DEPTH)
C
C     JET MODEL
C     ....CALLED FROM BOTTOM VIA RUNGS....
C
         DIMENSION E(22), U(1), W(1), DEPTH(1)
         COMMON /A/ EP(22)
         COMMON/AMB/ NROA,IY,Y(8), ROA(8), H
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/GPI/ G,PI
         COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600),AA(600),FC(600),VF
         COMMON/JET1/DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET,ROI,ROO,VDOT
         COMMON/STCOEF/ ALPHA,ALPHAC,ALPHAO,ALPHA1,ALPHA2,ALPHA3,ALPHA4,
     1    F1,BETA,CDRAG,CFRIC,CD,CD1,CD2,CD3,CD4,CM,DINCR1,DINCR2,FRICTN,
     2    GAMA
         COMMON/COLL/AO,IBED,FBED
         COMMON/DSS/ DS
         COMMON/BPOS/ XBO,ZBO
         COMMON/DIMEN/NS,NSP1,NVL
         COMMON/DPASS/ NPASS,MPASS
         COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         IF(E(2) .GE. 0.) GO TO 888
         WRITE (6,999)
  999    FORMAT(47H Y LT 0)
         CALL EXIT
  888    CONTINUE
C
C     CHANGE INPUT DATA TO ENSURE DESCENT
C
  100    IF(E(2) .LE. Y(IY+1)) GO TO 101
         IY=IY+1
         GO TO 100
  101    IF(E(2)-Y(IY))102,200,200
  102    IY=IY-1
         GO TO 100
  200    ROAA=ROA(IY)+(E(2)-Y(IY))*(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         CE=(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         IF(KEY2 .EQ. 1) GO TO 110
C
C     DETERMINE VELOCITIES ACTING ON CLOUD W/R TO BARGE
C
         CALL VEL(XBO,0.,ZBO,UAS,WAS,U,W,DEPTH,NPASS,MPASS)
         XX=XBO+(UAS+UBX)*T(ISTEP)+CX(ISTEP)
         ZZ=ZBO+(WAS+WBZ)*T(ISTEP)+CZ(ISTEP)
         CALL VEL(XX,0.,ZZ,UAS,WAS,U,W,DEPTH,NPASS,MPASS)
         CALL VEL(XX,E(2),ZZ,UAD,WAD,U,W,DEPTH,NPASS,MPASS)
         UA = UAD-UAS-UBX
         WA = WAD-WAS-WBZ
         GO TO 120
C
C     FIXED DISCHARGE
C
  110    XX=XBO+CX(ISTEP)
         ZZ=ZBO+CZ(ISTEP)
         CALL VEL(XX,E(2),ZZ,UA,WA,U,W,DEPTH,NPASS,MPASS)
  120    CONTINUE
         VOLUME = (E(4)+E(8))/ROA(1)
         ROO = E(4)/VOLUME
         AREA = VOLUME/DL(ISTEP)
         BB = E(9)
         IF(ISTEP .EQ. IBED) BB=E(9)+1.5*PI*E(10)*DS/
     +    (ROO*VOLUME*CU(ISTEP))
         A1=2.*AREA/(PI*BB)
         SF = PI*SQRT(2.*(A1**2+BB**2))
C
C     CONTRIBUTION TO TIP VELOCITY BY COLLAPSE
C
         EP(9)=E(10)*3./(ROO*A1*BB*DL(ISTEP))
         CMMASS=1./(CM*E(4))
         V1=E(5)*CMMASS
C
C     VERTICAL CENTROID VELOCITY DUE TO COLLAPSE
C
         V2=4.*A1*EP(9)/(3.*PI*BB)
         V3=E(7)*CMMASS
         UU = SQRT(V1**2+V2**2+V3**2)
         PHI = SQRT((V1-UA)**2+V2**2+(V3-WA)**2)
         UUU=1./SQRT(V1**2+V3**2)
         PX = V3*UUU
         PZ = -V1*UUU
         DRAG1=.5*CD3*ROAA*PHI
         DRAGL=.5*CFRIC*ROAA*PHI**2*SF*DL(ISTEP)
         U1=V1+UBX
         U3=V3+WBZ
         PH=SQRT(U1**2+U3**2)
C
C     ENTR = ENTRAINMENT IN VOLUME
C
         ENTR = .5*SF*DL(ISTEP)*ALPHA4*EP(9)
C
C     MAIN COMPUTATIONS
C
         EP(1)=V1
         EP(2)=0.
         EP(3)=V3
         EP(4)=ENTR*ROAA
         EP(5)=ENTR*ROAA*UA-DRAG1*A1*PX*(V1-UA)*DL(ISTEP)-DRAGL*PZ
     +    +FRICTN*FBED*U1/PH
         EP(6)=0.
         EP(7)=ENTR*ROAA*WA-DRAG1*A1*PZ*(V3-WA)*DL(ISTEP)-DRAGL*PX
     +    +FRICTN*FBED*U3/PH
         EP(8)=ENTR*(ROA(1)-ROAA)
C
C     CONTRIBUTION TO TIP VELOCITY BY STRETCHING OF ELEMENT L
C
         EP(9)=EP(9)-BB*DLDT/DL(ISTEP)
         EP(10)= .1666667*CE*(1.-GAMA*AO/A1)*A1**3*G*DL(ISTEP)
     +    -CDRAG*.5*ROAA*A1*EP(9)*ABS(EP(9))*DL(ISTEP)
     +    -CFRIC*BB*EP(9)*DL(ISTEP)/A1
     +    -F1*FRICTN*FBED
         DV = ENTR*ROAA
         DO 150 K=1,NS
            ABSWS = ABS(VFALL(K))
C     IF FALL VEL. IS SMALLER THAN THE CONVECTIVE VEL, NO SETTLING OCCURS
            IF(ABSWS-ABS(V2))151,151,152
  151       BETAA=1.
            GO TO 153
  152       BETAA = BETA
  153       SETL = 2.*BB*ABSWS*DL(ISTEP)*(1.-BETAA)*E(K+10)/VOLUME
            EP(4)=EP(4)-SETL*ROAS(K)
            EP(5)=EP(5)-SETL*ROAS(K)*V1
            EP(7)=EP(7)-SETL*ROAS(K)*V3
            EP(8)=EP(8)-SETL*(ROA(1)-ROAS(K))
            EP(K+10)=-SETL
            DV = DV-SETL*ROAS(K)
  150    CONTINUE
C
C     CONTRIBUTION TO TIP VELOCITY BY ENTRAINMENT
C
         EP(9)=EP(9)+DV/(PI*A1*ROO*DL(ISTEP))*2.
C
C     DIVIDE TIME DERIVATIVES BY VELOCITY BECAUSE OF INTEGRATION ON DS
C     INSTEAD OF DT
C
         NE = 10+NS
         DO 160 K=1,NE
  160    EP(K)=EP(K)/UU
         EP(9)=EP(9)*SQRT(UU/PHI)
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE UW(ET,TSJ,U,W,NMAX,MMAX)
C
C     ROUTINE TO READ A SET OF VELOCITIES FROM TAPE. THESE VELOCITIES ARE
C     CONSTANT FOR ONE TIME STEP, DTL.
C
         DIMENSION U(NMAX,MMAX,1), W(NMAX,MMAX,1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/VSPECS/ IFORM,DU1,DU2,UU1,UU2,DW1,DW2,WW1,WW2,DL1,DL2
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/DIMEN/NS,NSP1,NVL
         INTEGER SKIP
         IF (IFORM .EQ. 4) RETURN
         ICYCLE = ET/90000.+1.
         SKIP=1
         TTAPE = ET-FLOAT(ICYCLE-1)*90000.
         IF(NVL .GT. 1) GO TO 200
C
C     HERE FOR SINGLE LAYER
C
   50    READ (7) TUW
         IF(TUW+.01 .LT. 90000.) GO TO 70
         REWIND 7
         GO TO 50
   70    CONTINUE
         IF(ABS(TUW-TTAPE) .LT. .01) SKIP=0
         READ (7) ((U(N,M,1), N=1,NMAX),M=1,MMAX),
     1    ((W(N,M,1), N=1,NMAX),M=1,MMAX)
         IF(SKIP .EQ. 1) GO TO 50
         RETURN
C
C     HERE FOR MULTI-LAYER VELOCITIES
C
  200    CONTINUE
  250    READ (7) TUW
         IF(TUW+.01 .LT. 90000.) GO TO 270
         REWIND 7
         GO TO 250
  270    CONTINUE
         IF(ABS(TUW-TTAPE) .LT. .01) SKIP=0
         READ (7) DL1,DL2
         DO 280 L=1,NVL
            READ (7) ((U(N,M,L), N=1,NMAX),M=1,MMAX),
     1       ((W(N,M,L), N=1,NMAX),M=1,MMAX)
  280    CONTINUE
         IF(SKIP .EQ. 1) GO TO 250
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE VEL(XA,YA,ZA,UA,WA,U,W,DEPTH,NMAX,MMAX)
C
C     SUBROUTINE TO SUPPLY HORIZONTAL VELOCITY DATA GIVEN X,Y,Z, BY
C     INTERPOLATING FROM A VELOCITY DISTRIBUTION FOR A GIVEN TIME
C
         DIMENSION U(NMAX,MMAX,1),W(NMAX,MMAX,1),DEPTH(NMAX,MMAX)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/VSPECS/ IFORM,DU1,DU2,UU1,UU2,DW1,DW2,WW1,WW2,DL1,DL2
         COMMON/DIMEN/NS,NSP1,NVL
         DIMENSION UI(4),WI(4)
         XX=XA
         ZZ=ZA
         IF(IFORM .EQ. 4) GO TO 500
C
C     DETERMINE HORIZONTAL COORDINATES OF 4 POINTS SURROUNDING (XX,ZZ) AND
C     WEIGHT FACTORS FOR INTERPOLATION
C
   30    ZN=ZZ*DXR
         XM=XX*DXR
         N=ZN+.0001
         M=XM+.0001
         FN=ZN-FLOAT(N)
         EM=XM-FLOAT(M)
         IF(FN .LT. .0001) FN=0.
         IF(EM .LT. .0001) EM=0.
C
C     IF MORE THAN ONE LAYER, BRANCH
C
         IF(IFORM .EQ. 3) GO TO 300
C
C     HERE TO INTERPOLATE FOR VELOCITIES IN SINGLE LAYER
C
         UA1 = U(N,M,1)+FN*(U(N+1,M,1)-U(N,M,1))
         WA1 = W(N,M,1)+FN*(W(N+1,M,1)-W(N,M,1))
         UA2 = U(N,M+1,1)+FN*(U(N+1,M+1,1)-U(N,M+1,1))
         WA2 = W(N,M+1,1)+FN*(W(N+1,M+1,1)-W(N,M+1,1))
         UA = UA1+EM*(UA2-UA1)
         WA = WA1+EM*(WA2-WA1)
C
C     IF USING LOG PROFILE CORRECT VELOCITIES AS APPROPRIATE...IF NOT, RETURN
C
         IF(IFORM .EQ. 1) GO TO 100
         CALL DINT(XX,ZZ,DD,DEPTH,NMAX,MMAX)
         COR=0.
         IF(YA/DD .GT. .99) GO TO 50
         COR = 1.+ .476*(1.+ALOG((DD-YA)/DD))/DD**.666666
   50    CONTINUE
         UA = UA*COR
         WA = WA*COR
  100    RETURN
C
C     HERE FOR MULTI-LAYER VELOCITIES
C
  300    CONTINUE
         DO 380 I=1,4
            NI=N
            MI=M
            IF(I.EQ.2 .OR. I.EQ.3) NI=NI+1
            IF(I.EQ.3 .OR. I.EQ.4) MI=MI+1
            IF(DEPTH(NI,MI) .LE. 0.) GO TO 360
            DD1=DL1*DEPTH(NI,MI)
            DD2=DL2*DEPTH(NI,MI)
            IF(YA .GT. DD1) GO TO 320
            UI(I)=U(NI,MI,1)
            WI(I)=W(NI,MI,1)
            GO TO 380
  320       IF(YA .GT. DD2) GO TO 340
            FRAC = (YA-DD1)/(DD2-DD1)
            UI(I)=U(NI,MI,1)+FRAC*(U(NI,MI,2)-U(NI,MI,1))
            WI(I)=W(NI,MI,1)+FRAC*(W(NI,MI,2)-W(NI,MI,1))
            GO TO 380
  340       FRAC = (YA-DD2)/(DEPTH(NI,MI)-DD2)
            UI(I)=U(NI,MI,2)+FRAC*(0.-U(NI,MI,2))
            WI(I)=W(NI,MI,2)+FRAC*(0.-W(NI,MI,2))
            GO TO 380
  360       UI(I)=0.
            WI(I)=0.
  380    CONTINUE
         UA1 = UI(1)+FN*(UI(2)-UI(1))
         WA1 = WI(1)+FN*(WI(2)-WI(1))
         UA2 = UI(3)+FN*(UI(4)-UI(3))
         WA2 = WI(3)+FN*(WI(4)-WI(3))
         UA = UA1+EM*(UA2-UA1)
         WA = WA1+EM*(WA2-WA1)
         RETURN
C
C     ...HERE TO INTERPRET--QUICK LOOK-- VELOCITY PROFILES....
C
  500    CONTINUE
         IF(YA .LE. DU1) GO TO 510
         IF(YA .GE. DU2) GO TO 520
         UA = UU1+(UU2-UU1)*(YA-DU1)/(DU2-DU1)
         GO TO 550
  510    UA = UU1
         GO TO 550
  520    CALL DINT(XX,ZZ,DD,DEPTH,NMAX,MMAX)
         UA = UU2+(0.-UU2)*(YA-DU2)/(DD-DU2)
  550    CONTINUE
         IF(YA .LE. DW1) GO TO 560
         IF(YA .GE. DW2) GO TO 570
         WA = WW1+(WW2-WW1)*(YA-DW1)/(DW2-DW1)
         GO TO 600
  560    WA = WW1
         GO TO 600
  570    CALL DINT(XX,ZZ,DD,DEPTH,NMAX,MMAX)
         WA = WW2+(0.-WW2)*(YA-DW2)/(DD-DW2)
  600    RETURN
      END
C
C=======================================================================
C
      SUBROUTINE RUNGS(DERIV,NE,E,U,W,DEPTH)
         DIMENSION E(22), U(1), W(1), DEPTH(1)
         COMMON /A/ EP(22)
         COMMON/DSS/ DS
         COMMON/COMP1/E
         DIMENSION W1(22),W2(22),W3(22),W4(22),Z(22)
         CALL DERIV(E,U,W,DEPTH)
         DO 2 I=1,NE
            W1(I)=DS*EP(I)
    2    Z(I)=E(I)+W1(I)*0.5
         CALL DERIV(Z,U,W,DEPTH)
         DO 3 I=1,NE
            W2(I)=DS*EP(I)
    3    Z(I)=E(I)+W2(I)*0.5
         CALL DERIV(Z,U,W,DEPTH)
         DO 4 I=1,NE
            W3(I)=DS*EP(I)
    4    Z(I)=E(I)+W3(I)
         CALL DERIV(Z,U,W,DEPTH)
         DO 7 I=1,NE
            W4(I)=DS*EP(I)
    7    E(I)=E(I)+(2.*(W2(I)+W3(I))+W1(I)+W4(I))/6.
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE DRAW(X1,X2,X3,X4,Y1,Y2,Y3,Y4,N,IG,NCURV)
C
C     GRAPHING ROUTINE FOR JET MODEL
C     X1,X2,X3,X4--INDEPENDENT VARIABLES
C     Y1,Y2,Y3,Y4--DEPENDENT VARIABLES
C     N-NUMBER OF POINTS AVAILABLE FOR PLOTTING
C
         DIMENSION X1(1),X2(1),X3(1),X4(1),Y1(1),Y2(1),Y3(1),Y4(1),X(800),
     *    Y(800),YY(800),SYM(4),SIM(20),P(2400)
         DATA SIM/1HY,1HB,1HC,1HS,1HA,1H1,1H2,1H3,1H4,1H5,1H6,1H7,1H8,1HT,
     *    1HX,1HZ,1H ,1H+,1H.,1H0/
         IF (NCURV.LT.1) RETURN
         NX=50
         NY=101
         NSCALE=60
         IN=N/NSCALE
         IF(IN.LT.1) IN=1
C
C     PLACE VARIABLES IN PLOT ARRAYS
C
         J=0
         DO 1 I=1,N,IN
            J=J+1
            X(J)=X1(I)
    1    Y(J)=Y1(I)
         J=J+1
         X(J)=X1(N)
         Y(J)=Y1(N)
         NN=J
         IF (NCURV.EQ.1) GO TO 5
         DO 2 I=1,N,IN
            J=J+1
            X(J)=X2(I)
    2    Y(J)=Y2(I)
         J=J+1
         X(J)=X2(N)
         Y(J)=Y2(N)
         IF (NCURV.EQ.2) GO TO 5
         DO 3 I=1,N,IN
            J=J+1
            X(J)=X3(I)
    3    Y(J)=Y3(I)
         J=J+1
         X(J)=X3(N)
         Y(J)=Y3(N)
         IF (NCURV.EQ.3) GO TO 5
         DO 4 I=1,N,IN
            J=J+1
            X(J)=X4(I)
    4    Y(J)=Y4(I)
         J=J+1
         X(J)=X4(N)
         Y(J)=Y4(N)
    5    CONTINUE
         GO TO (10,20,30,40,50,60),IG
   10    CONTINUE
C
C     SET SYMBOLS FOR EACH CURVE TO BE PLOTTED
C
         SYM(1)=SIM(4)
         SYM(2)=SIM(2)
         SYM(3)=SIM(3)
C
C     NORMALIZE EACH DEPENDENT VARIABLE ARRAY AND PLACE INTO YY ARRAY
C
         CALL NORM(Y,YY,NN,1.0,0.0,AMXS,AMNS)
         NN1=NN+1
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.0,AMXB,AMNB)
         NN1=NN1+NN
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.0,AMXC,AMNC)
         WRITE (6,15) X(1),X(NN),AMXS,AMXB,AMXC,AMNS,AMNB,AMNC
   15    FORMAT(1H1/////10X,56HPLOT OF JET CHARACTERISTICS AS SEEN FROM MA
     +   RKER PARTICLE/10X,48HIN JET AS FUNCTION OF TIME ELAPSED SINCE RE
     +   LEASE///10X,
     +    45HINDEPENDENT VARIABLE IS TIME (SEC) OVER RANGE,2G13.5///10X,
     +    61HDEPENDENT VARIABLES, ALL NORMALIZED FOR PLOTTING ON UNIT AXI
     +   S,//10X,6HSYMBOL,13X,1HS,17X,1HB,15X,1HC//10X,11HMAX PLOTTED,3X,
     +    G12.5,2(6X,G12.5)/10X,11HMIN PLOTTED,3X,G12.5,2(6X,G12.5)/10X,
     +    7HREMARKS,8X,8HARC DIST,10X,6HRADIUS,12X,10HFLUID CONC)
         GO TO 100
   20    CONTINUE
         SYM(1)=SIM(15)
         SYM(2)=SIM(1)
         SYM(3)=SIM(16)
         CALL NORM(Y,YY,NN,1.0,0.0,AMXX,AMNX)
         NN1=NN+1
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.0,AMXY,AMNY)
         NN1=NN1+NN
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.0,AMXZ,AMNZ)
         WRITE (6,25) X(1),X(NN),AMXX,AMXY,AMXZ,AMNX,AMNY,AMNZ
   25    FORMAT(1H1/////10X,71HPLOT OF PATH TRACED BY MARKER PARTICLE IN J
     +   ET-PLUME AS SEEN BY OBSERVER/10X,64HON DISCHARGING VESSEL AS FUN
     +   CTION OF TIME ELAPSED SINCE RELEASE.///10X,
     +    45HINDEPENDENT VARIABLE IS TIME (SEC) OVER RANGE,2G13.5///10X,
     +    61HDEPENDENT VARIABLES, ALL NORMALIZED FOR PLOTTING ON UNIT AXI
     +   S,//10X,6HSYMBOL,13X,1HX,17X,1HY,15X,1HZ//10X,11HMAX PLOTTED,3X,
     +    G12.5,2(6X,G12.5)/10X,11HMIN PLOTTED,3X,G12.5,2(6X,G12.5)/10X,
     +    7HREMARKS,8X,13HHOR. DIST (CX),4X,9HDEPTH (CY),6X,13HHOR.DIST(CZ
     +   ))
         GO TO 100
   30    CONTINUE
         SYM(1)=SIM(4)
         SYM(2)=SIM(2)
         SYM(3)=SIM(5)
         SYM(4)=SIM(3)
         CALL NORM(Y,YY,NN,1.0,0.0,AMXS,AMNS)
         NN1=NN+1
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.0,AMXB,AMNB)
         NN1=NN1+NN
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.0,AMXA,AMNA)
         NN1=NN1+NN
         CALL NORM(Y(NN1),YY(NN1),NN,1.0,0.0,AMXC,AMNC)
         WRITE (6,35) X(1),X(NN),AMXS,AMXB,AMXA,AMXC,AMNS,AMNB,AMNA,AMNC
   35    FORMAT(1H1/////10X,87HPLOT OF JET-PLUME CHARACTERISTICS AS THEY V
     +   ARY FROM DISCHARGE TO END OF PLUME COLLAPSE./10X,81HPLOT SHOWS C
     +   HARACTERISTICS AS SEEN FROM MARKER PARTICLE IN JET-PLUME AS FUNC
     +   TION/10X,30HOF TIME ELAPSED SINCE RELEASE.///10X,
     +    45HINDEPENDENT VARIABLE IS TIME (SEC) OVER RANGE,2G13.5///10X,
     +    61HDEPENDENT VARIABLES, ALL NORMALIZED FOR PLOTTING ON UNIT AXI
     +   S,//10X,6HSYMBOL,13X,1HS,17X,1HB,15X,1HA,15X,1HC//10X,
     +    11HMAX PLOTTED,3X,G12.5,3(6X,G12.5)/10X,11HMIN PLOTTED,3X,G12.5,
     +    3(6X,G12.5)/10X,
     +    7HREMARKS,8X,8HARC DIST,9X,9HHOR. SIZE,9X,10HVERT.SIZE,7X,
     +    11HFLUID CONC)
         GO TO 100
   40    CONTINUE
         DO 41 I=1,4
   41    SYM(I)=SIM(I+5)
   42    CALL RANGE(Y,J,AMXS,AMNS,JMX,JMN)
         WRITE (6,45) X(1),X(NN),AMNS,AMXS
   45    FORMAT(1H1,/////,2X,31HGRAPH OF SOLIDS CONCENTRATIONS.//
     +    2X,12HRANGE OF X =,2G20.8,/,2X,32HRANGE OF CONCENTRATIONS PLOTTE
     +   D =,2G20.8,8(/))
         GO TO 100
   50    CONTINUE
         DO 51 I=1,4
   51    SYM(I)=SIM(I+9)
         GO TO 42
   60    CONTINUE
         DO 61 I=1,4
   61    SYM(I)=SIM(I+16)
         GO TO 42
  100    WRITE(6,105)
  105    FORMAT(////10X,16HGRAPH FOLLOWS...)
         CALL SPLOT(YY,X,P,J,NY,NX,NN,NCURV,SYM)
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE SPLOT(B,A,P,N,L,M,NREP,NSYM,SYM)
C
C     PRINTER PLOT ROUTINE
C     NSYM--NUMBER OF GRAPHS PLOTTED ON THIS FRAME
C     M--NUMBER OF SPACES DOWN THE PAGE
C     L--NUMBER OF SPACES ACROSS THE PAGE
C
         DIMENSION A(1),B(1),SYM(1),P(1),Q(20),H(10)
         DATA Q/20*5H-----/
         DATA BL5/5H     /
         DATA EYE/1HI/
C
C     SET GRAPH FIELD TO BLANKS
C
         LOLD=L
         L5=L/5
         L=5*L5
         LQ=L5-1
         ML=(M+1)*(L5+1)
         DO 10 J=1,ML
   10    P(J)=BL5
C
C     DETERMINE MAX AND MIN OF INDEPENDENT VARIABLE A AND DEPENDENT
C     VARIABLE B AND THE INCREMENT OF EACH CORRESPONDING TO ONE PRINTER
C     PRINT POSITION IN EACH DIRECTION
C
         CALL RANGE(A,N,AMX,AMN,JMX,JMN)
         CALL RANGE(B,N,BMX,BMN,JMX,JMN)
         DIV=5.
         IF(AMX .GT. 100.) DIV=10.
         IAMX=AMX/DIV
         AMX=DIV*IAMX+DIV
         DA=(AMX-AMN)/M
         DB=(BMX-BMN)/L
         WRITE(6,35)
   35    FORMAT(1H1)
C
C     DETERMINE AND PRINT TOP (DEPENDENT AXIS) LABEL AND LINE
C
         JZA=0
         ZRO=0.
         TESTA = AMX*AMN
         TESTB = BMX*BMN
         IF (TESTA) 50,60,60
   50    JZA=-AMN/DA
   60    IF (TESTB) 70,90,90
   70    IB=-BMN/DB
         LIA=-L5
         DO 80 J=1,M
            LIA=LIA+L5
   80    CALL PFIX(P,IB,LIA,EYE)
   90    L10=LOLD/20+1
         DB20=20.*DB
         DO 100 J=1,L10
  100    H(J)=BMN+(J-1)*DB20
         WRITE(6,105) (H(J),J=1,L10)
  105    FORMAT(13X,F4.1,5(16X,F4.1))
         WRITE (6,115) (Q(J),J=1,20)
  115    FORMAT(15X,1HI,20A5)
C
C     ENCODE PLOT POINTS
C
         DO 200 J=1,N
            IA=(A(J)-AMN)/DA
            LIA=L5*IA
            IB=(B(J)-BMN)/DB
            JZZ=(J-1)/NREP
            ISYM=JZZ-(JZZ/NSYM)*NSYM+1
            CALL PFIX(P,IB,LIA,SYM(ISYM))
  200    CONTINUE
C
C     PRINT GRAPH
C
         DO 300 J=1,M
            JQ=(J/10)*10
            JLO=J*L5-L5+1
            JHI=JLO+LQ
            IF(J.EQ.JZA) GO TO 260
            WRITE (6,255) (P(K),K=JLO,JHI)
  255       FORMAT(15X,1HI,20A5)
            GO TO 270
  260       WRITE (6,265) ZRO,(Q(K),K=1,20)
  265       FORMAT(1H+,G13.5,2X,20A5)
  270       IF(JQ.NE.J) GO TO 300
            DAJ = AMN+DA*(J)
            WRITE (6,265) DAJ,(Q(K),K=1,20)
  300    CONTINUE
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE NORM(A,B,N,C1,C2,AMX,AMN)
C
C     NORMALIZES ARRAY A WITH ARBITRARY MAX VALUE AMX, AND ARBITRARY
C     MIN VALUE AMN, INTO ARRAY B WITH MAX VALUE C1 AND MIN VALUE C2
C
         DIMENSION A(1),B(1)
         CALL RANGE(A,N,AMX,AMN,JMX,JMN)
         CC=C1-C2
         X=(AMX-AMN)/CC
         IF(X.EQ.0.) X=1.
         Y=(C1*AMN-C2*AMX)/CC
         Z=1./X
         DO 100 J=1,N
            B(J)=(A(J)-Y)*Z
  100    CONTINUE
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE RANGE(A,N,AMX,AMN,JMX,JMN)
C
C     GIVEN ARRAY A WITH N ELEMENTS, FIND MAX AND MIN VALUES AND
C     CORRESPONDING INDICES
C
         DIMENSION A(1)
         AMX=A(1)
         AMN=A(1)
         JMX=1
         JMN=1
         DO 100 J=2,N
            IF(A(J).LT.AMX) GO TO 50
            JMX=J
            AMX=A(J)
   50       CONTINUE
            IF(A(J).GT.AMN) GO TO 100
            JMN=J
            AMN=A(J)
  100    CONTINUE
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE PFIX(P,IB,LIA,SYM)
C
C     ROUTINE TO INSERT ALPHAMERIC CHARACTER INTO PROPER PRINT POSITION
C     IN ARRAY P
C
         DIMENSION BUF(5), P(1)
C NON-ANSI
         IB5=IB/5
         LIB=LIA+IB5+1
         DECODE(5,1000,P(LIB)) BUF
 1000    FORMAT (5A1)
         IRES=IB-5*IB5+1
         BUF(IRES)=SYM
         ENCODE(5,1000,P(LIB)) BUF
C NON-ANSI
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE BOOKS(ETJ,NSS,SS,NS,DEPTH,ACCUM,U,W,NMAX,MMAX)
C
C     JET MODEL
C     ROUTINE TO DO MASS BOOKKEEPING ON MATERIAL LEFT BY PLUME.
C     NEWLY COMPUTED PLUME AND REMAINS OF PREVIOUSLY COMPUTED PLUME ARE
C     ACCOUNTED FOR.
C     CLOUDS OF NEW MATERIAL ARE UPDATED TO END OF LONG TERM
C     TIME STEP.
C
         DIMENSION SS(600,NS),ACCUM(NMAX,MMAX,1),DEPTH(NMAX,MMAX),U(1),W(1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/AMB/ NROA,IY,Y(8),ROA(8),H
         COMMON/GUIDE1/TJET,TSTOP,ISTEP,IPLUNG,NUTRL,NTRIAL,ILEAVE,
     1    KEY1,KEY2,KEY3
         COMMON/SWITCH/ITF
         COMMON/BPOS/ XBO,ZBO
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         COMMON/COLL/AO,IBED,FBED
         COMMON/GPI/ G,PI
         COMMON/NUM/ NCT
         COMMON/CLOUD/T(600),CX(600),CY(600),CZ(600),CU(600),DENDIF(600)
     1   , BC(600),AA(600),FC(600),VF
         COMMON/JET1/DL(600),THETA2(600),S(600),UB,UBX,WBZ,SAI,V2,DLDT
     1   , DJET,ROI,ROO,VDOT
C
C     INITIAL STORAGE FOR NEWLY CREATED CLOUDS
C
         DIMENSION TC(200),KC(200),SC(200),THKC(200),TOPC(200),CMASS(200)
     1   , XC(200),ZC(200)
         EQUIVALENCE (TC(1),DL(1)),(KC(1),DL(201)),(SC(1),DL(401))
     1   , (THKC(1),THETA2(1)),(TOPC(1),THETA2(201)),(CMASS(1),THETA2(401))
     2   , (XC(1),S(1)),(ZC(1),S(201))
C TC=TIME OF CREATION W/R TO LONG TERM TIME STEP
C KC=COMPONENT IN THIS CLOUD
C THKC=THICKNESS OF CLOUD
C TOPC=DISTANCE OF CLOUD TOP BELOW SURFACE
C CMASS=MASS OF MATERIAL IN THIS CLOUD
C XC=X-POSITION OF CLOUD W/R TO ESTUARY
C ZC=Z-POSITION OF CLOUD W/R TO ESTUARY
         COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         COMMON/OLDJET/ ODTC,OCSIDE,ODBX,ODBZ,OCTOP,OT,OCTHK(13),OTBF(13)
         DIMENSION TBF(13)
         DATA NCOP/0/
         NC=0
         NCT=0
         NSP1=NS+1
C
C     CREATE CLOUDS FROM REMAINS OF PREVIOUS PLUME IF ANY
C     PREVIOUS PLUME LASTS IN DTL THE SAME TIME AS IT TOOK TO BE CREATED
C     IN THE PREVIOUS TIME STEP
C
         IF (NCOP .EQ. 0) GO TO 90
         DO 80 K=1,NSS
            NCT=NCOP
            XS=OT-FLOAT(NCOP)*(ODTC)
            IF(DTCF .NE. ODTC) XS=OT
            IF((XS/ODTC)-.5) 30,30,40
   30       SCL=SQRT(OCSIDE*(OCSIDE+XS*ABS(VDIF)))
            TML=VDOT*CS(K)*(ODTC+XS)
            GO TO 60
   40       SCL=SQRT(OCSIDE*XS*ABS(VDIF))
            TML=VDOT*CS(K)*XS
            NCT=NCT+1
   60       CONTINUE
            DO 80 L=1,NCT
               TC(L) = FLOAT(L)*ODTC
               IF(L .EQ. NCT) TC(L)=OT
               TT=T(ISTEP)+TJET-DTL
               IF (NCT .EQ. 1) TC(L) = AMIN1(T(ISTEP),TT)
               SC(L)=OCSIDE
               IF(L .EQ. NCT) SC(L)=SCL
               THKC(L)=OCTHK(K)
               TOPC(L)=OCTOP
               XC(L)=UBX*TC(L)+ODBX
               ZC(L)=WBZ*TC(L)+ODBZ
               CMASS(L)=VDOT*ODTC*CS(K)
               IF(L .EQ. NCT) CMASS(L)=TML
               KC(L)=K
   80    CONTINUE
   90    CONTINUE
         IF((ETJ-DTL) .GT. (TJET+.0001)) GO TO 410
C
C     FIND TIME STEP FOR EACH SOLID FRACTION WHEN IT BEGINS TO SETTLE
C     OUT OF PLUME
C
         DO 160 K=1,NS
C
C     VINIT=INITIAL SOLID VOLUME FLUX
C
            VINIT = VDOT*SS(1,K)
C
C     TBF=TIME TO BEGIN FALLOUT
C
            TBF(K)=T(ISTEP)
            DO 160 I=2,ISTEP
               IF (TBF(K) .NE. T(ISTEP)) GO TO 160
               IF(T(I)-T(ITF)) 100,100,110
C
C     IN CONVECTIVE DESCENT...
C
  100          VCHK = PI*BC(I)**2*SS(I,K)*CU(I)
               GO TO 150
C
C     IN DYNAMIC COLLAPSE...
C
  110          IF(IBED .NE. 0 .AND. I .GT. IBED) GO TO 130
C
C     IN WATER COLUMN
C
  120          VCHK = PI*BC(I)*AA(I)*SS(I,K)*CU(I)
               GO TO 150
  130          IF(ILEAVE .LT. 600 .AND. I .LT. ILEAVE) GO TO 140
               GO TO 120
C
C     ON BOTTOM...
C
  140          VCHK = .5*PI*BC(I)*AA(I)*SS(I,K)*CU(I)
  150          CONTINUE
               IF(ABS(VINIT-VCHK) .GT. 1.0E-6) TBF(K)=T(I)
  160    CONTINUE
         TBF(NSP1)=T(ISTEP)
C
C     CREATE MAIN STRING OF SMALL CLOUDS
C
         TMAX=DTL
         IF((T(ISTEP)+TJET).LE.(ETJ+.0001))TMAX=T(ISTEP)+TJET-(ETJ-DTL)
         DBX=XBO+CX(ISTEP)
         DBZ=ZBO+CZ(ISTEP)
         CALL VEL(DBX,0.,DBZ,UAS,WAS,U,W,DEPTH,NMAX,MMAX)
         CALL VEL(DBX,CY(ISTEP),DBZ,UAD,WAD,U,W,DEPTH,NMAX,MMAX)
         UA=UAS+UBX
         WA=WAS+WBZ
         IF (KEY2 .EQ. 0) GO TO 172
C
C     FIXED DISCHARGE
C
         UA = UAD
         WA = WAD
  172    CONTINUE
         VREL = SQRT(UA**2+WA**2)
         IF(IPLUNG .EQ. 1 .AND. ISTEP .LT. ILEAVE) VREL=UB
C DTC=TIME INTERVAL FOR NEW CLOUDS FROM END OF PLUME
         VDIF = CU(ISTEP)
         IF(VREL .NE. 0.) VDIF=VREL
         DTC = ABS(2.*BC(ISTEP)/VDIF)
         CSIDE = 2.*BC(ISTEP)
         CTOP = CY(ISTEP)-AA(ISTEP)
         IF(IBED.NE.0 .AND. ISTEP.GE.IBED .AND. ISTEP.LE.ILEAVE)
     1    CTOP = CY(ISTEP)-.575587*AA(ISTEP)
         IF(CTOP .GT. H) CTOP=H
         DTCF = DTC
         IF(DTC .GT. TMAX) DTC = TMAX-T(ISTEP)
         NC=(TMAX-T(ISTEP))/DTC
         XS=TMAX-T(ISTEP)-FLOAT(NC)*DTC
         DO 253 K=1,NSS
            IF((XS/DTC)-.5) 180,180,190
  180       SCL=SQRT(CSIDE*(CSIDE+XS*VDIF))
            TML=VDOT*CS(K)*(DTC+XS)
            GO TO 200
  190       SCL=SQRT(CSIDE*XS*VDIF)
            TML=VDOT*CS(K)*XS
            NC=NC+1
  200       CONTINUE
            CTHK = 2.*AA(ISTEP)+VFALL(K)*(T(ISTEP)-TBF(K))
            IF(IBED.NE.0 .AND. ISTEP.GE.IBED .AND. ISTEP.LE.ILEAVE)
     1       CTHK = AA(ISTEP)
            DO 250 J=1,NC
               L=J+NCT
               IF(L .GT. 200) GO TO 260
               TC(L) = T(ISTEP)+FLOAT(J)*DTC
               IF(L .EQ. (NC+NCT)) TC(L)=TMAX
               SC(L)=CSIDE
               IF(L .EQ. (NC+NCT)) SC(L)=SCL
               THKC(L)=CTHK
               TOPC(L)=CTOP
               IF(VREL .NE. 0.) GO TO 240
               UJ = CU(ISTEP)*SIN(THETA2(ISTEP))
               UA = UJ*(CX(ISTEP)-CX(ISTEP-1))/DL(ISTEP)
               WA = UJ*(CZ(ISTEP)-CZ(ISTEP-1))/DL(ISTEP)
  240          CONTINUE
               XC(L) = UA*TC(L)+DBX
               ZC(L) = WA*TC(L)+DBZ
               CMASS(L)=VDOT*DTC*CS(K)
               IF(L .EQ. (NC+NCT)) CMASS(L)=TML
               KC(L)=K
  250       CONTINUE
            NCT = NCT+NC
  253    CONTINUE
         GO TO 300
  260    WRITE (6,265)
  265    FORMAT(//5X,101HSUBROUTINE BOOKS ABOUT TO OVERRUN DIMENSIONS (20
     +   0) FOR SMALL CLOUDS CREATED DURING ONE DTL, CALL EXIT )
         CALL EXIT
C
C     SAVE INFO ON NEW PLUME FOR USE ON REMAINS IN NEXT DTL
C
  300    IF (TMAX .LT. DTL) GO TO 410
         ODTC=DTCF
         OCSIDE=CSIDE
         ODBX = DBX+UBX*DTL
         ODBZ = DBZ+WBZ*DTL
         OCTOP=CTOP
         OT = T(ISTEP)
         IF(T(ISTEP)+TJET.GT.ETJ .AND. TJET.LT.ETJ+.0001)
     1    OT=T(ISTEP)-(ETJ-TJET)
         NCOP=T(ISTEP)/DTC
         DO 400 K=1,NSS
            OCTHK(K)=2.*AA(ISTEP)+VFALL(K)*(T(ISTEP)-TBF(K))
            IF(IBED.NE.0 .AND. ISTEP.GE.IBED .AND. ISTEP.LE.ILEAVE)
     1       OCTHK(K)=AA(ISTEP)
C     IF ON BOTTOM DO DIFFERENT
            OTBF(K)=TBF(K)
  400    CONTINUE
  410    CONTINUE
C
C     AT THIS POINT, ALL NEW CLOUDS COMING OUT OF THE PLUME DURING
C     THIS LONG TERM TIME STEP ARE ACCOUNTED FOR
C     UPDATE ALL NEWLY CREATED CLOUDS TO THE END OF THIS DTL
C
         DO 550 L=1,NCT
            DELT = DTL-TC(L)
            IF (TOPC(L) .GE. H) GO TO 430
C
C     ...CONVECT...
C     DETERMINE HORIZONTAL VELOCITIES
C
            YY=TOPC(L)+.5*THKC(L)
            CALL VEL(XC(L),YY,ZC(L),UA,WA,U,W,DEPTH,NMAX,MMAX)
            CALL DINT(XC(L),ZC(L),D1,DEPTH,NMAX,MMAX)
            XC(L)=XC(L)+UA*DELT
            ZC(L)=ZC(L)+WA*DELT
C
C     CHECK FOR SMALL CLOUD PASSING OUT OF GRID BOUNDARY
C
            NCHK=ZC(L)*DXR
            MCHK=XC(L)*DXR
            IF (NCHK.LT.1..OR.NCHK.GT.NMAX.OR.MCHK.LT.1..OR.MCHK.GT.MMAX)
     1       WRITE(6,425)
  425       FORMAT(/5X,101H---WARNING---A SMALL CLOUD HAS PASSED OUT OF GRID
     1       BOUNDARY IN SUBROUTINE BOOKS... ERRORS WILL OCCUR---)
            CALL DINT(XC(L),ZC(L),D2,DEPTH,NMAX,MMAX)
C
C     DTOP ESTIMATES VARIATION OF CLOUD DEPTH DUE TO CONVECTION OVER
C     VARYING DEPTH
C
            DTOP=(D1-D2)*TOPC(L)/D1
C
C     ...DIFFUSE HORIZONTALLY...
C
            SC(L)=SC(L)*(1.+(1.333333*ALAMDA/SC(L)**.666666)*DELT)**1.5
C     VERT. CLOUD GROWTH MAY LATER BE ADDED HERE
C
C     ...SETTLE...
C
  430       KK=KC(L)
            IF(KK .EQ. NSP1) GO TO 500
            DIST = VFALL(KK)*DELT
            MX=XC(L)*DXR+.5
            NZ=ZC(L)*DXR+.5
  411       XS = DEPTH(NZ,MX)-TOPC(L)-THKC(L)-DTOP
            IF(XS .GE. DIST) GO TO 450
            IF(XS .GE. 0.) GO TO 412
            IF(TOPC(L) .GT. DEPTH(NZ,MX)) GO TO 460
            FALOUT = ABS(XS)/THKC(L)*CMASS(L)
            ACCUM(NZ,MX,KK) = ACCUM(NZ,MX,KK)+FALOUT
            CMASS(L)=CMASS(L)-FALOUT
            THKC(L)=THKC(L)-ABS(XS)
            GO TO 411
  412       IF (THKC(L) .LT. (DIST-XS)) GO TO 460
            FALOUT = (DIST-XS)/THKC(L)*CMASS(L)
            ACCUM(NZ,MX,KK) = ACCUM(NZ,MX,KK)+FALOUT
            CMASS(L) = CMASS(L)-FALOUT
            THKC(L) = THKC(L)-(DIST-XS)
  450       TOPC(L)=TOPC(L)+DIST
            GO TO 500
  460       ACCUM(NZ,MX,KK)=ACCUM(NZ,MX,KK)+CMASS(L)
C
C     ERASE THIS CLOUD
C
            CMASS(L)=0.
  500       CONTINUE
C
C     ...DIFFUSE VERTICALLY...
C
            OTOP=TOPC(L)
            MX=XC(L)*DXR+.5
            NZ=ZC(L)*DXR+.5
            CALL VDIFCO(NZ,MX,OTOP,DCO,U,W,DEPTH,NMAX,MMAX)
            DINK = 2.*SQRT(DCO*DELT)
            TOPC(L) = TOPC(L)-DINK
            IF (TOPC(L) .LT. 0.) TOPC(L)=0.
            OBOT = OTOP+THKC(L)
            CALL VDIFCO(NZ,MX,OBOT,DCO,U,W,DEPTH,NMAX,MMAX)
            DONK = 2.*SQRT(DCO*DELT)
            THKC(L)=THKC(L)+DINK+DONK
            IF ((OTOP+THKC(L)) .GT. D2) THKC(L)=D2-TOPC(L)
  550    CONTINUE
C
C     PRINT NEW CLOUDS
C
         WRITE (6,905)
  905    FORMAT(32H1 NEW CLOUDS CREATED IN BOOKS.../4X,'L',3X,'KC',3X,
     1    'CMASS',10X,'SC',9X,'THKC',9X,'TOPC',10X,'XC',11X,'ZC',11X,
     2    'TC')
         WRITE (6,915) (L,KC(L),CMASS(L),SC(L),THKC(L),TOPC(L),XC(L),
     1    ZC(L),TC(L), L=1,NCT)
  915    FORMAT(2I5,7G13.5)
C
C     THE UPDATED NEW CLOUDS WILL BE TRANSFERRED INTO NORMAL SMALL CLOUD
C     STORAGE AS THE LAST OPERATION OF SUBROUTINE MAD FOR THIS LONG TERM
C     TIME STEP.
C
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE MAD(ETJ,NSS,X,Z,U,W,C,THICK,TOP,DEPTH,ACCUM,CP,THICKP
     1, TOPP,COUT,ICODE,TSIDE,TTHK,TTOP,TMASS,TX,TZ,NMAX,MMAX,NSC)
C
C     ROUTINE TO COMPUTE MOVEMENT AND DIFFUSION--JET MODEL
C
         DIMENSION X(NMAX,MMAX),Z(NMAX,MMAX),C(NMAX,MMAX,1),THICK(NMAX,MMAX
     1   ,1),TOP(NMAX,MMAX,1),DEPTH(NMAX,MMAX),ACCUM(NMAX,MMAX,1),CP(NMAX,
     2   MMAX),THICKP(NMAX,MMAX),TOPP(NMAX,MMAX),COUT(NMAX,MMAX),
     3    ICODE(NMAX,MMAX),TMASS(NSC,1),TSIDE(NSC,1),TX(NSC,1),TZ(NSC,1),
     4    TTOP(NSC,1),TTHK(NSC,1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/GUIDE2/NIND,NLINE(150),MF(150),ML(150)
         COMMON/PIECES/PARAM(13),ROAS(13),CS(13),VFALL(13),VOIDS(13),BVOID
         COMMON/POINT/MST,NST
         COMMON/NUM/ NCT
         COMMON/LOST/ GONE
         COMMON/FLEE/ ITD,TD(6),DC(6),TRACER,CINIT,CBACK
         COMMON/COR/ CM,CMAX
         COMMON/P/ PRT
         LOGICAL PRT
         COMMON/DIMEN/NS,NSP1,NVL
         COMMON/NCSTOR/ NTCLD(13)
         EPSLN = 1.0E-06
C
C     MOVE AND DIFFUSE SMALL CLOUDS IF ANY
C
         NCHECK=0
         DO 10 K=1,NSS
   10    NCHECK = NCHECK+NTCLD(K)
         NCHECK = NCHECK+NCT
         IF (NCHECK.GT.0) CALL ACAD(NSS,C,THICK,TOP,ACCUM,DEPTH,U,W,NMAX
     1   ,MMAX,TSIDE,TTHK,TTOP,TMASS,TX,TZ,NSC,ETJ)
         DO 1000 K=1,NSS
            CHKM=0.
            DO 20 M=1,MMAX
               DO 20 N=1,NMAX
   20       CHKM = CHKM+C(N,M,K)*THICK(N,M,K)*AREA
            IF (CHKM .LT. 1.0E-08) GO TO 699
C
C     BEGIN COMPUTATIONS OVER LARGE GRID
C
            DO 100 N=1,NMAX
               DO 100 M=1,MMAX
                  Z(N,M) = FLOAT(N)*DX
  100       X(N,M) = FLOAT(M)*DX
C
C     MOVE LOCATIONS OF POINTS WHICH TERMINATE IN THE BAY
C
            DO 200 NUM=1,NIND
               NST = NLINE(NUM)
               MFST = MF(NUM)
               MLST = ML(NUM)
               DO 200 MST=MFST,MLST
                  IF(ICODE(NST,MST) .GT. 1) GO TO 200
C NST AND MST ARE INDEX OF GRID POINT X(NST,MST) AND Z(NST,MST)
C ARE COORDINATES OF LOCATION OF THIS PARTICLE AT START OF
C CONVECTIVE STEP
                  YY = TOP(NST,MST,K) + .5*THICK(NST,MST,K)
                  CALL TRNSPT(Z(NST,MST),X(NST,MST),YY,U,W,ICODE,NMAX,MMAX)
  200       CONTINUE
C
C     CLEAR ARRAYS
C
            DO 320 M=1,MMAX
               DO 320 N=1,NMAX
                  CP(N,M)=0.
                  THICKP(N,M)=0.
  320       TOPP(N,M)=0.
C
C     COMPUTE NEW CONCENTRATIONS FOR ALL POINTS IN BAY
C
            CM=0.
            DO 510 NUM=1,NIND
               NST = NLINE(NUM)
               MFST = MF(NUM)
               MLST = ML(NUM)
               DO 510 MST=MFST,MLST
                  ZN = Z(NST,MST)*DXR
                  XM = X(NST,MST)*DXR
                  N=ZN+.0001
                  M=XM+.0001
                  FN = ZN-FLOAT(N)
                  EM = XM-FLOAT(M)
                  IF(FN .LT. .0001) FN=0.
                  IF(EM .LT. .0001) EM=0.
                  FN1=1.-FN
                  EM1=1.-EM
                  ISUM=0
                  CALL AVESPT(N,M,C1,TH1,T1,ISUM,0,K,C,THICK,TOP,ICODE,NMAX,MMAX
     1            , DEPTH(N,M))
                  CALL AVESPT(N+1,M,C2,TH2,T2,ISUM,1,K,C,THICK,TOP,ICODE,NMAX,MMAX
     1            , DEPTH(N+1,M))
                  CALL AVESPT(N+1,M+1,C3,TH3,T3,ISUM,2,K,C,THICK,TOP,ICODE,NMAX,
     1             MMAX,DEPTH(N+1,M+1))
                  CALL AVESPT(N,M+1,C4,TH4,T4,ISUM,3,K,C,THICK,TOP,ICODE,NMAX,MMAX
     1            , DEPTH(N,M+1))
                  CP(NST,MST)=0.
                  THICKP(NST,MST)=0.
                  TOPP(NST,MST)=0.
                  TN = AMAX1(TH1,TH2,TH3,TH4)
                  IF(TN .EQ. 0.) GO TO 500
                  C1=C1*TH1/TN
                  C2=C2*TH2/TN
                  C3=C3*TH3/TN
                  C4=C4*TH4/TN
                  THICKP(NST,MST)=TN
                  GO TO(401,402,403,404,405,406,407,408,409,410,411,412,413,414,
     1             415),ISUM
  401             CP(NST,MST)=C1
                  TOPP(NST,MST)=T1
                  GO TO 500
  402             CP(NST,MST)=C2
                  TOPP(NST,MST)=T2
                  GO TO 500
  404             CP(NST,MST)=C3
                  TOPP(NST,MST)=T3
                  GO TO 500
  408             CP(NST,MST)=C4
                  TOPP(NST,MST)=T4
                  GO TO 500
  403             CP(NST,MST)=(C2-C1)*FN+C1
                  TOPP(NST,MST)=(T2-T1)*FN+T1
                  IF(T1 .LT. 0. .OR. T2 .LT. 0.) TOPP(NST,MST)=AMAX1(T1,T2)
                  GO TO 500
  412             CP(NST,MST)=(C3-C4)*FN+C4
                  TOPP(NST,MST)=(T3-T4)*FN+T4
                  IF(T3 .LT. 0. .OR. T4 .LT. 0.) TOPP(NST,MST)=AMAX1(T3,T4)
                  GO TO 500
  406             CP(NST,MST)=(C3-C2)*EM+C2
                  TOPP(NST,MST)=(T3-T2)*EM+T2
                  IF(T2 .LT. 0. .OR. T3 .LT. 0.) TOPP(NST,MST)=AMAX1(T2,T3)
                  GO TO 500
  409             CP(NST,MST)=(C4-C1)*EM+C1
                  TOPP(NST,MST)=(T4-T1)*EM+T1
                  IF(T1 .LT. 0. .OR. T4 .LT. 0.) TOPP(NST,MST)=AMAX1(T1,T4)
                  GO TO 500
  405             IF(FN*EM-.25) 401,421,404
  421             CP(NST,MST)=.5*(C1+C3)
                  TOPP(NST,MST)=.5*(T1+T3)
                  IF(T1 .LT. 0. .OR. T3 .LT. 0.) TOPP(NST,MST)=AMAX1(T1,T3)
                  GO TO 500
  410             IF(FN-EM) 401,422,402
  422             CP(NST,MST)=.5*(C2+C4)
                  TOPP(NST,MST)=.5*(T2+T4)
                  IF(T2 .LT. 0. .OR. T4 .LT. 0.) TOPP(NST,MST)=AMAX1(T2,T4)
                  GO TO 500
  407             AD=FN1+EM
                  IF(AD .EQ. 0.0) GO TO 402
                  CP(NST,MST)=(FN1*((C2-C1)*FN+C1)+EM*((C3-C2)*EM+C2))/AD
                  TOP1=(T2-T1)*FN+T1
                  IF(T1 .LT. 0. .OR. T2 .LT. 0.) TOP1=AMAX1(T1,T2)
                  TOP2=(T3-T2)*EM+T2
                  IF(T2 .LT. 0. .OR. T3 .LT. 0.) TOP2=AMAX1(T2,T3)
                  TOPP(NST,MST)=(FN1*TOP1+EM*TOP2)/AD
                  IF(TOP1 .LT. 0. .OR. TOP2 .LT. 0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
                  GO TO 500
  411             AD=FN+EM
                  IF(AD .EQ. 0.0) GO TO 401
                  CP(NST,MST)=(FN*((C2-C1)*FN+C1)+EM*((C4-C1)*EM+C1))/AD
                  TOP1=(T2-T1)*FN+T1
                  IF(T1 .LT. 0. .OR. T2 .LT. 0.) TOP1=AMAX1(T1,T2)
                  TOP2=(T4-T1)*EM+T1
                  IF(T1 .LT. 0. .OR. T4 .LT. 0.) TOP2=AMAX1(T1,T4)
                  TOPP(NST,MST)=(FN*TOP1+EM*TOP2)/AD
                  IF(TOP1 .LT. 0. .OR. TOP2 .LT. 0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
                  GO TO 500
  413             AD=FN+EM1
                  IF(AD .EQ. 0.0) GO TO 408
                  CP(NST,MST)=(FN*((C3-C4)*FN+C4)+EM1*((C4-C1)*EM+C1))/AD
                  TOP1=(T3-T4)*FN+T4
                  IF(T3 .LT. 0. .OR. T4 .LT. 0.) TOP1=AMAX1(T3,T4)
                  TOP2=(T4-T1)*EM+T1
                  IF(T1 .LT. 0. .OR. T4 .LT. 0.) TOP2=AMAX1(T1,T4)
                  TOPP(NST,MST)=(FN*TOP1+EM1*TOP2)/AD
                  IF(TOP1 .LT. 0. .OR. TOP2 .LT. 0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
                  GO TO 500
  414             AD=FN1+EM1
                  IF(AD .EQ. 0.0) GO TO 404
                  CP(NST,MST)=(FN1*((C3-C4)*FN+C4)+EM1*((C3-C2)*EM+C2))/AD
                  TOP1=(T3-T4)*FN+T4
                  IF(T3 .LT. 0. .OR. T4 .LT. 0.) TOP1=AMAX1(T3,T4)
                  TOP2=(T3-T2)*EM+T2
                  IF(T2 .LT. 0. .OR. T3 .LT. 0.) TOP2=AMAX1(T2,T3)
                  TOPP(NST,MST)=(FN1*TOP1+EM1*TOP2)/AD
                  IF(TOP1 .LT. 0. .OR. TOP2 .LT. 0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
                  GO TO 500
  415             CONE=(C2-C1)*FN+C1
                  CTWO=(C3-C4)*FN+C4
                  CP(NST,MST)=(CTWO-CONE)*EM+CONE
                  TOP1=(T2-T1)*FN+T1
                  IF(T1 .LT. 0. .OR. T2 .LT. 0.) TOP1=AMAX1(T1,T2)
                  TOP2=(T3-T4)*FN+T4
                  IF(T3 .LT. 0. .OR. T4 .LT. 0.) TOP2=AMAX1(T3,T4)
                  TOPP(NST,MST)=(TOP2-TOP1)*EM+TOP1
                  IF(EM .LT. .0001) GO TO 500
                  IF(TOP1.LT.0. .OR. TOP2.LT.0.) TOPP(NST,MST)=AMAX1(TOP1,TOP2)
  500             IF(CP(NST,MST) .GT. 1.E-20) GO TO 510
                  THICKP(NST,MST)=0.
                  TOPP(NST,MST)=0.
                  CP(NST,MST)=0.
  510       CONTINUE
            DO 2000 NUM=1,NIND
               NST=NLINE(NUM)
               MFST=MF(NUM)
               MLST=ML(NUM)
               DO 2000 MST=MFST,MLST
                  DDTHK = TOPP(NST,MST)+THICKP(NST,MST)-DEPTH(NST,MST)
                  IF(DDTHK .LE. 0.) GO TO 2000
                  OTHK = THICKP(NST,MST)
                  THICKP(NST,MST)=THICKP(NST,MST)-DDTHK
                  CP(NST,MST)=CP(NST,MST)*OTHK/THICKP(NST,MST)
 2000       CONTINUE
C
C     SHIFT ARRAYS AND ADD MASS LOST BY DIFFUSION LIMITING IN AVESPT
C     TO POINT OF MAXIMUM CONCENTRATION
C     ...ALSO CHECK NEW CONCENTRATION DISTRIBUTION AGAINST OLD, THE
C     DIFFERENCE IS MATERIAL WHICH WILL BE LOST OUT OF A BOUNDARY WHEN
C     ARRAYS ARE SHIFTED.
C
            CMAX=0.
            C1=0.
            C2=0.
            NCOR=1
            MCOR=1
            DO 550 NUM=1,NIND
               NST = NLINE(NUM)
               MFST = MF(NUM)
               MLST = ML(NUM)
               DO 550 MST=MFST,MLST
                  CMAX = AMAX1(CMAX,CP(NST,MST))
                  IF(CMAX .NE. CP(NST,MST)) GO TO 520
                  NCOR=NST
                  MCOR=MST
  520             CONTINUE
                  C1 = C1+C(NST,MST,K)*THICK(NST,MST,K)*AREA
                  C(NST,MST,K) = CP(NST,MST)
                  THICK(NST,MST,K)=THICKP(NST,MST)
                  C2=C2+C(NST,MST,K)*THICK(NST,MST,K)*AREA
C
C     DTOP ESTIMATES VARIATION OF CLOUD DEPTH DUE TO CONVECTION OVER
C     VARIABLE DEPTHS
C
                  CALL DINT(X(NST,MST),Z(NST,MST),DD1,DEPTH,NMAX,MMAX)
                  DTOP=(DD1-DEPTH(NST,MST))*TOP(NST,MST,K)/DD1
  550       TOP(NST,MST,K)=TOPP(NST,MST)-DTOP
            GONE = GONE+C1-C2
            IF (CMAX .LT. 1.E-20) GO TO 610
C
C     ADD MASS LOST BY DIFFUSION LIMITING
C
            C(NCOR,MCOR,K)=C(NCOR,MCOR,K)+CM/(THICK(NCOR,MCOR,K)*AREA)
            GONE = GONE-CM
  610       IF (VFALL(K) .EQ. 0.) GO TO 690
C
C     SETTLE SOLIDS....
C
            DIST = VFALL(K)*DTL
            DO 680 NUM=1,NIND
               NST = NLINE(NUM)
               MFST = MF(NUM)
               MLST = ML(NUM)
               DO 680 MST=MFST,MLST
                  IF(C(NST,MST,K).EQ.0. .OR. ICODE(NST,MST).GT.1) GO TO 680
  451             XS = DEPTH(NST,MST)-TOP(NST,MST,K)-THICK(NST,MST,K)
                  IF(XS .GE. DIST) GO TO 640
                  IF(XS .GE. 0.) GO TO 452
                  FALOUT = ABS(XS)*C(NST,MST,K)*AREA
                  ACCUM(NST,MST,K)=ACCUM(NST,MST,K)+FALOUT
                  THICK(NST,MST,K)=THICK(NST,MST,K)-ABS(XS)
                  GO TO 451
  452             IF(THICK(NST,MST,K) .LT. (DIST-XS)) GO TO 630
                  FALOUT = (DIST-XS)*AREA*C(NST,MST,K)
                  ACCUM(NST,MST,K)=ACCUM(NST,MST,K)+FALOUT
                  THICK(NST,MST,K)=THICK(NST,MST,K)-(DIST-XS)
                  TOP(NST,MST,K)=TOP(NST,MST,K)+DIST
                  GO TO 680
  630             ACCUM(NST,MST,K)=ACCUM(NST,MST,K)+THICK(NST,MST,K)*AREA*
     1             C(NST,MST,K)
                  C(NST,MST,K)=0.
                  TOP(NST,MST,K)=0.
                  THICK(NST,MST,K)=0.
                  GO TO 680
  640             TOP(NST,MST,K)=TOP(NST,MST,K)+DIST
  680       CONTINUE
  690       CONTINUE
C
C     VERTICAL DIFFUSION
C
            DO 600 NUM=1,NIND
               NST = NLINE(NUM)
               MFST = MF(NUM)
               MLST = ML(NUM)
               DO 600 MST=MFST,MLST
                  IF(C(NST,MST,K) .LT. 1.E-20) GO TO 600
                  IF(THICK(NST,MST,K) .EQ. 0.) GO TO 600
                  OTHICK = THICK(NST,MST,K)
                  OTOP = TOP(NST,MST,K)
                  CALL VDIFCO(NST,MST,OTOP,DCO,U,W,DEPTH,NMAX,MMAX)
                  DINK = 2.*SQRT(DCO*DTL)
                  IF(TOP(NST,MST,K) .GT. 0.) TOP(NST,MST,K)=TOP(NST,MST,K)-DINK
                  IF(TOP(NST,MST,K) .LT. 0.) TOP(NST,MST,K)=0.
                  OBOT = OTOP+THICK(NST,MST,K)
                  IF(OBOT .GT. DEPTH(NST,MST)) OBOT=DEPTH(NST,MST)
                  CALL VDIFCO(NST,MST,OBOT,DCO,U,W,DEPTH,NMAX,MMAX)
                  DONK = 2.*SQRT(DCO*DTL)
                  OBOT = OBOT+DONK
                  IF(OBOT .GT. DEPTH(NST,MST)) OBOT=DEPTH(NST,MST)
                  THICK(NST,MST,K)=OBOT-TOP(NST,MST,K)
                  C(NST,MST,K)=C(NST,MST,K)*OTHICK/THICK(NST,MST,K)
  600       CONTINUE
C
C     CHECK FLUID DILUTION
C
            IF(K .NE. NSP1) GO TO 698
            CMAX2=0.
            DO 696 NUM=1,NIND
               NST = NLINE(NUM)
               MFST = MF(NUM)
               MLST = ML(NUM)
               DO 696 MST=MFST,MLST
                  IF(C(NST,MST,K) .LT. CMAX2) GO TO 696
                  CMAX2=C(NST,MST,K)
                  NSTSV=NST
                  MSTSV=MST
  696       CONTINUE
            VOLUME = THICK(NSTSV,MSTSV,K)*DX**2
            VF = CMAX2*VOLUME
            CTRACE=(CINIT*VF+(VOLUME-VF)*CBACK)/VOLUME
            DR=CTRACE/CINIT
            IF(DR .GT. DC(ITD)) GO TO 698
            TD(ITD)=ETJ
            ITD=ITD+1
  698       CONTINUE
  699       CONTINUE
C
C     CHECK FOR MASS CONSERVATION
C
            TNORM=0.
            TACCUM=0.
            DO 150 NUM=1,NIND
               NST=NLINE(NUM)
               MFST=MF(NUM)
               MLST=ML(NUM)
               DO 150 MST=MFST,MLST
                  TACCUM = TACCUM+ACCUM(NST,MST,K)
  150       TNORM=TNORM+C(NST,MST,K)*THICK(NST,MST,K)*AREA
            TRANS=0.
            N1=NTCLD(K)
            IF(N1 .LT. 1) GO TO 162
            DO 160 I=1,N1
  160       TRANS = TRANS+TMASS(I,K)
  162       TOTAL = TNORM+TRANS
            WRITE (6,165) PARAM(K),ETJ,TOTAL,TNORM,TRANS,TACCUM
  165       FORMAT(//5X,11HSUMMARY OF,A10,20H DISTRIBUTION AFTER,
     1       F10.2,6H SEC. /5X,34HTOTAL SUSPENDED MATERIAL (CUFT) =,G14.5
     2      /5X,46HSUSPENDED MATERIAL IN LONG TERM GRID (CUFT) =,G14.5
     3      /5X,44HSUSPENDED MATERIAL IN SMALL CLOUDS (CUFT) =,G14.5
     4      /5X,42HTOTAL MATERIAL SETTLED TO BOTTOM (CUFT) =,G14.5
     5      /5X,42HOUTPUT SUPPRESSED WHEN NO MATERIAL PRESENT)
            IF(ABS(GONE) .GT. 1.) WRITE (6,175) GONE
  175       FORMAT(/5X,G12.5,59H CUFT OF MATERIAL LOST BY PASSING THROUGH GRI
     1      D BOUNDARIES)
            IF(.NOT.PRT) GO TO 1000
C
C     PRINT RESULTS IF REQUESTED BY INPUT DATA
C
            IF(TNORM .LT. 1.0E-06) GO TO 725
            DO 720 M=1,MMAX
               DO 720 N=1,NMAX
  720       COUT(N,M)=C(N,M,K)
            CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETJ,1,ICODE)
            DO 770 M=1,MMAX
               DO 770 N=1,NMAX
                  COUT(N,M)=TOP(N,M,K)
  770       CONTINUE
            CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETJ,3,ICODE)
            DO 780 M=1,MMAX
               DO 780 N=1,NMAX
  780       COUT(N,M)=THICK(N,M,K)
            CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETJ,4,ICODE)
  725       IF(K .EQ. NSP1) GO TO 760
            IF(TACCUM .LT. 1.0E-06) GO TO 760
            DO 730 M=1,MMAX
               DO 730 N=1,NMAX
  730       COUT(N,M)=ACCUM(N,M,K)
            CALL PRINTC(COUT,NMAX,MMAX,PARAM(K),ETJ,2,ICODE)
  760       CONTINUE
            IF(NTCLD(K) .EQ. 0) GO TO 1000
            WRITE (6,805) PARAM(K)
  805       FORMAT(18H1 SMALL CLOUDS...,A10//2X,'N',7X,'X',13X,'Z',11X,
     1       'TMASS',9X,'TSIDE',10X,'TTHK',9X,'TTOP')
            N1=NTCLD(K)
            WRITE (6,815) (N,TX(N,K),TZ(N,K),TMASS(N,K),TSIDE(N,K),TTHK(N,K)
     1      , TTOP(N,K), N=1,N1)
  815       FORMAT(1X,I2,1X,6G14.4)
 1000    CONTINUE
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE TRNSPT(ZZ,XX,YY,U,W,ICODE,NMAX,MMAX)
         DIMENSION ICODE(NMAX,MMAX), U(1), W(1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/POINT/ MST,NST
         N=ZZ*DXR+.5
         M=XX*DXR+.5
C
C     DETERMINE VELOCITIES
C
         CALL VEL(XX,YY,ZZ,UA,WA,U,W,ICODE,NMAX,MMAX)
         XX=XX-UA*DTL
         ZZ=ZZ-WA*DTL
         NE=ZZ*DXR+.5
         ME=XX*DXR+.5
C
C     CHECK THAT MARKER PARTICLE DOES NOT COME FROM OUT OF BOUNDS
C
         IF(NE .GT. 0) GO TO 1
         NE=1
         ZZ=FLOAT(NE)*DX
    1    IF(NE .LE. NMAX) GO TO 2
         NE=NMAX
         ZZ=FLOAT(NE)*DX
    2    IF(ME .GT. 0) GO TO 3
         ME=1
         XX=FLOAT(ME)*DX
    3    IF(ME .LE. MMAX) GO TO 4
         ME=MMAX
         XX=FLOAT(ME)*DX
    4    CONTINUE
         ITMP=ICODE(NE,ME)
         IF(ITMP .NE. 2) GO TO 50
         ZZ=FLOAT(N)*DX
         XX=FLOAT(M)*DX
   50    RETURN
      END
C
C=======================================================================
C
      SUBROUTINE AVESPT(N,M,CONC,THK,XTOP,ISUM,J,K,C,THICK,TOP,ICODE
     1, NMAX,MMAX,DCENT)
C
C     ROUTINE TO AVERAGE CONCENTRATIONS IN A 5 POINT STAR PATTERN
C     DIFFUSION LIMITED FROM THOSE POINTS WITH CONCENTRATIONS LESS
C     THAN EPSLN.
C     MASS LOST IN CONSEQUENCE IS ADDED IN ROUTINE
C     MAD TO POINT OF MAXIMUM CONCENTRATION.
C
         DIMENSION C(NMAX,MMAX,1),THICK(NMAX,MMAX,1),TOP(NMAX,MMAX,1)
     1   , ICODE(NMAX,MMAX)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/COR/ CM,CMAX
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         EPSLN = 2.0E-05*CMAX
         COCEAN=0.
         IF(ICODE(N,M)-2) 1,2,3
    2    CONC=0.0
         XTOP=0.
         THK=0.
         RETURN
    3    CONC=COCEAN
         XTOP=0.
         THK=0.
         GO TO 200
    1    C1=C(N,M,K)
         T1=TOP(N,M,K)
         TH1=THICK(N,M,K)
         IF(C1 .GT. EPSLN) GO TO 7
         CM=CM+C1*TH1*AREA
         C1=0.
         C(N,M,K)=0.
         TOP(N,M,K)=0.
         THICK(N,M,K)=0.
    7    CONTINUE
         C2=C(N-1,M,K)
         T2=TOP(N-1,M,K)
         TH2=DCENT-T2
         IF(TH2 .LT. 0.) TH2=0.
         IF(TH2 .GT. THICK(N-1,M,K)) TH2=THICK(N-1,M,K)
         IF(C2 .GT. EPSLN) GO TO 9
         CM=CM+C2*THICK(N-1,M,K)*AREA
         C2=0.
         C(N-1,M,K)=0.
         TOP(N-1,M,K)=0.
         THICK(N-1,M,K)=0.
    9    CONTINUE
         IF(ICODE(N-1,M) .NE. 2) GO TO 10
         C2=C1
         T2=T1
         TH2=TH1
   10    IF(ICODE(N-1,M) .NE. 3) GO TO 20
         C2=COCEAN
         T2=T1
         TH2=TH1
   20    C3=C(N+1,M,K)
         T3=TOP(N+1,M,K)
         TH3=DCENT-T3
         IF(TH3 .LT. 0.) TH3=0.
         IF(TH3 .GT. THICK(N+1,M,K)) TH3=THICK(N+1,M,K)
         IF(C3 .GT. EPSLN) GO TO 27
         CM=CM+C3*THICK(N+1,M,K)*AREA
         C3=0.
         C(N+1,M,K)=0.
         TOP(N+1,M,K)=0.
         THICK(N+1,M,K)=0.
   27    CONTINUE
         IF(ICODE(N+1,M) .NE. 2) GO TO 30
         C3=C1
         T3=T1
         TH3=TH1
   30    IF(ICODE(N+1,M) .NE. 3) GO TO 40
         C3=COCEAN
         T3=T1
         TH3=TH1
   40    C4=C(N,M+1,K)
         T4=TOP(N,M+1,K)
         TH4=DCENT-T4
         IF(TH4 .LT. 0.) TH4=0.
         IF(TH4 .GT. THICK(N,M+1,K)) TH4=THICK(N,M+1,K)
         IF(C4 .GT. EPSLN) GO TO 47
         CM=CM+C4*THICK(N,M+1,K)*AREA
         C4=0.
         C(N,M+1,K)=0.
         TOP(N,M+1,K)=0.
         THICK(N,M+1,K)=0.
   47    CONTINUE
         IF(ICODE(N,M+1) .NE. 2) GO TO 50
         C4=C1
         T4=T1
         TH4=TH1
   50    IF(ICODE(N,M+1) .NE. 3) GO TO 60
         C4=COCEAN
         T4=T1
         TH4=TH1
   60    C5=C(N,M-1,K)
         T5=TOP(N,M-1,K)
         TH5=DCENT-T5
         IF(TH5 .LT. 0.) TH5=0.
         IF(TH5 .GT. THICK(N,M-1,K)) TH5=THICK(N,M-1,K)
         IF(C5 .GT. EPSLN) GO TO 67
         CM=CM+C5*THICK(N,M-1,K)*AREA
         C5=0.
         C(N,M-1,K)=0.
         TOP(N,M-1,K)=0.
         THICK(N,M-1,K)=0.
   67    CONTINUE
         IF(ICODE(N,M-1) .NE. 2) GO TO 70
         C5=C1
         T5=T1
         TH5=TH1
   70    IF(ICODE(N,M-1) .NE. 3) GO TO 80
         C5=COCEAN
         T5=T1
         TH5=TH1
   80    CONTINUE
C
C     SET THICKNESS AND TOP OF NEW ELEMENT TO AVERAGE OF CONTRIBUTING ELEMENTS
C
         INUM=0
         TOPSUM=0.
         IF(TH1 .EQ. 0.) GO TO 83
         INUM=INUM+1
         TOPSUM=TOPSUM+T1
   83    IF(TH2 .EQ. 0.) GO TO 84
         INUM=INUM+1
         TOPSUM=TOPSUM+T2
   84    IF(TH3 .EQ. 0.) GO TO 86
         INUM=INUM+1
         TOPSUM=TOPSUM+T3
   86    IF(TH4 .EQ. 0.) GO TO 88
         INUM=INUM+1
         TOPSUM=TOPSUM+T4
   88    IF(TH5 .EQ. 0.) GO TO 92
         INUM=INUM+1
         TOPSUM=TOPSUM+T5
   92    IF(INUM .EQ. 0) GO TO 190
         THK=AMAX1(TH1,TH2,TH3,TH4,TH5)
         XTOP=TOPSUM/FLOAT(INUM)
         IF(XTOP+THK .GT. DCENT) XTOP=DCENT-THK
C
C     5 POINT AVERAGING FOLLOWS
C
         CEF1=C1*TH1/THK
         CEF2=C2*TH2/THK
         CEF3=C3*TH3/THK
         CEF4=C4*TH4/THK
         CEF5=C5*TH5/THK
         CONC = CEF1-DIF*(4.*CEF1-(CEF2+CEF3+CEF4+CEF5))
         GO TO 200
  190    CONTINUE
         CONC=0.
         THK=0.
         XTOP=0.
  200    ISUM = ISUM+2**J
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE PRINTC(COUT,NMX,MMX,PARAM,ETJ,LBL,ICODE)
C
C     ROUTINE FOR ALPHAMERIC PRINTING OF LONG TERM ARRAYS
C
         DIMENSION COUT(NMX,MMX),ICODE(NMX,MMX)
         DIMENSION IPR(128), NUM(10)
         DATA IBLNK,ILND,ISEA,IPLUS,IDOT/1H ,1HL,1H ,1H+,1H./
C NON-ANSI
         DATA (NUM(I),I=1,10)/'0','1','2','3','4','5','6','7','8','9'/
C
C     SCALE ARRAY FOR OPTIMUM PRINTOUT
C
         PMAX=0.
         DO 50 M=1,MMX
            DO 50 N=1,NMX
   50    PMAX = AMAX1(PMAX,COUT(N,M))
         P10=1.
         IP10=1
         IF(PMAX .GT. 0.) IP10=ALOG10(PMAX)
         IF(IP10 .GE. 3) P10=10.**(IP10-2)
         IF(IP10 .LT. 0) P10=10.**(IP10-1)
         DO 60 M=1,MMX
            DO 60 N=1,NMX
   60    COUT(N,M)=COUT(N,M)/P10
         GO TO (150,200,250,300,350,400,450),LBL
  150    WRITE (6,155) PARAM,ETJ
  155    FORMAT(19H1CONCENTRATIONS OF,A10,29H (VOLUME RATIO) IN THE CLOUD
     1   ,F10.2,27H SECONDS AFTER START OF JET)
         GO TO 500
  200    WRITE (6,215) PARAM,ETJ
  215    FORMAT(24H1BOTTOM ACCUMULATION OF,A10,20H (CUFT/GRID SQUARE),
     1    F10.2,27H SECONDS AFTER START OF JET)
         GO TO 500
  250    WRITE (6,255) PARAM,ETJ
  255    FORMAT(20H1POSITION OF TOP OF,A10,28H CLOUD (FEET BELOW SURFACE)
     1   ,F10.2,27H SECONDS AFTER START OF JET)
         GO TO 500
  300    WRITE (6,305) PARAM,ETJ
  305    FORMAT(14H1THICKNESS OF,A10,14H CLOUD (FEET),F10.2,
     1    27H SECONDS AFTER START OF JET)
         GO TO 500
  350    WRITE (6,355) PARAM,ETJ
  355    FORMAT(19H1THICKNESS (FT) OF,A10,24H ACCUMULATED ON BOTTOM,
     1    F10.2,27H SECONDS AFTER START OF JET)
         GO TO 500
  400    WRITE (6,405) ETJ
  405    FORMAT(59H1TOTAL ACCUMULATED SOLID VOLUME ON BOTTOM(CUFT/GRID SQ
     1   ),F10.2,27H SECONDS AFTER START OF JET)
         GO TO 500
  450    WRITE (6,455) ETJ
  455    FORMAT(48H1TOTAL THICKNESS (FT) OF NEW MATERIAL ON BOTTOM,
     1    F10.2,27H SECONDS AFTER START OF JET)
  500    CONTINUE
         WRITE(6,505) P10
  505    FORMAT(33H... MULTIPLY DISPLAYED VALUES BY,G11.4,5X,58H(LEGEND..
     1   . .LT. .01, + .LT. .0001, 0 .LT. .000001))
C
C     SET UP PAGE DIVISIONS FOR PRINTING OF ARRAY
C
         NCP=NMX/32
         IF(NCP .LT. 1) NCP=1
         IN2=0
         DO 1000 IP=1,NCP
            IN1=IN2+1
            IN2=IN1+31
            IF(NMX .LT. IN2) IN2=NMX
            WRITE (6,605) (N,N=IN1,IN2)
  605       FORMAT(2X,5H M N=,32I4)
            DO 100 M=1,MMX
               DO 10 I=1,128
   10          IPR(I)=IBLNK
               DO 1 N=IN1,IN2
                  J=4*(N-IN1+1)
                  L=COUT(N,M)+.5
                  IF(ICODE(N,M) .EQ. 2) GO TO 2
                  IF(ICODE(N,M) .EQ. 3) GO TO 7
                  IF(L .GE. 1000) GO TO 6
                  IF(L .GE. 100) GO TO 3
                  IF(L .GE. 10) GO TO 4
                  IF(COUT(N,M) .GE. 1.) GO TO 30
                  IF(COUT(N,M) .LT. 1.0E-06) GO TO 25
                  IF(COUT(N,M) .LT. .0001) GO TO 18
                  IF(COUT(N,M) .LT. .01) GO TO 8
                  IPR(J-2)=IDOT
                  N1=10.*COUT(N,M)
                  IPR(J-1)=NUM(N1+1)
                  IF(COUT(N,M) .LT. 1.) GO TO 20
                  N2=100.*COUT(N,M)-FLOAT(10*N1)
                  IPR(J)=NUM(N2+1)
                  GO TO 1
   30             LF=COUT(N,M)
                  LL=10.*(COUT(N,M)-FLOAT(LF))
                  IPR(J)=NUM(LL+1)
                  IPR(J-1)=IDOT
                  IPR(J-2)=NUM(LF+1)
                  GO TO 1
   25             IPR(J)=NUM(1)
                  GO TO 1
   20             IPR(J-2)=IDOT
                  IPR(J-1)=NUM(1)
                  N2=100.*COUT(N,M)
                  IPR(J)=NUM(N2+1)
                  GO TO 1
    2             IPR(J)=ILND
                  IPR(J-1)=ILND
                  IPR(J-2)=ILND
                  IPR(J-3)=ILND
                  GO TO 1
    7             IPR(J)=ISEA
                  IPR(J-1)=ISEA
                  IPR(J-2)=ISEA
                  IPR(J-3)=ISEA
                  GO TO 1
    6             N1=L/1000
                  IPR(J-3)=NUM(N1+1)
                  N1=L-1000*N1
                  N2=N1/100
                  IPR(J-2)=NUM(N2+1)
                  N2=N1-100*N2
                  N3=N2/10
                  IPR(J-1)=NUM(N3+1)
                  N1=N2-10*N3
                  IPR(J)=NUM(N1+1)
                  GO TO 1
    3             N1=L/100
                  IPR(J-2)=NUM(N1+1)
                  N1=L-100*N1
                  N2=N1/10
                  IPR(J-1)=NUM(N2+1)
                  N1=N1-10*N2
                  IPR(J)=NUM(N1+1)
                  GO TO 1
    4             IF(COUT(N,M) .LT. 10.) GO TO 30
                  N1=L/10
                  IPR(J-1)=NUM(N1+1)
                  N1=L-10*N1
                  IPR(J)=NUM(N1+1)
                  GO TO 1
    8             IPR(J)=IPLUS
                  GO TO 1
   18             IPR(J)=IDOT
    1          CONTINUE
               WRITE (6,205) M,(IPR(I),I=1,4*(IN2-IN1+1))
  205          FORMAT(/1X,I3,1X,128A1)
  100       CONTINUE
            IF(IP .LT. NCP) WRITE(6,705)
  705       FORMAT(1H1//)
 1000    CONTINUE
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE DINT(XD,ZD,DEP,DEPTH,NMAX,MMAX)
C
C     ROUTINE TO INTERPOLATE ON DEPTH GRID FOR DEPTH AT AN ARBITRARY
C     POINT IN THE ESTUARY
C     GIVEN POSITION (XD,ZD) IN ESTUARY COORDINATES, RETURNS DEPTH(DEP)
C
         DIMENSION DEPTH(NMAX,MMAX)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         ZN=ZD*DXR
         XM=XD*DXR
         N=ZN+.0001
         M=XM+.0001
         FN=ZN-FLOAT(N)
         EM=XM-FLOAT(M)
         IF(FN .LT. .0001) FN=0.
         IF(EM .LT. .0001) EM=0.
         DEP1=DEPTH(N,M)
         DEP2=DEP1
         IF(N .LT. NMAX) DEP2=DEPTH(N+1,M)
         D1=DEP1+FN*(DEP2-DEP1)
         D2=D1
         IF(M .GE. MMAX) GO TO 100
         DEP3=DEPTH(N,M+1)
         DEP4=DEP3
         IF(N .LT. NMAX) DEP4=DEPTH(N+1,M+1)
         D2=DEP3+FN*(DEP4-DEP3)
  100    DEP=D1+EM*(D2-D1)
         RETURN
      END
C
C=======================================================================
C
      SUBROUTINE VDIFCO(N,M,YY,AKY,U,W,DEPTH,NMAX,MMAX)
C
C     ROUTINE TO COMPUTE VERTICAL DIFFUSION COEFFICIENTS FOR JET MODEL
C
         DIMENSION DEPTH(NMAX,MMAX), U(1), W(1)
         COMMON/BAY/ DX,DTL,XBARGE,ZBARGE,DXH,DXR,AREA
         COMMON/GPI/ G,PI
         COMMON/LTCOF/ ALAMDA,DIF,AKYO
         COMMON/AMB/ NROA,IY,Y(8),ROA(8),H
C
C     DETERMINE DENSITY AND VELOCITY GRADIENTS
C
         IY=0
   10    IY=IY+1
         IF(YY.GE.Y(IY) .AND. YY.LE.Y(IY+1)) GO TO 20
         IF(IY .LT. NROA) GO TO 10
   20    RHO=ROA(IY)+(ROA(IY+1)-ROA(IY))*(YY-Y(IY))/(Y(IY+1)-Y(IY))
         DENGRA=(ROA(IY+1)-ROA(IY))/(Y(IY+1)-Y(IY))
         Y1=YY+1.
         Y2=YY-1.
         XX=FLOAT(M)*DX
         ZZ=FLOAT(N)*DX
         CALL VEL(XX,Y1,ZZ,UA1,WA1,U,W,ICODE,NMAX,MMAX)
         CALL VEL(XX,Y2,ZZ,UA2,WA2,U,W,ICODE,NMAX,MMAX)
         VELGRA = SQRT((UA2-UA1)**2+(WA2-WA1)**2)/2.
         IF(VELGRA .NE. 0.) GO TO 40
C
C     USE PRITCHARD DEFINITION OF RICHARDSON NO.
C
         CALL VEL(XX,0.,ZZ,UA1,WA1,U,W,ICODE,NMAX,MMAX)
         VELGRA = 0.7*SQRT(UA1**2+WA1**2)/DEPTH(N,M)
         IF(VELGRA .NE. 0.) GO TO 40
         AKY=0.
         RETURN
C
C     DETERMINE RICHARDSON NO.
C
   40    RI=G*DENGRA/(RHO*VELGRA**2)
C
C     CHECK BOUNDS
C
         IF(RI .LT. 0.) RI=0.
         IF(RI .GT. 3.999999) RI=3.999999
C
C     COMPUTE DIFFUSION COEFFICIENT
C
         AKY = AKYO*(1.-.25*RI)
         RETURN
      END
